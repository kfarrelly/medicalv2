{"version":3,"sources":["webpack:///./src/app/admin/dashboard/qrcodescanner/distributorqr/distributorqr.component.css","webpack:///./src/app/admin/dashboard/qrcodescanner/distributorqr/distributorqr.component.html","webpack:///./src/app/admin/dashboard/qrcodescanner/distributorqr/distributorqr.component.ts","webpack:///./src/app/admin/dashboard/qrcodescanner/distributorqr/distributorqr.module.ts","webpack:///./src/app/admin/dashboard/qrcodescanner/distributorqr/distributorqr.ts"],"names":[],"mappings":"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","file":"admin-dashboard-qrcodescanner-distributorqr-distributorqr-module.js","sourcesContent":["module.exports = \"\\n.container{\\n    min-height: 100vh;\\n    max-width: 100%;\\n    color: white;\\n    background-image: url('seafood-watermark.png'), linear-gradient(-168deg, #4C6677 0%, #293545 100%);\\n    background-size: cover;\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    justify-content: center;\\n}\\n\\n.forgot-password-logo{\\n    background-image: url('logo.PNG');\\n    height: 25px;\\n    width: 100%;\\n    background-position: center;\\n    background-size: contain;\\n    background-repeat: no-repeat;\\n}\\n\\n.forgot-password-box {\\n    /* border: 10px solid #2a4058; */\\n    background-image: url('overview-seafood-bg.jpg'); \\n    background-size: cover;\\n    padding: 5% 3% 5% 3%;\\n    /* margin-top: 100px; */\\n    box-shadow: 0 8px 10px -5px rgba(0,0,0,.2), 0 16px 24px 2px rgba(0,0,0,.14), 0 6px 30px 5px rgba(0,0,0,.12);\\n    border-radius: 25px;\\n}\\n\\nh3{\\ntext-align: center;\\ncolor: white\\n\\n}\\n\\n.jumbotron {\\n \\n    background-color: black;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vZGFzaGJvYXJkL3FyY29kZXNjYW5uZXIvZGlzdHJpYnV0b3Jxci9kaXN0cmlidXRvcnFyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0lBQ0ksaUJBQWlCO0lBQ2pCLGVBQWU7SUFDZixZQUFZO0lBQ1osa0dBQXNIO0lBQ3RILHNCQUFzQjtJQUN0QixhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLG1CQUFtQjtJQUNuQix1QkFBdUI7QUFDM0I7O0FBRUE7SUFDSSxpQ0FBcUQ7SUFDckQsWUFBWTtJQUNaLFdBQVc7SUFDWCwyQkFBMkI7SUFDM0Isd0JBQXdCO0lBQ3hCLDRCQUE0QjtBQUNoQzs7QUFFQTtJQUNJLGdDQUFnQztJQUNoQyxnREFBb0U7SUFDcEUsc0JBQXNCO0lBQ3RCLG9CQUFvQjtJQUNwQix1QkFBdUI7SUFDdkIsMkdBQTJHO0lBQzNHLG1CQUFtQjtBQUN2Qjs7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjs7QUFFQTs7QUFDQTs7SUFFSSx1QkFBdUI7QUFDM0IiLCJmaWxlIjoic3JjL2FwcC9hZG1pbi9kYXNoYm9hcmQvcXJjb2Rlc2Nhbm5lci9kaXN0cmlidXRvcnFyL2Rpc3RyaWJ1dG9ycXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLmNvbnRhaW5lcntcbiAgICBtaW4taGVpZ2h0OiAxMDB2aDtcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi8uLi8uLi8uLi8uLi9hc3NldHMvc2VhZm9vZC13YXRlcm1hcmsucG5nKSwgbGluZWFyLWdyYWRpZW50KC0xNjhkZWcsICM0QzY2NzcgMCUsICMyOTM1NDUgMTAwJSk7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cblxuLmZvcmdvdC1wYXNzd29yZC1sb2dve1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi8uLi8uLi8uLi8uLi9hc3NldHMvbG9nby5QTkcpO1xuICAgIGhlaWdodDogMjVweDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb250YWluO1xuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG59XG5cbi5mb3Jnb3QtcGFzc3dvcmQtYm94IHtcbiAgICAvKiBib3JkZXI6IDEwcHggc29saWQgIzJhNDA1ODsgKi9cbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vLi4vLi4vLi4vLi4vYXNzZXRzL292ZXJ2aWV3LXNlYWZvb2QtYmcuanBnKTsgXG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICBwYWRkaW5nOiA1JSAzJSA1JSAzJTtcbiAgICAvKiBtYXJnaW4tdG9wOiAxMDBweDsgKi9cbiAgICBib3gtc2hhZG93OiAwIDhweCAxMHB4IC01cHggcmdiYSgwLDAsMCwuMiksIDAgMTZweCAyNHB4IDJweCByZ2JhKDAsMCwwLC4xNCksIDAgNnB4IDMwcHggNXB4IHJnYmEoMCwwLDAsLjEyKTtcbiAgICBib3JkZXItcmFkaXVzOiAyNXB4O1xufVxuaDN7XG50ZXh0LWFsaWduOiBjZW50ZXI7XG5jb2xvcjogd2hpdGVcblxufVxuLmp1bWJvdHJvbiB7XG4gXG4gICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XG59Il19 */\"","module.exports = \"<div class=\\\"container\\\">\\n\\t<div class=\\\"row w-100\\\">\\n\\t\\t<div class=\\\"col-md-4\\\"></div>\\n\\t\\t<div class=\\\"col-md-4 forgot-password-box\\\">\\n\\t\\t\\t<div class=\\\"form-group forgot-password-logo\\\">\\n\\t\\t\\t</div>\\n\\t\\t\\t<form [formGroup]=\\\"registrationForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\n\\t\\t\\t\\t\\t<label style=\\\"color: white\\\">Email-Id</label><br>\\n\\n\\t\\t\\t\\t\\t<input #br type=\\\"email\\\" placeholder=\\\"Enter Your Email Id\\\"\\n\\t\\t\\t\\t\\t\\tclass=\\\"form-control required custom-input\\\">\\n\\t\\t\\t\\t\\t<br>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"error-message\\\"\\n\\t\\t\\t\\t\\t\\t*ngIf=\\\"registrationForm.get('emailval').touched && registrationForm.get('email').hasError('required')\\\">\\n\\t\\t\\t\\t\\t\\tThe email is required.\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<!-- <div class=\\\"error-message\\\" *ngIf=\\\"registrationForm.get('emailval').touched && registrationForm.get('email').hasError('pattern')\\\">  \\n\\t\\t\\t\\t\\t\\t\\tThe email format should be <i>['@domain.com']</i>  </div> -->\\n\\t\\t\\t\\t\\t<div class=\\\"form-group mt-4 text-center\\\">\\n\\t\\t\\t\\t\\t\\t<button (click)=\\\"sendRequest(br.value)\\\" (click)=\\\"validateform()\\\"\\n\\t\\t\\t\\t\\t\\t\\tclass=\\\"btn btn-primary gradient-btn align-items-center btn btn-primary d-flex gradient-btn justify-content-center\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"text mr-2 ml-2\\\" *ngIf=\\\"!loading\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\tSubmit\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"d-flex align-items-center\\\" *ngIf=\\\"loading\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"spinner-border text-secondary\\\" role=\\\"status\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"sr-only\\\">Loading...</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"text mr-2 ml-2\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tLoading...\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<p class=\\\"text-center\\\">\\n\\t\\t\\t\\t\\t\\t<a [routerLink]=\\\"'/login'\\\" class=\\\"link \\\" style=\\\"margin-left:10px\\\"> Click here to Login</a>\\n\\t\\t\\t\\t\\t</p>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</form>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n\\n<!-- <div class=\\\"jumbotron\\\">\\n\\t<div class=\\\"container\\\">\\n\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t<div class=\\\"col-md-3\\\"></div>\\n\\t\\t\\t<div class=\\\"col-md-6 \\\">\\n\\t\\t\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n </div> -->\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { QrCodeReader } from 'src/app/qr-code-reader.service';\nimport { Subscription } from 'rxjs';\nimport { Distributor } from './distributorqr';\n\nimport { FormGroup, FormControl, Validators, ReactiveFormsModule } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-distributorqr',\n  templateUrl: './distributorqr.component.html',\n  styleUrls: ['./distributorqr.component.css']\n})\nexport class DistributorqrComponent implements OnInit {\n  // Write regular expression to validate email id\n  EMAIL_REGEX = \"[a-z0-9!#$%&'*+\\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*\";\n  // Create object of FormGroup\n  registrationForm: FormGroup;\n  barcodevalue: any;\n  subscription: Subscription;\n  pharma1: any = Distributor;\n  base;\n  call;\n\n\n  loading = false\n  constructor(private httpuser: AuthService, private qrReader: QrCodeReader) { }\n\n  ngOnInit() {\n    // Initilize formgroup throgh formcontrol and apply validations\n    this.registrationForm = new FormGroup({\n      emailval: new FormControl('', [Validators.required, Validators.pattern(this.EMAIL_REGEX)])\n    })\n  }\n  validateform() {\n    // As we know that when user does not fill any value and click on submit button in that \n    // condition form will be invalid \n    if (this.registrationForm.invalid) {\n      // Validation errors are called when user put focus on control but does't fill any value or wrong values\n      // So we are making our control touched\n\n      this.registrationForm.get('emailval').markAsTouched();\n\n      // return false to prevent form submit\n      return false;\n    }\n  }\n\n  onSubmit(formvalue) {\n    console.log(formvalue);\n    console.log(this.registrationForm.value);\n  }\n\n  sendRequest(mail) {\n\n\n    if (mail == '' || !mail.match(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/)) {\n      alert(\"Kindly add valid email address\");\n      return false;\n    }\n\n    this.loading = true;\n    console.log(mail);\n    // this.pharma1 = new Distributor(mail);\n    this.base = this.httpuser.distributorqr(mail);\n    this.call = this.base.subscribe(\n      data => {\n        alert(\"Mail has been Sent!!\");\n        this.loading = false;\n\n      },\n      err => {\n        this.loading = false;\n        console.log(err);\n      },\n      () => {\n        console.log(\"Mail has been Sent!!\");\n      }\n    );\n  }\n  // onFileChange(event){\n  //   const file = event.target.files[0];\n  //   this.subscription = this.qrReader.decode(file)\n  //    .subscribe(decodedString =>{\n  //    this.barcodevalue= decodedString;\n  //   console.log(decodedString)\n  //   });\n  // }\n\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { DistributorqrComponent } from \"./distributorqr.component\";\n\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: DistributorqrComponent\n    },\n];\n\n@NgModule({\n    imports: [\n        FormsModule,\n        CommonModule,\n        ReactiveFormsModule.withConfig({warnOnNgModelWithFormControl: 'never'}),\n        RouterModule.forChild(routes)\n    ],\n    declarations:[DistributorqrComponent]\n})\nexport class DistributorqrModule { }","export class Distributor {\n\n    mailid:string;\n \n\n  constructor(\n   \n\n    mailid:string\n   \n  ) {\n      this.mailid =mailid;\n  }\n      \n}\n"],"sourceRoot":""}