{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin/agent/agent-create/agent-create.component.css","webpack:///./src/app/admin/agent/agent-create/agent-create.component.html","webpack:///./src/app/admin/agent/agent-create/agent-create.component.ts","webpack:///./src/app/admin/agent/agent-detail/agent-detail.component.css","webpack:///./src/app/admin/agent/agent-detail/agent-detail.component.html","webpack:///./src/app/admin/agent/agent-detail/agent-detail.component.ts","webpack:///./src/app/admin/agent/agent-edit/agent-edit.component.css","webpack:///./src/app/admin/agent/agent-edit/agent-edit.component.html","webpack:///./src/app/admin/agent/agent-edit/agent-edit.component.ts","webpack:///./src/app/admin/agent/agent-list/agent-list.component.css","webpack:///./src/app/admin/agent/agent-list/agent-list.component.html","webpack:///./src/app/admin/agent/agent-list/agent-list.component.ts","webpack:///./src/app/admin/dashboard/create-user/create-user.component.css","webpack:///./src/app/admin/dashboard/create-user/create-user.component.html","webpack:///./src/app/admin/dashboard/create-user/create-user.component.ts","webpack:///./src/app/admin/dashboard/create-user/newuser.ts","webpack:///./src/app/admin/dashboard/dashboard.component.css","webpack:///./src/app/admin/dashboard/dashboard.component.html","webpack:///./src/app/admin/dashboard/dashboard.component.ts","webpack:///./src/app/admin/dashboard/distrubuter/dist.ts","webpack:///./src/app/admin/dashboard/distrubuter/distrubuter.component.css","webpack:///./src/app/admin/dashboard/distrubuter/distrubuter.component.html","webpack:///./src/app/admin/dashboard/distrubuter/distrubuter.component.ts","webpack:///./src/app/admin/dashboard/manufacturer/manufacture.ts","webpack:///./src/app/admin/dashboard/manufacturer/manufacturer.component.css","webpack:///./src/app/admin/dashboard/manufacturer/manufacturer.component.html","webpack:///./src/app/admin/dashboard/manufacturer/manufacturer.component.ts","webpack:///./src/app/admin/dashboard/packagetransporter/packagetransporter.component.css","webpack:///./src/app/admin/dashboard/packagetransporter/packagetransporter.component.html","webpack:///./src/app/admin/dashboard/packagetransporter/packagetransporter.component.ts","webpack:///./src/app/admin/dashboard/pharma/pharma.component.css","webpack:///./src/app/admin/dashboard/pharma/pharma.component.html","webpack:///./src/app/admin/dashboard/pharma/pharma.component.ts","webpack:///./src/app/admin/dashboard/pharma/pharma.ts","webpack:///./src/app/admin/dashboard/qrcodescanner/pharmaqr/pharmaqr.component.css","webpack:///./src/app/admin/dashboard/qrcodescanner/pharmaqr/pharmaqr.component.html","webpack:///./src/app/admin/dashboard/qrcodescanner/pharmaqr/pharmaqr.component.ts","webpack:///./src/app/admin/dashboard/qrcodescanner/transporterqr/transporterqr.component.css","webpack:///./src/app/admin/dashboard/qrcodescanner/transporterqr/transporterqr.component.html","webpack:///./src/app/admin/dashboard/qrcodescanner/transporterqr/transporterqr.component.ts","webpack:///./src/app/admin/dashboard/qrcodescanner/wholesalerqr/wholesalerqr.component.css","webpack:///./src/app/admin/dashboard/qrcodescanner/wholesalerqr/wholesalerqr.component.html","webpack:///./src/app/admin/dashboard/qrcodescanner/wholesalerqr/wholesalerqr.component.ts","webpack:///./src/app/admin/dashboard/transporter/transporter.component.css","webpack:///./src/app/admin/dashboard/transporter/transporter.component.html","webpack:///./src/app/admin/dashboard/transporter/transporter.component.ts","webpack:///./src/app/admin/dashboard/wholesaler/wholesaler.component.css","webpack:///./src/app/admin/dashboard/wholesaler/wholesaler.component.html","webpack:///./src/app/admin/dashboard/wholesaler/wholesaler.component.ts","webpack:///./src/app/admin/dashboard/wholesaler/wholesaler.ts","webpack:///./src/app/admin/medicine/medicine-create/addmedicine.ts","webpack:///./src/app/admin/medicine/medicine-create/addmedicine2.ts","webpack:///./src/app/admin/medicine/medicine-create/medicine-create.component.css","webpack:///./src/app/admin/medicine/medicine-create/medicine-create.component.html","webpack:///./src/app/admin/medicine/medicine-create/medicine-create.component.ts","webpack:///./src/app/admin/medicine/medicine-dashboard/medicine-dashboard.component.css","webpack:///./src/app/admin/medicine/medicine-dashboard/medicine-dashboard.component.html","webpack:///./src/app/admin/medicine/medicine-dashboard/medicine-dashboard.component.ts","webpack:///./src/app/admin/medicine/medicine-dashboard/transection.ts","webpack:///./src/app/admin/medicine/medicine-detail/medicine-detail.component.css","webpack:///./src/app/admin/medicine/medicine-detail/medicine-detail.component.html","webpack:///./src/app/admin/medicine/medicine-detail/medicine-detail.component.ts","webpack:///./src/app/admin/medicine/medicine-details-dashboard/medicine-details-dashboard.component.css","webpack:///./src/app/admin/medicine/medicine-details-dashboard/medicine-details-dashboard.component.html","webpack:///./src/app/admin/medicine/medicine-details-dashboard/medicine-details-dashboard.component.ts","webpack:///./src/app/admin/medicine/medicine-edit/medicine-edit.component.css","webpack:///./src/app/admin/medicine/medicine-edit/medicine-edit.component.html","webpack:///./src/app/admin/medicine/medicine-edit/medicine-edit.component.ts","webpack:///./src/app/admin/medicine/medicine-list/medicine-list.component.css","webpack:///./src/app/admin/medicine/medicine-list/medicine-list.component.html","webpack:///./src/app/admin/medicine/medicine-list/medicine-list.component.ts","webpack:///./src/app/admin/medicine/medicine-list/transection.ts","webpack:///./src/app/admin/medicine/medicine-report/medicine-report.component.css","webpack:///./src/app/admin/medicine/medicine-report/medicine-report.component.html","webpack:///./src/app/admin/medicine/medicine-report/medicine-report.component.ts","webpack:///./src/app/admin/medicine/medicine-report/transection.ts","webpack:///./src/app/admin/medicine/package-create/addpackage.ts","webpack:///./src/app/admin/medicine/package-create/addpackage2.ts","webpack:///./src/app/admin/medicine/package-create/package-create.component.css","webpack:///./src/app/admin/medicine/package-create/package-create.component.html","webpack:///./src/app/admin/medicine/package-create/package-create.component.ts","webpack:///./src/app/admin/medicine/package-detail/package-detail.component.css","webpack:///./src/app/admin/medicine/package-detail/package-detail.component.html","webpack:///./src/app/admin/medicine/package-detail/package-detail.component.ts","webpack:///./src/app/admin/medicine/package-list/package-list.component.css","webpack:///./src/app/admin/medicine/package-list/package-list.component.html","webpack:///./src/app/admin/medicine/package-list/package-list.component.ts","webpack:///./src/app/admin/medicine/package-list/transection.ts","webpack:///./src/app/admin/medicine/package-report/package-report.component.css","webpack:///./src/app/admin/medicine/package-report/package-report.component.html","webpack:///./src/app/admin/medicine/package-report/package-report.component.ts","webpack:///./src/app/admin/medicine/package-report/transection.ts","webpack:///./src/app/admin/notification/notification.component.css","webpack:///./src/app/admin/notification/notification.component.html","webpack:///./src/app/admin/notification/notification.component.ts","webpack:///./src/app/admin/userrole/distributordashboard/distributordashboard.component.css","webpack:///./src/app/admin/userrole/distributordashboard/distributordashboard.component.html","webpack:///./src/app/admin/userrole/distributordashboard/distributordashboard.component.ts","webpack:///./src/app/admin/userrole/manufacturedashboard/manufacturedashboard.component.css","webpack:///./src/app/admin/userrole/manufacturedashboard/manufacturedashboard.component.html","webpack:///./src/app/admin/userrole/manufacturedashboard/manufacturedashboard.component.ts","webpack:///./src/app/admin/userrole/pharmadashboard/pharmadashboard.component.css","webpack:///./src/app/admin/userrole/pharmadashboard/pharmadashboard.component.html","webpack:///./src/app/admin/userrole/pharmadashboard/pharmadashboard.component.ts","webpack:///./src/app/admin/userrole/transporterdashboard/transporterdashboard.component.css","webpack:///./src/app/admin/userrole/transporterdashboard/transporterdashboard.component.html","webpack:///./src/app/admin/userrole/transporterdashboard/transporterdashboard.component.ts","webpack:///./src/app/admin/userrole/wholesalerdashboard/wholesalerdashboard.component.css","webpack:///./src/app/admin/userrole/wholesalerdashboard/wholesalerdashboard.component.html","webpack:///./src/app/admin/userrole/wholesalerdashboard/wholesalerdashboard.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/footer/footer.component.css","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/not-found/not-found.component.css","webpack:///./src/app/not-found/not-found.component.html","webpack:///./src/app/not-found/not-found.component.ts","webpack:///./src/app/qr-code-reader.service.ts","webpack:///./src/app/send/recievepackagedistributor/recievepackagedistributor.component.css","webpack:///./src/app/send/recievepackagedistributor/recievepackagedistributor.component.html","webpack:///./src/app/send/recievepackagedistributor/recievepackagedistributor.component.ts","webpack:///./src/app/send/recievepackagedistributorreport/recievepackagedistributorreport.component.css","webpack:///./src/app/send/recievepackagedistributorreport/recievepackagedistributorreport.component.html","webpack:///./src/app/send/recievepackagedistributorreport/recievepackagedistributorreport.component.ts","webpack:///./src/app/send/recievepackagepharma/recievepackagepharma.component.css","webpack:///./src/app/send/recievepackagepharma/recievepackagepharma.component.html","webpack:///./src/app/send/recievepackagepharma/recievepackagepharma.component.ts","webpack:///./src/app/send/recievepackagepharmareport/recievepackagepharmareport.component.css","webpack:///./src/app/send/recievepackagepharmareport/recievepackagepharmareport.component.html","webpack:///./src/app/send/recievepackagepharmareport/recievepackagepharmareport.component.ts","webpack:///./src/app/send/recievepackagewholesaler/recievepackagewholesaler.component.css","webpack:///./src/app/send/recievepackagewholesaler/recievepackagewholesaler.component.html","webpack:///./src/app/send/recievepackagewholesaler/recievepackagewholesaler.component.ts","webpack:///./src/app/send/recievepackagewholesalerreport/recievepackagewholesalerreport.component.css","webpack:///./src/app/send/recievepackagewholesalerreport/recievepackagewholesalerreport.component.html","webpack:///./src/app/send/recievepackagewholesalerreport/recievepackagewholesalerreport.component.ts","webpack:///./src/app/send/senddistributor/senddistributor.component.css","webpack:///./src/app/send/senddistributor/senddistributor.component.html","webpack:///./src/app/send/senddistributor/senddistributor.component.ts","webpack:///./src/app/send/senddistributordashboard/senddistributordashboard.component.css","webpack:///./src/app/send/senddistributordashboard/senddistributordashboard.component.html","webpack:///./src/app/send/senddistributordashboard/senddistributordashboard.component.ts","webpack:///./src/app/send/senddistributorreport/senddistributorreport.component.css","webpack:///./src/app/send/senddistributorreport/senddistributorreport.component.html","webpack:///./src/app/send/senddistributorreport/senddistributorreport.component.ts","webpack:///./src/app/send/sendpharma/sendpharma.component.css","webpack:///./src/app/send/sendpharma/sendpharma.component.html","webpack:///./src/app/send/sendpharma/sendpharma.component.ts","webpack:///./src/app/send/sendpharmadashboard/sendpharmadashboard.component.css","webpack:///./src/app/send/sendpharmadashboard/sendpharmadashboard.component.html","webpack:///./src/app/send/sendpharmadashboard/sendpharmadashboard.component.ts","webpack:///./src/app/send/sendpharmareport/sendpharmareport.component.css","webpack:///./src/app/send/sendpharmareport/sendpharmareport.component.html","webpack:///./src/app/send/sendpharmareport/sendpharmareport.component.ts","webpack:///./src/app/send/sendwholesaler/sendwholesaler.component.css","webpack:///./src/app/send/sendwholesaler/sendwholesaler.component.html","webpack:///./src/app/send/sendwholesaler/sendwholesaler.component.ts","webpack:///./src/app/send/sendwholesalerdashboard/sendwholesalerdashboard.component.css","webpack:///./src/app/send/sendwholesalerdashboard/sendwholesalerdashboard.component.html","webpack:///./src/app/send/sendwholesalerdashboard/sendwholesalerdashboard.component.ts","webpack:///./src/app/send/sendwholesalerreport/sendwholesalerreport.component.css","webpack:///./src/app/send/sendwholesalerreport/sendwholesalerreport.component.html","webpack:///./src/app/send/sendwholesalerreport/sendwholesalerreport.component.ts","webpack:///./src/app/service/auth.service.ts","webpack:///./src/app/user/mylogin/userlog.ts","webpack:///./src/app/user/profile/profile.component.css","webpack:///./src/app/user/profile/profile.component.html","webpack:///./src/app/user/profile/profile.component.ts","webpack:///./src/app/user/signup/activation.component.html","webpack:///./src/app/user/signup/activation.component.ts","webpack:///./src/app/user/signup/signuplog.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./admin/dashboard/qrcodescanner/distributorqr/distributorqr.module\": [\n\t\t\"./src/app/admin/dashboard/qrcodescanner/distributorqr/distributorqr.module.ts\",\n\t\t\"admin-dashboard-qrcodescanner-distributorqr-distributorqr-module\"\n\t],\n\t\"./home/home.module\": [\n\t\t\"./src/app/home/home.module.ts\",\n\t\t\"home-home-module\"\n\t],\n\t\"./user/mylogin/mylogin.module\": [\n\t\t\"./src/app/user/mylogin/mylogin.module.ts\",\n\t\t\"user-mylogin-mylogin-module\"\n\t],\n\t\"./user/signup/signup.module\": [\n\t\t\"./src/app/user/signup/signup.module.ts\",\n\t\t\"user-signup-signup-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","module.exports = \".container{\\n    margin-top:50px;\\n}\\ntable{\\n    width: 100%;\\n    background-color: white;\\n}\\ntd {\\n    /* width: 100%; */\\n    /* background: white; */\\n    border-bottom-color: #b5b3b3;\\n    border-color: #454d55 !important;\\n    color: #13343c;\\n}\\nth{\\n  border: none !important;\\n  background-color: #2a6371; \\n  color:White;\\n  font-family: Muli,Helvetica Neue,Arial,sans-serif;\\n  font-weight: 600;\\n}\\nbutton:hover{\\n    border: 1.5px solid #454d55;\\n    \\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vYWdlbnQvYWdlbnQtY3JlYXRlL2FnZW50LWNyZWF0ZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZUFBZTtBQUNuQjtBQUNBO0lBQ0ksV0FBVztJQUNYLHVCQUF1QjtBQUMzQjtBQUVBO0lBQ0ksaUJBQWlCO0lBQ2pCLHVCQUF1QjtJQUN2Qiw0QkFBNEI7SUFDNUIsZ0NBQWdDO0lBQ2hDLGNBQWM7QUFDbEI7QUFHQTtFQUNFLHVCQUF1QjtFQUN2Qix5QkFBeUI7RUFDekIsV0FBVztFQUNYLGlEQUFpRDtFQUNqRCxnQkFBZ0I7QUFDbEI7QUFFQTtJQUNJLDJCQUEyQjs7QUFFL0IiLCJmaWxlIjoic3JjL2FwcC9hZG1pbi9hZ2VudC9hZ2VudC1jcmVhdGUvYWdlbnQtY3JlYXRlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVye1xuICAgIG1hcmdpbi10b3A6NTBweDtcbn1cbnRhYmxle1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xufVxuXG50ZCB7XG4gICAgLyogd2lkdGg6IDEwMCU7ICovXG4gICAgLyogYmFja2dyb3VuZDogd2hpdGU7ICovXG4gICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogI2I1YjNiMztcbiAgICBib3JkZXItY29sb3I6ICM0NTRkNTUgIWltcG9ydGFudDtcbiAgICBjb2xvcjogIzEzMzQzYztcbn1cblxuIFxudGh7XG4gIGJvcmRlcjogbm9uZSAhaW1wb3J0YW50O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmE2MzcxOyBcbiAgY29sb3I6V2hpdGU7XG4gIGZvbnQtZmFtaWx5OiBNdWxpLEhlbHZldGljYSBOZXVlLEFyaWFsLHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG59XG5cbmJ1dHRvbjpob3ZlcntcbiAgICBib3JkZXI6IDEuNXB4IHNvbGlkICM0NTRkNTU7XG4gICAgXG59Il19 */\"","module.exports = \"<app-dashboard></app-dashboard>\\n<div class=\\\"container\\\"> \\n  <div class=\\\"table-responsive\\\">\\n    <table class=\\\"table table-striped table-hover text-center\\\">\\n      <thead class=\\\"theme-table\\\">\\n        <tr>\\n          <th>User Name</th>\\n          <th>Mobile No.</th>\\n          <th>Email</th>\\n          <th>Role</th>\\n          <th>Email Verified</th>\\n          <th></th>\\n          <th></th>\\n        </tr>\\n      </thead>\\n    \\n      <tbody>\\n        <tr *ngFor=\\\"let distdata  of user\\\">\\n            <td>{{distdata.firstName}} {{distdata.lastName}}</td>\\n            <td>{{distdata.mobileNo}}</td>\\n            <td>{{distdata.email}}</td>\\n            <td>{{distdata.role}}</td>\\n            <td><span *ngIf=\\\"distdata.status==1\\\">Yes</span><span *ngIf=\\\"distdata.status==0\\\">No</span></td>\\n            <td><button type=\\\"button\\\"  (click)=\\\"saveUser(distdata.firstName,distdata.lastName,distdata.role,distdata.mobileNo,distdata.location,distdata.email,distdata.password,distdata.publicKey,distdata.userId)\\\" class=\\\"btn btn-success\\\">Accept</button></td>\\n            <td><button (click)=\\\"deleteUser(distdata._id)\\\" #completeModal class=\\\"btn btn-danger\\\">Reject</button></td>\\n        </tr>\\n      </tbody>\\n      \\n      <tfoot class=\\\"theme-table\\\"><tr><th></th><th></th><th></th><th></th><th></th><th></th><th></th></tr></tfoot>\\n    </table>\\n  </div>\\n</div>\"","import { Component, OnInit,ElementRef,ViewChild } from '@angular/core';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { Router } from '@angular/router';\nimport { register } from 'src/app/user/signup/signuplog';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\n\n@Component({\n  selector: 'app-agent-create',\n  templateUrl: './agent-create.component.html',\n  styleUrls: ['./agent-create.component.css']\n})\nexport class AgentCreateComponent implements OnInit {\n  user: any = [];\n  itemId: any = [];\n  itemId1: any = [];\n  status: any = [];\n  transId: any = [];\n  statusValue: any;\n  blockchain: any = [];\n  blockchain2: any = [];\n  submitted = false;\n  mypublickey: any;\n  privateKey: any;\n  blockchainUrl: any = this.http.blockchainUrl;\n  batchUrl : any = this.http\n  @ViewChild('completeModal')completeModal: ElementRef;\n\n  constructor(private http: AuthService, private router: Router, private http1: HttpClient) { }\n\n  ngOnInit() {\n    this.allUser();\n  }\n\n  createmedicine() {\n    alert(\"Successfully created\");\n  }\n\n\n  saveUser(fName, lName, role, mobile, location, email, pass, pkey, userId, transectionId) {\n    let that = this;\n    let data = new register(fName, lName, role, mobile, location, email, pass, pkey, userId, transectionId);\n\n    this.http.saveSignup(data).subscribe((res) => {\n      alert('Request Accepted...');\n      let el: HTMLElement = this.completeModal.nativeElement;\n      el.click(); \n    \n    });\n    if (role == 1) {\n\n      let data = new register(fName, lName, role, mobile, location, email, pass, pkey, userId, transectionId);\n\n      this.http.saveSignup(data).subscribe((res) => {\n        alert('Request Accepted...');\n        let el: HTMLElement = this.completeModal.nativeElement;\n        el.click(); \n      \n      });\n    } else {\n\n      console.log('if the role is not 1',fName,lName);\n      let data = new register(fName, lName, role, mobile, location, email, pass, pkey, userId, this.itemId);\n                  this.http.saveSignup(data).subscribe((res) => {\n                    alert('Request Accepted');\n                  });\n      this.mypublickey = localStorage.getItem(\"publicKey\");\n      this.privateKey = localStorage.getItem(\"privateKey\");\n      this.submitted = true;\n      //Register User on Blockchain ==>> if \"COMMITED\" :: register in db else Mail (ERROR Message)\t\n\n      // const Metadata = {\n      //   \"action\": \"registerUsers\",\n      //   \"payloaddata\": {\n      //     \"name\": fName + ' ' + lName,\n      //     \"email\": email,\n      //     \"contactNumber\": mobile,\n      //     \"role\": role,\n      //     \"location\": {\n      //       \"type\": 1,\n      //       \"body\": {\n      //         \"address\": location\n      //       }\n      //     },\n      //     \"publicKey\": pkey\n      //   },\n      //   \"private\": this.privateKey,\n      //   \"public\": this.mypublickey\n      // }\n\n      // const httpOptions = {\n      //   headers: new HttpHeaders({\n      //     'Content-Type': 'application/json'\n      //   })\n      // };\n\n      // var x = this.http1.post(this.blockchainUrl, Metadata, httpOptions).subscribe(\n      //   (val) => {\n      //     console.log(\"POST call successful value returned in body\", val);\n      //     this.blockchain = val;\n      //     if (that.http.IsJsonString(this.blockchain.response.body)) {\n      //       JSON.parse(this.blockchain.response.body).hasOwnProperty(\"data\");\n\n      //       this.status = JSON.parse(this.blockchain.response.body);            \n      //       this.statusValue = this.status.data[0].status;\n      //       this.itemId = this.status.data[0].id;\n      //       if (this.statusValue == 'COMMITTED') {\n      //         console.log('saving data to database',fName,lName);\n      //         let data = new register(fName, lName, role, mobile, location, email, pass, pkey, userId, this.itemId);\n      //         this.http.saveSignup(data).subscribe((res) => {\n      //           alert('Request Accepted');\n      //           let el: HTMLElement = this.completeModal.nativeElement;\n      //           el.click(); \n      //         });\n      //       }\n      //       else {\n      //         alert('Request Rejected');\n      //       }\n      //     } else {\n\n      //       that.http1.get(this.http.batchUrl +\"/batch_statuses?\" + this.blockchain.id + \"&wait\").subscribe((val) => {\n      //         this.blockchain2 =val\n      //         if (that.http.IsJsonString(this.blockchain2.body)) {\n      //           this.status = JSON.parse(this.blockchain2.body);\n      //           console.log('json value2', this.status.data[0].status);\n      //           this.statusValue = this.status.data[0].status;\n      //           this.itemId = this.status.data[0].id;\n      //           if (this.statusValue == 'COMMITTED') {\n      //             console.log('else saving data to database',fName,lName);\n      //             let data = new register(fName, lName, role, mobile, location, email, pass, pkey, userId, this.itemId);\n      //             this.http.saveSignup(data).subscribe((res) => {\n      //               alert('Request Accepted');\n      //             });\n      //           }\n      //           else {\n      //             alert('Request Rejected');\n      //           }\n      //         }\n      //       })\n      //     }\n      //   // }).catch(function (err) {\n      //   //   console.log(err.message);\n      //   });\n    }\n  }\n\n\n  allUser() {\n    this.http.getallUser().subscribe((data) => {\n      this.user = data;\n      console.log(this.user);\n    });\n  }\n\n  deleteUser(id) {\n    this.http.deleteUser(id).subscribe(res => {\n      this.allUser();\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FnZW50L2FnZW50LWRldGFpbC9hZ2VudC1kZXRhaWwuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\n  agent-detail works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-agent-detail',\n  templateUrl: './agent-detail.component.html',\n  styleUrls: ['./agent-detail.component.css']\n})\nexport class AgentDetailComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FnZW50L2FnZW50LWVkaXQvYWdlbnQtZWRpdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\n  agent-edit works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-agent-edit',\n  templateUrl: './agent-edit.component.html',\n  styleUrls: ['./agent-edit.component.css']\n})\nexport class AgentEditComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"table {\\n    width: 100%;\\n    background-color: white;\\n  }\\n\\n  \\n\\ntd {\\n  background: none;\\n  border-bottom-color: #b5b3b3;\\n  border-color: #454d55 !important;\\n}\\n\\n  \\n\\nth{\\n  border: none !important;\\n  background-color: #3d6d79; \\n  color:White;\\n  font-family: Muli,Helvetica Neue,Arial,sans-serif;\\n  font-weight: 600;\\n}\\n\\n  \\n\\nbutton:hover{\\n  border: 1px #454d55;\\n  \\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vYWdlbnQvYWdlbnQtbGlzdC9hZ2VudC1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0lBQ1gsdUJBQXVCO0VBQ3pCOzs7O0FBSUY7RUFDRSxnQkFBZ0I7RUFDaEIsNEJBQTRCO0VBQzVCLGdDQUFnQztBQUNsQzs7OztBQUdBO0VBQ0UsdUJBQXVCO0VBQ3ZCLHlCQUF5QjtFQUN6QixXQUFXO0VBQ1gsaURBQWlEO0VBQ2pELGdCQUFnQjtBQUNsQjs7OztBQUVBO0VBQ0UsbUJBQW1COztBQUVyQiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FnZW50L2FnZW50LWxpc3QvYWdlbnQtbGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICB9XG5cbiAgXG5cbnRkIHtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgYm9yZGVyLWJvdHRvbS1jb2xvcjogI2I1YjNiMztcbiAgYm9yZGVyLWNvbG9yOiAjNDU0ZDU1ICFpbXBvcnRhbnQ7XG59XG5cbiBcbnRoe1xuICBib3JkZXI6IG5vbmUgIWltcG9ydGFudDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzNkNmQ3OTsgXG4gIGNvbG9yOldoaXRlO1xuICBmb250LWZhbWlseTogTXVsaSxIZWx2ZXRpY2EgTmV1ZSxBcmlhbCxzYW5zLXNlcmlmO1xuICBmb250LXdlaWdodDogNjAwO1xufVxuXG5idXR0b246aG92ZXJ7XG4gIGJvcmRlcjogMXB4ICM0NTRkNTU7XG4gIFxufSJdfQ== */\"","module.exports = \"<app-dashboard></app-dashboard>\\n<div class=\\\"container\\\"> \\n  <div class=\\\"table-responsive\\\">\\n    <table class=\\\"table table-striped table-hover text-center\\\">\\n      <thead class=\\\"theme-table\\\">\\n            <tr>\\n              <th>User Name</th>\\n              <th>Mobile No.</th>\\n              <th>Email</th>\\n              <th>Role</th>\\n              <th></th>\\n            </tr>  \\n      </thead> \\n      <tbody>\\n        <tr *ngFor=\\\"let distdata of user\\\" >\\n          <td>{{distdata.firstName}} {{distdata.lastName}}</td>\\n          <td>{{distdata.mobileNo}}</td>\\n          <td>{{distdata.email}}</td>\\n          <td>{{distdata.role}}</td>       \\n          <td><button  (click)=\\\"deletevalidUser(distdata._id,distdata.role)\\\" class=\\\"btn btn-danger\\\">Delete user</button></td>\\n        </tr>\\n      </tbody>\\n      <tfoot class=\\\"theme-table\\\"><tr><th></th><th></th><th></th><th></th><th></th></tr></tfoot>\\n    </table>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/service/auth.service';\n\n@Component({\n  selector: 'app-agent-list',\n  templateUrl: './agent-list.component.html',\n  styleUrls: ['./agent-list.component.css']\n})\nexport class AgentListComponent implements OnInit {\n  user:any=[]; \n \n  constructor(private http:AuthService) { }\n\n  ngOnInit() {\n    \n    this.validUser();\n  \n  }\n\n  \n  validUser(){\n    this.http.getvalidUser().subscribe((data)=>{\n      this.user=data;          \n    });\n  }\n\n\n\n  // YOu can delete admin by removin comment in below... deletevalidUser() function...\n  \n   deletevalidUser(id,role)\n  {\n    console.log('userId',role);\n    if(role == 1){\n     if( confirm('This is Admin User, Do you Really want to Delete it?')){\n       alert('You can not Delete Admin User');\n      // this.http.deletevalidUser(id).subscribe(res => {\n      //  alert('Deleted');\n      //  this.validUser();\n      //  });\n    }\n    }else{   \n      if( confirm('Do you Really want to Delete it?')){\n        this.http.deletevalidUser(id).subscribe(res => {\n          alert('Deleted');\n          this.validUser();\n        });\n      }     \n  }\n }\n\n\n}\n","module.exports = \".container{\\n    margin-top:50px;\\n}\\nh4{\\n    text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vZGFzaGJvYXJkL2NyZWF0ZS11c2VyL2NyZWF0ZS11c2VyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxlQUFlO0FBQ25CO0FBQ0E7SUFDSSxrQkFBa0I7QUFDdEIiLCJmaWxlIjoic3JjL2FwcC9hZG1pbi9kYXNoYm9hcmQvY3JlYXRlLXVzZXIvY3JlYXRlLXVzZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXJ7XG4gICAgbWFyZ2luLXRvcDo1MHB4O1xufVxuaDR7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xufSJdfQ== */\"","module.exports = \"<app-dashboard></app-dashboard>\\n<div class=\\\"container\\\"> \\n    <h4>Fill User Details</h4>\\n    <form>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n               <div class=\\\"form-group\\\">\\n                  <label>EthAddress</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control required\\\" maxlength=\\\"30\\\">\\n                </div>\\n             </div>\\n          </div>\\n\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n            <label>Name</label>\\n            <input #name type=\\\"text\\\" class=\\\"form-control required\\\" maxlength=\\\"30\\\">\\n          </div>\\n        </div>\\n\\n       <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n            <label>Location</label>\\n            <input #location type=\\\"text\\\" class=\\\"form-control required\\\" maxlength=\\\"30\\\">\\n          </div>\\n        </div>\\n      </div>    \\n           \\n      <div class=\\\"row\\\">\\n         <div class=\\\"col-md-4\\\">\\n             <label>Role</label>\\n             <div class=\\\"form-group\\\">                        \\n                <select #role  class=\\\"form-control\\\">\\n                    <option value=\\\"manufacture\\\">Manufacture</option>\\n                    <option value=\\\"wholesaler\\\">Wholesaler</option>\\n                    <option value=\\\"distrubuter\\\">Distrubuter</option>\\n                    <option value=\\\"pharma\\\">Pharma</option>                          \\n                  </select>                        \\n            </div>                \\n          </div>\\n       </div>  \\n        <div class=\\\"row text-right\\\">\\n          <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n              <button class=\\\"btn btn-primary\\\" (click)=\\\"createuser(name.value,location.value,role.value)\\\">Create User</button>\\n          </div>\\n        </div>\\n      </div>\\n\\n </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { Subscription } from 'rxjs';\nimport { newUser } from './newuser';\n\n@Component({\n  selector: 'app-create-user',\n  templateUrl: './create-user.component.html',\n  styleUrls: ['./create-user.component.css']\n})\nexport class CreateUserComponent implements OnInit {\n  newuser:newUser;\n  base;\n  call:Subscription;\n\n  constructor(private r:Router, private httpser:AuthService) { }\n\n  ngOnInit() {\n  }\n\n  createuser( x:string, y:string, z:string)\n  {\n   this.newuser = new newUser(x,y,z);\n    this.base = this.httpser.createuser(this.newuser);\n    this.call = this.base.subscribe((data) => {\n    alert(\"User created\");\n    },\n    (err) => {\n    console.log(err);\n    },\n    () => {\n      console.log(\"Done\");\n    });\n    \n  }\n  \n\n}\n","export class newUser {\n\tname: string;\t\n\tlocation: string;\n\trole: string\n\n\tconstructor(name:string, location:string, role:string){\n\t\tthis.name = name;\t\t\n\t\tthis.location = location;\n\t\tthis.role= role;\n\t}\n}\n","module.exports = \".navbar {\\n    background-color: #4a858b !important;\\n    /* background-image: url(../../../assets/overview-seafood-bg.jpg); */\\n    /* background-size: cover; */\\n    color: white;\\n}\\n.name{\\n    font-weight: 800;\\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\\n}\\n.navBarSec{\\n    /* padding-top: 3vh; */\\n    padding-top: 1.5vh;\\n    padding-bottom: 1.5vh;\\n    padding-left: 35%;\\n}\\n/* body{\\n    background-color: rgb(206, 223, 255) !important;\\n} */\\n.notiBadge{\\n    background-color: red;\\n    color: white;\\n    border-radius: 100%;\\n    font-size: 70%;\\n    padding: 2px 3px 2px 3px;\\n    bottom: 34px;\\n\\n}\\n/* .nav-item:hover{\\n    border-bottom: solid;\\n    border-color: #f4a018;\\n} */\\na{\\n    height: 40px;\\n}\\na:hover{\\n    border-bottom: solid;\\n    border-color: #f4a018;\\n}\\n.logoutBtn{\\n    background-color: #F4A018;\\n    color: white;\\n    height: 35px;\\n    width: 80px;\\n    margin: 5px;\\n}\\nbutton:hover{\\n    border: 1.5px solid white;\\n}\\n.navItemNew{\\n    color: white !important;\\n    font-weight: 500;\\n    font-family: system-ui;\\n    margin-left: 5px;\\n\\n}\\n.profileForm{\\n    margin-top: 0px !important;\\n    margin-left: 2vh;\\n}\\n.navSelectItem{\\n    color: white ;\\n    font-weight: 500;\\n    font-family: system-ui;\\n    background: rgba(0,0,0, 0.0);\\n    border: none;\\n    padding: 0%;\\n    width: 70px;\\n}\\noption{\\n    background-color:#17586a ;\\n    font-size: 12px;\\n}\\nselect:hover{\\n    border:  solid;\\n    border-color: #f4a018;\\n}\\n/* .navbar-dark .navbar-nav .nav-link.bellicon{\\n font-size: 0px;\\n    background-image: url(notification-icon.png);\\n    background-repeat: no-repeat;\\n    background-size: 29px;\\n    padding: 18px 25px;\\n    background-position: center;\\n    position: relative;\\n}\\n.navbar-dark .navbar-nav .nav-link.bellicon span {\\n    position: absolute;\\n    font-size: 10px;\\n    background-color: #930e07;\\n    width: 20px;\\n    height: 20px;\\n    text-align: center;\\n    line-height: 19px;\\n    border-radius: 100%;\\n    border: 1px solid #fff;\\n    top: 0;\\n} */\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksb0NBQW9DO0lBQ3BDLG9FQUFvRTtJQUNwRSw0QkFBNEI7SUFDNUIsWUFBWTtBQUNoQjtBQUNBO0lBQ0ksZ0JBQWdCO0lBQ2hCLDREQUE0RDtBQUNoRTtBQUVBO0lBQ0ksc0JBQXNCO0lBQ3RCLGtCQUFrQjtJQUNsQixxQkFBcUI7SUFDckIsaUJBQWlCO0FBQ3JCO0FBRUE7O0dBRUc7QUFFSDtJQUNJLHFCQUFxQjtJQUNyQixZQUFZO0lBQ1osbUJBQW1CO0lBQ25CLGNBQWM7SUFDZCx3QkFBd0I7SUFDeEIsWUFBWTs7QUFFaEI7QUFFQTs7O0dBR0c7QUFFSDtJQUNJLFlBQVk7QUFDaEI7QUFFQTtJQUNJLG9CQUFvQjtJQUNwQixxQkFBcUI7QUFDekI7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixZQUFZO0lBQ1osWUFBWTtJQUNaLFdBQVc7SUFDWCxXQUFXO0FBQ2Y7QUFFQTtJQUNJLHlCQUF5QjtBQUM3QjtBQUdBO0lBQ0ksdUJBQXVCO0lBQ3ZCLGdCQUFnQjtJQUNoQixzQkFBc0I7SUFDdEIsZ0JBQWdCOztBQUVwQjtBQUdBO0lBQ0ksMEJBQTBCO0lBQzFCLGdCQUFnQjtBQUNwQjtBQUdBO0lBQ0ksYUFBYTtJQUNiLGdCQUFnQjtJQUNoQixzQkFBc0I7SUFDdEIsNEJBQTRCO0lBQzVCLFlBQVk7SUFDWixXQUFXO0lBQ1gsV0FBVztBQUNmO0FBR0E7SUFDSSx5QkFBeUI7SUFDekIsZUFBZTtBQUNuQjtBQUVBO0lBQ0ksY0FBYztJQUNkLHFCQUFxQjtBQUN6QjtBQU9BOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQW9CRyIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5uYXZiYXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM0YTg1OGIgIWltcG9ydGFudDtcbiAgICAvKiBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vLi4vLi4vYXNzZXRzL292ZXJ2aWV3LXNlYWZvb2QtYmcuanBnKTsgKi9cbiAgICAvKiBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyOyAqL1xuICAgIGNvbG9yOiB3aGl0ZTtcbn1cbi5uYW1le1xuICAgIGZvbnQtd2VpZ2h0OiA4MDA7XG4gICAgZm9udC1mYW1pbHk6ICdTZWdvZSBVSScsIFRhaG9tYSwgR2VuZXZhLCBWZXJkYW5hLCBzYW5zLXNlcmlmO1xufVxuXG4ubmF2QmFyU2Vje1xuICAgIC8qIHBhZGRpbmctdG9wOiAzdmg7ICovXG4gICAgcGFkZGluZy10b3A6IDEuNXZoO1xuICAgIHBhZGRpbmctYm90dG9tOiAxLjV2aDtcbiAgICBwYWRkaW5nLWxlZnQ6IDM1JTtcbn1cblxuLyogYm9keXtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjA2LCAyMjMsIDI1NSkgIWltcG9ydGFudDtcbn0gKi9cblxuLm5vdGlCYWRnZXtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIGJvcmRlci1yYWRpdXM6IDEwMCU7XG4gICAgZm9udC1zaXplOiA3MCU7XG4gICAgcGFkZGluZzogMnB4IDNweCAycHggM3B4O1xuICAgIGJvdHRvbTogMzRweDtcblxufVxuXG4vKiAubmF2LWl0ZW06aG92ZXJ7XG4gICAgYm9yZGVyLWJvdHRvbTogc29saWQ7XG4gICAgYm9yZGVyLWNvbG9yOiAjZjRhMDE4O1xufSAqL1xuXG5he1xuICAgIGhlaWdodDogNDBweDtcbn1cblxuYTpob3ZlcntcbiAgICBib3JkZXItYm90dG9tOiBzb2xpZDtcbiAgICBib3JkZXItY29sb3I6ICNmNGEwMTg7XG59XG5cbi5sb2dvdXRCdG57XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0Y0QTAxODtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgaGVpZ2h0OiAzNXB4O1xuICAgIHdpZHRoOiA4MHB4O1xuICAgIG1hcmdpbjogNXB4O1xufVxuXG5idXR0b246aG92ZXJ7XG4gICAgYm9yZGVyOiAxLjVweCBzb2xpZCB3aGl0ZTtcbn1cblxuXG4ubmF2SXRlbU5ld3tcbiAgICBjb2xvcjogd2hpdGUgIWltcG9ydGFudDtcbiAgICBmb250LXdlaWdodDogNTAwO1xuICAgIGZvbnQtZmFtaWx5OiBzeXN0ZW0tdWk7XG4gICAgbWFyZ2luLWxlZnQ6IDVweDtcblxufVxuXG5cbi5wcm9maWxlRm9ybXtcbiAgICBtYXJnaW4tdG9wOiAwcHggIWltcG9ydGFudDtcbiAgICBtYXJnaW4tbGVmdDogMnZoO1xufVxuXG5cbi5uYXZTZWxlY3RJdGVte1xuICAgIGNvbG9yOiB3aGl0ZSA7XG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICBmb250LWZhbWlseTogc3lzdGVtLXVpO1xuICAgIGJhY2tncm91bmQ6IHJnYmEoMCwwLDAsIDAuMCk7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIHBhZGRpbmc6IDAlO1xuICAgIHdpZHRoOiA3MHB4O1xufVxuXG5cbm9wdGlvbntcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiMxNzU4NmEgO1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbn1cblxuc2VsZWN0OmhvdmVye1xuICAgIGJvcmRlcjogIHNvbGlkO1xuICAgIGJvcmRlci1jb2xvcjogI2Y0YTAxODtcbn1cblxuXG5cblxuXG5cbi8qIC5uYXZiYXItZGFyayAubmF2YmFyLW5hdiAubmF2LWxpbmsuYmVsbGljb257XG4gZm9udC1zaXplOiAwcHg7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKG5vdGlmaWNhdGlvbi1pY29uLnBuZyk7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IDI5cHg7XG4gICAgcGFkZGluZzogMThweCAyNXB4O1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG4ubmF2YmFyLWRhcmsgLm5hdmJhci1uYXYgLm5hdi1saW5rLmJlbGxpY29uIHNwYW4ge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBmb250LXNpemU6IDEwcHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzkzMGUwNztcbiAgICB3aWR0aDogMjBweDtcbiAgICBoZWlnaHQ6IDIwcHg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGxpbmUtaGVpZ2h0OiAxOXB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDEwMCU7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2ZmZjtcbiAgICB0b3A6IDA7XG59ICovIl19 */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-black\\\">\\n  <!-- <a class=\\\"navbar-brand\\\" class=\\\"name\\\"> -->\\n  <!-- </a> -->\\n\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" [ngClass]=\\\"{ 'show': isShown }\\\"\\n    data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\"\\n    aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div>\\n    <img style=\\\"height: 30px; width: 100%;  padding-left: 5vh;\\\" src=\\\"../../../assets/logo.PNG\\\">\\n  </div>\\n\\n  <div class=\\\"collapse navbar-collapse navBarSec\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul *ngIf=\\\"rolevalue\\\" class=\\\"navbar-nav mr-auto align-items-center\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link navItemNew\\\" routerLink=\\\"/medicinedashboard\\\" routerLinkActive=\\\"active\\\"> Dashboard</a>\\n      </li>\\n\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link navItemNew\\\" routerLink=\\\"/agent/request\\\" routerLinkActive=\\\"active\\\"> Request</a>\\n      </li>\\n\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link navItemNew\\\" routerLink=\\\"/agent/list\\\" routerLinkActive=\\\"active\\\"> Users</a>\\n      </li>\\n\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link navItemNew\\\" routerLink=\\\"/medicine/list\\\" routerLinkActive=\\\"active\\\"> Medicines</a>\\n      </li>\\n\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link navItemNew\\\" routerLink=\\\"/notification\\\" routerLinkActive=\\\"active\\\"> Notifications <span\\n            class=\\\"notiBadge\\\">{{list.length}}</span></a>\\n      </li>\\n\\n      <li class=\\\"nav-item\\\">\\n        <div class=\\\"form-group mb-0\\\">\\n          <select class=\\\"form-control navSelectItem\\\" (change)=\\\"navigate($event.target.value)\\\">\\n            <option value=\\\"null\\\">Roles</option>\\n            <option value=\\\"manufacturedashboard\\\">Manufacture</option>\\n            <option value=\\\"wholesalerdashboard\\\">Wholesaler</option>\\n            <option value=\\\"distributordashboard\\\">Distrubuter</option>\\n            <option value=\\\"pharmadashboard\\\">Pharma</option>\\n            <option value=\\\"transporterdashboard\\\">Transporte</option>\\n          </select>\\n        </div>\\n      </li>\\n\\n      <li class=\\\"nav-item\\\">\\n        <a [routerLink]=\\\"'/profile'\\\" class=\\\"nav-link navItemNew\\\">PROFILE </a>\\n      </li>\\n\\n      <button (click)=\\\"logout()\\\" class=\\\"btn btn-outline-primary my-2 my-sm-0 logoutBtn\\\" *ngIf=\\\"flayg\\\"\\n        type=\\\"submit\\\">LOGOUT</button>\\n\\n\\n\\n\\n\\n\\n      <!-- <form class=\\\"form-inline my-2 my-lg- profileForm\\\">\\n          <a [routerLink]=\\\"'/profile'\\\" class=\\\"navItemNew\\\">PROFILE </a>\\n          <button (click)=\\\"logout()\\\" class=\\\"btn btn-outline-primary my-2 my-sm-0 logoutBtn\\\" *ngIf=\\\"flayg\\\" type=\\\"submit\\\">Logout</button>\\n        </form> -->\\n      <!-- <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/distributordashboard\\\" routerLinkActive=\\\"active\\\" >View Distributor</a>\\n      </li> \\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/manufacturedashboard\\\" routerLinkActive=\\\"active\\\" >View Manufacture</a>\\n      </li> \\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/pharmadashboard\\\" routerLinkActive=\\\"active\\\" >View Pharma</a>\\n      </li> \\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/transporterdashboard\\\" routerLinkActive=\\\"active\\\" >View Transporter</a>\\n      </li> \\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/wholesalerdashboard\\\" routerLinkActive=\\\"active\\\" >View Wholesaler</a>\\n      </li>  -->\\n\\n    </ul>\\n    <ul *ngIf=\\\"Mrolevalue\\\" class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\"></a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/medicinedashboard\\\" routerLinkActive=\\\"active\\\">DashBoard</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/medicine/add\\\" routerLinkActive=\\\"active\\\">Add Medicine</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/medicine/list\\\" routerLinkActive=\\\"active\\\">View Medicine</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/package/add\\\" routerLinkActive=\\\"active\\\">Add Package</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/package/list\\\" routerLinkActive=\\\"active\\\">View Package</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link bellicon\\\" routerLink=\\\"/notification\\\" routerLinkActive=\\\"active\\\">View\\n          Notifications<span>{{list.length}}</span></a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/medicinereport\\\" routerLinkActive=\\\"active\\\">Medicine Report</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/package/report\\\" routerLinkActive=\\\"active\\\">Package Report</a>\\n      </li>\\n      <button (click)=\\\"logout()\\\" class=\\\"btn btn-outline-primary my-2 my-sm-0 logoutBtn\\\" *ngIf=\\\"flayg\\\"\\n        type=\\\"submit\\\">LOGOUT</button>\\n    </ul>\\n    <ul *ngIf=\\\"Wrolevalue\\\" class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/wholesalerdashboard1\\\" routerLinkActive=\\\"active\\\">DashBoard</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/sendwholesaler\\\" routerLinkActive=\\\"active\\\">View Medicine</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/recievepackagewholesaler\\\" routerLinkActive=\\\"active\\\">View Package</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/sendwholesalerreport\\\" routerLinkActive=\\\"active\\\">Medicine Report</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/recievepackagewholesalerreport\\\" routerLinkActive=\\\"active\\\">Package Report</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link bellicon\\\" routerLink=\\\"/notification\\\" routerLinkActive=\\\"active\\\">View\\n          Notifications<span>{{list.length}}</span></a>\\n      </li>\\n      <button (click)=\\\"logout()\\\" class=\\\"btn btn-outline-primary my-2 my-sm-0 logoutBtn\\\" *ngIf=\\\"flayg\\\"\\n        type=\\\"submit\\\">LOGOUT</button>\\n    </ul>\\n    <ul *ngIf=\\\"Drolevalue\\\" class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/distributordashboard1\\\" routerLinkActive=\\\"active\\\">DashBoard</a>\\n\\n      </li>\\n\\n      <li>\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/senddistributor\\\" routerLinkActive=\\\"active\\\">View Medicine</a>\\n      </li>\\n      <li>\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/recievepackage\\\" routerLinkActive=\\\"active\\\">View Package</a>\\n      </li>\\n      <li>\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/senddistributorreport\\\" routerLinkActive=\\\"active\\\">Medicine Report</a>\\n      </li>\\n      <li>\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/recievepackagereport\\\" routerLinkActive=\\\"active\\\">Package Report</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link bellicon\\\" routerLink=\\\"/notification\\\" routerLinkActive=\\\"active\\\">View\\n          Notifications<span>{{list.length}}</span></a>\\n      </li>\\n      <button (click)=\\\"logout()\\\" class=\\\"btn btn-outline-primary my-2 my-sm-0 logoutBtn\\\" *ngIf=\\\"flayg\\\"\\n        type=\\\"submit\\\">LOGOUT</button>\\n    </ul>\\n    <ul *ngIf=\\\"Prolevalue\\\" class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/sendpharma\\\" routerLinkActive=\\\"active\\\">Pharma</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/recievepackagepharma\\\" routerLinkActive=\\\"active\\\">View Package</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/sendpharmareport\\\" routerLinkActive=\\\"active\\\">Medicine Report</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/recievepackagepharmareport\\\" routerLinkActive=\\\"active\\\">Packages Report</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link bellicon\\\" routerLink=\\\"/notification\\\" routerLinkActive=\\\"active\\\">View\\n          Notifications<span>{{list.length}}</span></a>\\n      </li>\\n      <button (click)=\\\"logout()\\\" class=\\\"btn btn-outline-primary my-2 my-sm-0 logoutBtn\\\" *ngIf=\\\"flayg\\\"\\n        type=\\\"submit\\\">LOGOUT</button>\\n    </ul>\\n    <ul *ngIf=\\\"Trolevalue\\\" class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/transporter\\\" routerLinkActive=\\\"active\\\">Transporter</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/packagetransporter\\\" routerLinkActive=\\\"active\\\">Package Transporter</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link bellicon\\\" routerLink=\\\"/notification\\\" routerLinkActive=\\\"active\\\">View\\n          Notifications<span>5</span></a>\\n      </li>\\n      <button (click)=\\\"logout()\\\" class=\\\"btn btn-outline-primary my-2 my-sm-0 logoutBtn\\\" *ngIf=\\\"flayg\\\"\\n        type=\\\"submit\\\">LOGOUT</button>\\n    </ul>\\n\\n\\n  </div>\\n\\n\\n\\n\\n\\n</nav>\\n\\n\\n<!-- private key Modal -->\\n\\n<div *ngIf=\\\"popuptask\\\" _ngcontent-c1 aria-labelledby=\\\"exampleModalLabel\\\" class=\\\"modal fade {{button1}}\\\"\\n  id=\\\"basicExampleModal\\\" role=\\\"dialog\\\" tabindex=\\\"-1\\\" style=\\\"display: block; background-color: rgba(17, 16, 16, 0.82);\\\"\\n  aria-modal=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-lg modal-dialog-centered\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <form [formGroup]=\\\"privateKeyForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n        <div class=\\\"modal-header\\\" style=\\\"    border-bottom: 1px solid #ffffff;\\\">\\n          <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Private Key</h5>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n          <h6 style=\\\"color:red; float: right;\\\">Chance {{ 3 - count}}</h6>\\n          <span style=\\\"color:green; text-align: right;\\\">You have only 3 chance to enter your valid Key</span>\\n          <input type=\\\"text\\\" #privateK class=\\\"form-control required\\\" formControlName=\\\"key\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.key.errors }\\\" placeholder=\\\"Enter your private Key\\\">\\n          <div *ngIf=\\\"submitted && f.key.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.key.errors.required\\\">Key is required</div>\\n          </div>\\n        </div>\\n        <div class=\\\"modal-footer\\\" style=\\\"border-top: 1px solid #ffffff;\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save</button>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, DoCheck, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n\tselector: 'app-dashboard',\n\ttemplateUrl: './dashboard.component.html',\n\tstyleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit, DoCheck, OnDestroy {\n\tflayg;\n\tla;\n\tlb: Subscription;\n\n\ttakenToken;\n\tmyrole;\n\tmypublickey;\n\tnewpublickey;\n\tmypublickey1;\n\tprimerykeyinput: any = [];\n\tcount: number = 0;\n\trolevalue: boolean;\n\tMrolevalue: boolean;\n\tWrolevalue: boolean;\n\tWrolevalue1: boolean;\n\tDrolevalue: boolean;\n\tProlevalue: boolean;\n\tTrolevalue: boolean;\n\tlist: any = [];\n\tuser: any = [];\n\tisShown: boolean = false;\n\tpopuptask: boolean = false;\n\tbutton1: any;\n\tprivateKeyForm: FormGroup\n\tsubmitted = false;\n\tconstructor(private router: Router, private httpuser: AuthService, private formBuilder: FormBuilder) { }\n\n\tnavigate(value) {\n\t\tif (value) {\n\t\t\tthis.router.navigate([value]);\n\t\t}\n\t\treturn false;\n\t}\n\tngOnInit() {\n\t\tthis.privateKeyForm = this.formBuilder.group({\n\t\t\tkey: ['', [Validators.required]],\n\n\t\t})\n\t\tthis.button1 = 'show';\n\t\t//this.onloadcheckKey();\n\t\tthis.myrole = localStorage.getItem(\"role\");\n\t\tthis.Manufacturerole();\n\n\t\tthis.Wholesalerrole();\n\t\tthis.Wholesalerrole1();\n\t\tthis.Distributorrole();\n\t\tthis.Pharmarole();\n\t\tthis.Transporterrole();\n\n\n\t\tif (this.myrole == \"1\") {\n\t\t\tthis.rolevalue = true;\n\t\t}\n\t\telse {\n\t\t\tthis.rolevalue = false;\n\t\t}\n\n\t\tthis.takenToken = this.httpuser.getTkn();\n\t\tif (!this.takenToken) {\n\t\t\tthis.router.navigate(['/home']);\n\t\t}\n\n\t\tthis.notification();\n\n\t}\n\n\n\n\tnotification() {\n\t\tthis.myrole = localStorage.getItem(\"role\");\n\n\t\tif (this.myrole == 1) {\n\n\t\t\tthis.httpuser.getvalidUser().subscribe((data) => {\n\t\t\t\tthis.user = data;\n\t\t\t});\n\t\t\treturn this.httpuser.getNotification().subscribe((data) => {\n\t\t\t\tthis.list = data;\n\t\t\t\tconsole.log(\"All Notification\", this.list);\n\t\t\t});\n\n\n\n\t\t} else {\n\t\t\treturn this.httpuser.getNotificationUserId().subscribe((data) => {\n\t\t\t\tconsole.log(data);\n\t\t\t\tthis.list = data;\n\t\t\t\tconsole.log(\"user Notification\", this.list);\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t//propup for private key........\n\tonloadcheckKey() {\n\t\tthis.mypublickey1 = localStorage.getItem(\"generatedPublickey\");\n\t\tthis.mypublickey = localStorage.getItem(\"publicKey\");\n\t\tif (this.mypublickey1 == this.mypublickey) {\n\t\t\tthis.button1 = \"hide\";\n\t\t\tthis.popuptask = false;\n\t\t}\n\t\telse {\n\t\t\treturn;\n\t\t}\n\t}\n\n\tpostPrivateKey(keystring) {\n\t\n\t}\n\n\t//button enable by their role assign start..........\n\n\tManufacturerole() {\n\t\tif (this.myrole == \"2\") {\n\t\t\tthis.Mrolevalue = true;\n\t\t}\n\t\telse {\n\t\t\tthis.Mrolevalue = false;\n\t\t}\n\t}\n\n\tWholesalerrole() {\n\t\tif (this.myrole == \"3\") {\n\t\t\tthis.Wrolevalue1 = true;\n\t\t}\n\t\telse {\n\t\t\tthis.Wrolevalue1 = false;\n\t\t}\n\t}\n\n\tWholesalerrole1() {\n\t\tif (this.myrole == \"3\") {\n\t\t\tthis.Wrolevalue = true;\n\t\t}\n\t\telse {\n\t\t\tthis.Wrolevalue = false;\n\t\t}\n\t}\n\n\n\n\tDistributorrole() {\n\t\tif (this.myrole == \"4\") {\n\t\t\tthis.Drolevalue = true;\n\t\t}\n\t\telse {\n\t\t\tthis.Drolevalue = false;\n\t\t}\n\t}\n\tPharmarole() {\n\t\tif (this.myrole == \"5\") {\n\t\t\tthis.Prolevalue = true;\n\t\t}\n\t\telse {\n\t\t\tthis.Prolevalue = false;\n\t\t}\n\t}\n\tTransporterrole() {\n\t\tif (this.myrole == \"7\") {\n\t\t\tthis.Trolevalue = true;\n\t\t}\n\t\telse {\n\t\t\tthis.Trolevalue = false;\n\t\t}\n\t}\n\n\t// button role ends.........\n\n\tngDoCheck() {\n\t\tthis.flayg = this.httpuser.getTkn();\n\t}\n\tget f() { return this.privateKeyForm.controls; }\n\n\tonSubmit() {\n\t\tconsole.log('log me');\n\t\t\n\t\tthis.submitted = true;\n\t\tif (this.privateKeyForm.invalid) {\n\t\t\treturn;\n\t\t  }\n\t\t  this.count++;\n\t\t  console.log('count number', this.count);\n\t\t  if (this.count == 3) {\n\t\t\t  this.logout();\n\t\t  }\n\t\t  else {\n\t\t\tconst keystring =this.f.key.value\n\t\t\tconsole.log('keystring: ', keystring);\n\t\t\t  return this.httpuser.getpublickey(keystring).subscribe(result => {\n\t\t\t\t  this.primerykeyinput = result;\n\t\t\t\t  this.mypublickey = localStorage.getItem(\"publicKey\");\n\t\t\t\t  //alert(this.mypublickey+\"======\"+this.primerykeyinput);\n\t\t\t\t  if (this.primerykeyinput == this.mypublickey) {\n\t\t\t\t\t  this.newpublickey = localStorage.setItem('privateKey', 'privateKey');\n\t\t\t\t\t  this.newpublickey = localStorage.setItem('generatedPublickey', 'privateKey');\n\t\t\t\t\t  this.button1 = \"hide\";\n\t\t\t\t\t  this.popuptask = false;\n\t\t\t\t  }\n\t\t\t\t  else {\n\t\t\t\t\t  console.log('count number', this.count);\n\t\t\t\t\t  this.button1 = 'show';\n\t\t\t\t  }\n  \n\t\t\t  });\n\t\t  }\n  \n\t}\n\tlogout() {\n\t\tlocalStorage.removeItem(\"id_token\");\n\t\tlocalStorage.removeItem(\"publicKey\");\n\t\tlocalStorage.removeItem(\"generatedPublickey\");\n\t\tlocalStorage.removeItem(\"privateKey\");\n\t\tlocalStorage.removeItem(\"role\");\n\t\tlocalStorage.removeItem(\"email\");\n\t\tlocalStorage.removeItem(\"user\");\n\t\tlocalStorage.removeItem(\"pass\");\n\n\n\t\tthis.la = this.httpuser.lout();\n\t\tthis.lb = this.la.subscribe((data) => {\n\t\t\tconsole.log(\"logout\");\n\t\t},\n\t\t\t(err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t\tthis.router.navigate(['/home']);\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tthis.router.navigate(['/home']);\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\n\t\tif (this.lb !== undefined) {\n\t\t\tthis.lb.unsubscribe();\n\t\t}\n\t}\n\n\n}\n","export class Distrubuter {\n  batchid: string;\n  shipper: string;\n  reciver: string;\n\n  constructor(batchid: string, shipper: string, reciver: string) {\n    this.batchid = batchid;\n    this.shipper = shipper;\n    this.reciver = reciver;\n  }\n}\n","module.exports = \".container{\\n   \\n    background-color: rgb(0, 0, 0) !important;   \\n    margin-top: 35px;   \\n    border-top-right-radius: 70px;\\n    border-top-left-radius: 70px;\\n}\\n\\nbody{\\n    background-color: rgb(7, 71, 167) !important;\\n}\\n\\nh4{\\n    border-radius: 38px;\\n    border: 12px solid black;\\n    border-bottom-width: 13px;\\n    margin-top: -24px;\\n    background-color: rgb(23, 0, 222);\\n    color: white;\\n    font-family: fantasy;\\n    font-size: 30px;\\n    text-align: center;\\n    margin-bottom: 25px;\\n}\\n\\nh2{\\n    font-size: 2rem;\\n    color: white;\\n    font-family: inherit;\\n    padding: 12px;\\n    border-top: 2px solid indianred;\\n    border-bottom: 2px solid indianred;\\n    border-right: 2px solid indianred;\\n    border-right-width: 12px;\\n    border-left: 2px solid indianred;\\n    border-left-width: 12px;\\n}\\n\\n.col{\\n    flex-basis: 0;\\n    flex-grow: 1;\\n    background-color: ghostwhite;\\n    margin-left: 5%;   \\n    max-width: 90%;\\n}\\n\\n#rows{\\n\\t padding: 2px;\\n}\\n\\n#content{\\n    background-color: ghostwhite !important;   \\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vZGFzaGJvYXJkL2Rpc3RydWJ1dGVyL2Rpc3RydWJ1dGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0lBRUkseUNBQXlDO0lBQ3pDLGdCQUFnQjtJQUNoQiw2QkFBNkI7SUFDN0IsNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0ksNENBQTRDO0FBQ2hEOztBQUNBO0lBQ0ksbUJBQW1CO0lBQ25CLHdCQUF3QjtJQUN4Qix5QkFBeUI7SUFDekIsaUJBQWlCO0lBQ2pCLGlDQUFpQztJQUNqQyxZQUFZO0lBQ1osb0JBQW9CO0lBQ3BCLGVBQWU7SUFDZixrQkFBa0I7SUFDbEIsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksZUFBZTtJQUNmLFlBQVk7SUFDWixvQkFBb0I7SUFDcEIsYUFBYTtJQUNiLCtCQUErQjtJQUMvQixrQ0FBa0M7SUFDbEMsaUNBQWlDO0lBQ2pDLHdCQUF3QjtJQUN4QixnQ0FBZ0M7SUFDaEMsdUJBQXVCO0FBQzNCOztBQUNBO0lBQ0ksYUFBYTtJQUNiLFlBQVk7SUFDWiw0QkFBNEI7SUFDNUIsZUFBZTtJQUNmLGNBQWM7QUFDbEI7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7SUFDSSx1Q0FBdUM7QUFDM0MiLCJmaWxlIjoic3JjL2FwcC9hZG1pbi9kYXNoYm9hcmQvZGlzdHJ1YnV0ZXIvZGlzdHJ1YnV0ZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXJ7XG4gICBcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMCwgMCwgMCkgIWltcG9ydGFudDsgICBcbiAgICBtYXJnaW4tdG9wOiAzNXB4OyAgIFxuICAgIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiA3MHB4O1xuICAgIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDcwcHg7XG59XG5cbmJvZHl7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDcsIDcxLCAxNjcpICFpbXBvcnRhbnQ7XG59XG5oNHtcbiAgICBib3JkZXItcmFkaXVzOiAzOHB4O1xuICAgIGJvcmRlcjogMTJweCBzb2xpZCBibGFjaztcbiAgICBib3JkZXItYm90dG9tLXdpZHRoOiAxM3B4O1xuICAgIG1hcmdpbi10b3A6IC0yNHB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigyMywgMCwgMjIyKTtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgZm9udC1mYW1pbHk6IGZhbnRhc3k7XG4gICAgZm9udC1zaXplOiAzMHB4O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBtYXJnaW4tYm90dG9tOiAyNXB4O1xufVxuXG5oMntcbiAgICBmb250LXNpemU6IDJyZW07XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICAgIHBhZGRpbmc6IDEycHg7XG4gICAgYm9yZGVyLXRvcDogMnB4IHNvbGlkIGluZGlhbnJlZDtcbiAgICBib3JkZXItYm90dG9tOiAycHggc29saWQgaW5kaWFucmVkO1xuICAgIGJvcmRlci1yaWdodDogMnB4IHNvbGlkIGluZGlhbnJlZDtcbiAgICBib3JkZXItcmlnaHQtd2lkdGg6IDEycHg7XG4gICAgYm9yZGVyLWxlZnQ6IDJweCBzb2xpZCBpbmRpYW5yZWQ7XG4gICAgYm9yZGVyLWxlZnQtd2lkdGg6IDEycHg7XG59XG4uY29se1xuICAgIGZsZXgtYmFzaXM6IDA7XG4gICAgZmxleC1ncm93OiAxO1xuICAgIGJhY2tncm91bmQtY29sb3I6IGdob3N0d2hpdGU7XG4gICAgbWFyZ2luLWxlZnQ6IDUlOyAgIFxuICAgIG1heC13aWR0aDogOTAlO1xufVxuICAgXG4jcm93c3tcblx0IHBhZGRpbmc6IDJweDtcbn1cblxuI2NvbnRlbnR7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogZ2hvc3R3aGl0ZSAhaW1wb3J0YW50OyAgIFxufSJdfQ== */\"","module.exports = \"\\n<app-dashboard></app-dashboard>\\n\\n<div class=\\\"container\\\"> \\n    \\n    <form id=\\\"content\\\" [formGroup]=\\\"registerForm1\\\" (ngSubmit)=\\\"distributer(bId.value,shipper.value,reciver.value)\\\">\\n      <br>\\n      <h4>Distributor</h4>\\n        <div class=\\\"row\\\">\\n          \\n              <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n                <label>Batch ID</label><span style=\\\"color: red\\\">*</span> \\n                <input #bId type=\\\"text\\\" class=\\\"form-control  required\\\" formControlName=\\\"bId011\\\" [ngClass]=\\\"{ 'is-invalid': submitted1 && f1.bId011.errors }\\\" maxlength=\\\"30\\\" >\\n                <div *ngIf=\\\"submitted1 && f1.bId011.errors\\\" class=\\\"invalid-feedback\\\">\\n                  <div *ngIf=\\\"f1.bId011.errors.required\\\">Batch ID required</div>\\n                </div>\\n              </div></div>\\n          </div>\\n\\n\\n    \\n\\n      <div class=\\\"row\\\">\\n          <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n              <label>Shipper</label><span style=\\\"color: red\\\">*</span>\\n              <input #shipper type=\\\"text\\\" class=\\\"form-control required\\\"  formControlName=\\\"shipper011\\\" [ngClass]=\\\"{ 'is-invalid': submitted1 && f1.shipper011.errors }\\\" maxlength=\\\"30\\\">\\n              <div *ngIf=\\\"submitted1 && f1.shipper011.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"f1.shipper011.errors.required\\\">Shipper required</div>\\n              </div>\\n            </div></div>           \\n        </div>     \\n\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n                <label>Receiver</label><span style=\\\"color: red\\\">*</span>\\n                <input #reciver type=\\\"text\\\" class=\\\"form-control required\\\" formControlName=\\\"reciver011\\\" [ngClass]=\\\"{ 'is-invalid': submitted1 && f1.reciver011.errors }\\\" maxlength=\\\"30\\\">\\n                <div *ngIf=\\\"submitted1 && f1.reciver011.errors\\\" class=\\\"invalid-feedback\\\">\\n                  <div *ngIf=\\\"f1.reciver011.errors.required\\\">Receiver required</div>\\n                </div>\\n              </div></div>            \\n          </div>     \\n              \\n            \\n           \\n            <div class=\\\"row text-right\\\">\\n                <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" >Create Records</button>\\n                    </div></div>\\n              </div> \\n                <div class=\\\"row text-right\\\">\\n                <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n                  <a [routerLink]=\\\"'/senddistributor'\\\" class=\\\"btn btn-success\\\">Send Medicine Info </a>\\n                    </div></div>\\n              </div> \\t\\t\\t  \\n                  \\n    </form>\\n\\n\\n\\n\\n    <div class=\\\"container\\\">\\n      <h2>List Of Distributor</h2>\\n      <div class=\\\"table-responsive\\\">\\n      <table class=\\\"table table-striped table-dark table-hover text-center\\\">\\n        \\n              <thead class=\\\"theme-table\\\">\\n                <tr>\\n                  <th >Batch ID</th>\\n                  <th>Shipper</th>\\n                  <th>Receiver</th>\\n                  <th></th>\\n                  <th></th>\\n                  <th></th>\\n                </tr>\\n              </thead>\\n  \\n          \\n  \\n  \\n          <tbody>\\n          <tr *ngFor=\\\"let distdata  of list\\\">\\n              <td>{{distdata.batchid}}</td>\\n              <td style=\\\"width:10px;height: 20px\\\">{{distdata.shipper}}</td>\\n              <td>{{distdata.reciver}}</td>\\n              <td></td>\\n              <td><button type=\\\"button\\\"  class=\\\"btn btn-primary\\\" (click)=\\\"editDistributor(distdata._id)\\\" data-toggle=\\\"modal\\\" data-target=\\\"#exampleModalCenter\\\">Edit</button></td>\\n              <td><button  type=\\\"button\\\" (click)=\\\"deletedistributer(distdata._id)\\\" class=\\\"btn btn-danger\\\">Delete</button></td>\\n          </tr>\\n          </tbody>\\n          <tfoot class=\\\"theme-table\\\">\\n              <tr>\\n                <th></th>\\n                <th></th>\\n                <th></th>\\n                <th></th>\\n                <th></th>\\n                <th></th>\\n              </tr>\\n            </tfoot>\\n          \\n      </table>\\n      \\n      </div>\\n  </div>\\n\\n\\n<div class=\\\"container\\\">\\n\\n    <!-- The Modal -->\\n    <div class=\\\"modal fade\\\" id=\\\"exampleModalCenter\\\">\\n      <div class=\\\"modal-dialog\\\">\\n        <div class=\\\"modal-content\\\">\\n  \\n  \\n          <!-- Modal body -->\\n          <div class=\\\"modal-body\\\">\\n            <form [formGroup]=\\\"registerForm\\\"\\n              (ngSubmit)=\\\"onSubmit(bId1.value,shipper1.value, reciver1.value,editlist._id)\\\">\\n  \\n  \\n              \\n  \\n  \\n  \\n              <div class=\\\"form-group\\\">\\n                <label>Batch ID</label>\\n                <input type=\\\"text\\\" formControlName=\\\"batchid0\\\" #bId1 class=\\\"form-control required\\\"\\n                  [(ngModel)]=\\\"editlist.batchid\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.batchid0.errors }\\\">\\n                <div *ngIf=\\\"submitted && f.batchid0.errors\\\" class=\\\"invalid-feedback\\\">\\n                  <div *ngIf=\\\"f.batchid0.errors.required\\\">Batch ID required</div>\\n                </div>\\n              </div>\\n  \\n              <div class=\\\"form-group\\\">\\n                <label>Shipper</label>\\n                <input #shipper1 type=\\\"text\\\" formControlName=\\\"medicineStatus0\\\" class=\\\"form-control required\\\"\\n                  [(ngModel)]=\\\"editlist.shipper\\\"\\n                  [ngClass]=\\\"{ 'is-invalid': submitted && f.medicineStatus0.errors }\\\">\\n                <div *ngIf=\\\"submitted && f.medicineStatus0.errors\\\" class=\\\"invalid-feedback\\\">\\n                  <div *ngIf=\\\"f.medicineStatus0.errors.required\\\">Shipper required </div>\\n                </div>\\n              </div>\\n  \\n              <div class=\\\"form-group\\\">\\n                <label>Receiver</label>\\n                <input #reciver1 type=\\\"text\\\" formControlName=\\\"medicineQuality0\\\" class=\\\"form-control required\\\"\\n                  [(ngModel)]=\\\"editlist.reciver\\\" maxlength=\\\"30\\\"\\n                  [ngClass]=\\\"{ 'is-invalid': submitted && f.medicineQuality0.errors }\\\">\\n                <div *ngIf=\\\"submitted && f.medicineQuality0.errors\\\" class=\\\"invalid-feedback\\\">\\n                  <div *ngIf=\\\"f.medicineQuality0.errors.required\\\">Receiver required </div>\\n                </div>\\n  \\n  \\n              </div>\\n  \\n              <!-- Modal footer -->\\n              <div class=\\\"modal-footer\\\">\\n                <div class=\\\"form-group\\\">\\n                  <button type=\\\"button\\\" #completeModal class=\\\"btn btn-danger\\\" (click)=\\\"distributerList()\\\" data-dismiss=\\\"modal\\\">Close</button>\\n                </div>\\n  \\n                <div class=\\\"form-group\\\">\\n                  <button class=\\\"btn btn-primary\\\">Save changes</button>\\n                </div>\\n              </div>\\n            </form>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n \\n\"","import { Component, OnInit,ElementRef,ViewChild} from '@angular/core';\nimport { NgbModalConfig, NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Distrubuter } from './dist';\nimport { AuthService } from '../../../service/auth.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n\n\n@Component({\n  selector: \"app-distrubuter\",\n  templateUrl: \"./distrubuter.component.html\",\n  styleUrls: [\"./distrubuter.component.css\"]\n})\nexport class DistrubuterComponent implements OnInit {\n\n@ViewChild('completeModal')completeModal: ElementRef;\n  registerForm: FormGroup;\n  registerForm1:FormGroup;\n  submitted = false;\n  submitted1 = false;\n\n\n  list: any = [];\n  distributor1: any = Distrubuter;\n  editlist: any = [];\n\n  base;\n  call;\n  batchid;\n  shipper;\n  reciver;\n  \n  //button1:any;\n  //popuptask:boolean=true;\n\n  log(x){\n  console.log(x);\n  }\n\n  constructor(\n    private httpuser: AuthService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private formBuilder: FormBuilder\n\t\n  ) {}\n\n  ngOnInit() {\n    this.distributerList();\n  //this.button1='show';\n    \n  this.registerForm = this.formBuilder.group({\n    batchid0: ['', Validators.required],\n    medicineStatus0: ['', Validators.required],\n    medicineQuality0:['', Validators.required]\n    \n    \n    });\n    this.registerForm1=this.formBuilder.group({\n      bId011:['',Validators.required],\n      shipper011:['',Validators.required],\n      reciver011:['',Validators.required]\n\n    });\n    \n  }\n  \n // postPrivateKey(a){\n\t//  console.log(a);\n\t // this.button1=\"hide\";\n\t // this.popuptask=false;\t  \n\t//\t}\n \n  \n  distributerList() {\n    return this.httpuser.getDistributerList().subscribe(data => {\n      this.list = data;\n     \n    });\n  }\n  // convenience getter for easy access to form fields\n  get f1() { return this.registerForm1.controls; }\n\n  distributer(x: string, y: string, z: string) {\n    \n         this.submitted1 = true;\n\n      // stop here if form is invalid\n        if (this.registerForm1.invalid) {\n           return;\n         }\n       console.log(x,y,z);\n    \n\n    this.distributor1 = new Distrubuter(x, y, z);\n    this.base = this.httpuser.distributer(this.distributor1);\n    this.call = this.base.subscribe(\n      data => {\n       \n        alert(\"done\");\n        this.distributerList();\n      },\n      err => {\n        console.log(err);\n      },\n      () => {\n        console.log(\"Done\");\n      }\n    );\n  }\n  deletedistributer(id){\n    if(confirm('Are sure to delete ?')){\n    this.httpuser.deleteDistributer(id).subscribe(res => {\n      \n      this.distributerList();\n    });\n  }\n  \n  }\n\n  editDistributor(id) {\n    this.httpuser.editDistributor(id).subscribe(res => {\n      this.editlist = res;\n    });\n  }\n  \n  \n \n  \n   //UpdateDistributor\n  updateDistributor(batchid, shipper, reciver, id) {\n    this.route.params.subscribe(params => {\n      this.httpuser.updateDistributor(batchid, shipper, reciver, id);\t \n        \n\t   alert(\"Data Updated\");\n\t   \n    });\n  }\n\n\n  // convenience getter for easy access to form fields\n get f() { return this.registerForm.controls; }\n\n\n\n\n onSubmit(batchid1, shipper1, reciver1, id1){\n   \n  this.submitted = true;\n\n  // stop here if form is invalid\n  if (this.registerForm.invalid) {\n      return;\n  }\n  console.log(batchid1, shipper1, reciver1, id1);\n\n  this.route.params.subscribe(params => {\n    this.httpuser.updateDistributor(batchid1, shipper1, reciver1, id1);\t\n    let el: HTMLElement = this.completeModal.nativeElement;\n      el.click(); \n     let x= setTimeout(()=>{  this.distributerList()}, 100); \n      \n   alert(\"Data Updated\");\n   \n  });\n  \n \n}\n\n\n}\n","export class Manufacture {\n         medicinedescription: string;\n         medicineStatus: string;\n         pickdate: string;\n         packdate:string;\n         reciver: string;\n         quality: string;\n         recivertype: string;\n\n         constructor(\n           medicinedescription: string,\n           medicineStatus: string,\n           pickdate: string,\n           packdate:string,\n           reciver: string,\n           quality: string,\n             recivertype: string\n         ) {\n             this.medicinedescription = medicinedescription;\n             this.medicineStatus = medicineStatus;\n             this.pickdate = pickdate;\n             this.packdate=packdate;\n             this.reciver = reciver;\n             this.quality = quality;\n             this.recivertype = recivertype;\n\n         }\n       }\n","module.exports = \".container{\\n   \\n    background-color: rgb(0, 0, 0) !important;   \\n    margin-top: 35px;   \\n    border-top-right-radius: 70px;\\n    border-top-left-radius: 70px;\\n}\\n\\nbody{\\n    background-color: rgb(7, 71, 167) !important;\\n}\\n\\nh4{\\n    border-radius: 38px;\\n    border: 12px solid black;\\n    border-bottom-width: 13px;\\n    margin-top: -24px;\\n    background-color: rgb(23, 0, 222);\\n    color: white;\\n    font-family: fantasy;\\n    font-size: 30px;\\n    text-align: center;\\n    margin-bottom: 25px;\\n}\\n\\nh2{\\n    font-size: 2rem;\\n    color: white;\\n    font-family: inherit;\\n    padding: 12px;\\n    border-top: 2px solid indianred;\\n    border-bottom: 2px solid indianred;\\n    border-right: 2px solid indianred;\\n    border-right-width: 12px;\\n    border-left: 2px solid indianred;\\n    border-left-width: 12px;\\n}\\n\\n.col{\\n    flex-basis: 0;\\n    flex-grow: 1;\\n    background-color: ghostwhite;\\n   \\n}\\n\\n.row {\\n    display: flex;\\n    flex-wrap: wrap;\\n    margin-right: 0px;\\n    margin-left: 1px;\\n}\\n\\n#rows{\\n\\t     margin-right: 0px;\\n    margin-left: 0px;\\n\\n}\\n\\n#content{\\n    background-color: ghostwhite !important;   \\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vZGFzaGJvYXJkL21hbnVmYWN0dXJlci9tYW51ZmFjdHVyZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7SUFFSSx5Q0FBeUM7SUFDekMsZ0JBQWdCO0lBQ2hCLDZCQUE2QjtJQUM3Qiw0QkFBNEI7QUFDaEM7O0FBRUE7SUFDSSw0Q0FBNEM7QUFDaEQ7O0FBQ0E7SUFDSSxtQkFBbUI7SUFDbkIsd0JBQXdCO0lBQ3hCLHlCQUF5QjtJQUN6QixpQkFBaUI7SUFDakIsaUNBQWlDO0lBQ2pDLFlBQVk7SUFDWixvQkFBb0I7SUFDcEIsZUFBZTtJQUNmLGtCQUFrQjtJQUNsQixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxlQUFlO0lBQ2YsWUFBWTtJQUNaLG9CQUFvQjtJQUNwQixhQUFhO0lBQ2IsK0JBQStCO0lBQy9CLGtDQUFrQztJQUNsQyxpQ0FBaUM7SUFDakMsd0JBQXdCO0lBQ3hCLGdDQUFnQztJQUNoQyx1QkFBdUI7QUFDM0I7O0FBQ0E7SUFDSSxhQUFhO0lBQ2IsWUFBWTtJQUNaLDRCQUE0Qjs7QUFFaEM7O0FBQ0E7SUFDSSxhQUFhO0lBQ2IsZUFBZTtJQUNmLGlCQUFpQjtJQUNqQixnQkFBZ0I7QUFDcEI7O0FBRUE7TUFDTSxpQkFBaUI7SUFDbkIsZ0JBQWdCOztBQUVwQjs7QUFFQTtJQUNJLHVDQUF1QztBQUMzQyIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2Rhc2hib2FyZC9tYW51ZmFjdHVyZXIvbWFudWZhY3R1cmVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVye1xuICAgXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDAsIDAsIDApICFpbXBvcnRhbnQ7ICAgXG4gICAgbWFyZ2luLXRvcDogMzVweDsgICBcbiAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogNzBweDtcbiAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiA3MHB4O1xufVxuXG5ib2R5e1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYig3LCA3MSwgMTY3KSAhaW1wb3J0YW50O1xufVxuaDR7XG4gICAgYm9yZGVyLXJhZGl1czogMzhweDtcbiAgICBib3JkZXI6IDEycHggc29saWQgYmxhY2s7XG4gICAgYm9yZGVyLWJvdHRvbS13aWR0aDogMTNweDtcbiAgICBtYXJnaW4tdG9wOiAtMjRweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjMsIDAsIDIyMik7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIGZvbnQtZmFtaWx5OiBmYW50YXN5O1xuICAgIGZvbnQtc2l6ZTogMzBweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbWFyZ2luLWJvdHRvbTogMjVweDtcbn1cblxuaDJ7XG4gICAgZm9udC1zaXplOiAycmVtO1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgICBwYWRkaW5nOiAxMnB4O1xuICAgIGJvcmRlci10b3A6IDJweCBzb2xpZCBpbmRpYW5yZWQ7XG4gICAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkIGluZGlhbnJlZDtcbiAgICBib3JkZXItcmlnaHQ6IDJweCBzb2xpZCBpbmRpYW5yZWQ7XG4gICAgYm9yZGVyLXJpZ2h0LXdpZHRoOiAxMnB4O1xuICAgIGJvcmRlci1sZWZ0OiAycHggc29saWQgaW5kaWFucmVkO1xuICAgIGJvcmRlci1sZWZ0LXdpZHRoOiAxMnB4O1xufVxuLmNvbHtcbiAgICBmbGV4LWJhc2lzOiAwO1xuICAgIGZsZXgtZ3JvdzogMTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBnaG9zdHdoaXRlO1xuICAgXG59XG4ucm93IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICBtYXJnaW4tcmlnaHQ6IDBweDtcbiAgICBtYXJnaW4tbGVmdDogMXB4O1xufVxuICAgXG4jcm93c3tcblx0ICAgICBtYXJnaW4tcmlnaHQ6IDBweDtcbiAgICBtYXJnaW4tbGVmdDogMHB4O1xuXG59XG5cbiNjb250ZW50e1xuICAgIGJhY2tncm91bmQtY29sb3I6IGdob3N0d2hpdGUgIWltcG9ydGFudDsgICBcbn0iXX0= */\"","module.exports = \"<app-dashboard></app-dashboard>\\n<!-- <div class=\\\"container\\\">  -->\\n<!-- <form id=\\\"content\\\" [formGroup]=\\\"registerForm1\\\"  (ngSubmit)=\\\"manufacture(md.value,sh.value,pid.value,pad.value,re.value,qu.value,rt.value)\\\">\\n        <br>\\n       <h4>Manufacture Details</h4>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n                <label>Medicine Description</label>\\n                <textarea #md cols=\\\"60\\\" rows=\\\"3\\\" class=\\\"form-control required\\\" [ngClass]=\\\"{ 'is-invalid': submitted1 && f1.md011.errors }\\\" formControlName=\\\"md011\\\"></textarea>\\n                <div *ngIf=\\\"submitted1 && f1.md011.errors\\\" class=\\\"invalid-feedback\\\">\\n                  <div *ngIf=\\\"f1.md011.errors.required\\\">Medicine Description required </div>\\n                </div>\\n                \\n              </div></div>\\n              <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n                <label>Shipper</label>\\n                <input #sh type=\\\"text\\\" class=\\\"form-control required\\\" formControlName=\\\"sh011\\\" [ngClass]=\\\"{ 'is-invalid': submitted1 && f1.sh011.errors }\\\" maxlength=\\\"30\\\" >\\n                <div *ngIf=\\\"submitted1 && f1.sh011.errors\\\" class=\\\"invalid-feedback\\\">\\n                  <div *ngIf=\\\"f1.sh011.errors.required\\\">Shipper required </div>\\n                </div>\\n                \\n              </div></div>\\n          </div>\\n\\n      <div class=\\\"row\\\" >\\n        <div class=\\\"col-md-3\\\"><div class=\\\"form-group\\\" >\\n            <label>Pick Date</label>\\n            <input #pid type=\\\"date\\\" onkeydown=\\\"return false\\\" class=\\\"form-control required\\\"  formControlName=\\\"pid011\\\" [ngClass]=\\\"{ 'is-invalid': submitted1 && f1.pid011.errors }\\\" maxlength=\\\"30\\\" >\\n            <div *ngIf=\\\"submitted1 && f1.pid011.errors\\\" class=\\\"invalid-feedback\\\">\\n              <div *ngIf=\\\"f1.pid011.errors.required\\\">Pick Date required </div>\\n            </div>\\n            \\n          </div></div>\\n        <div class=\\\"col-md-3\\\"><div class=\\\"form-group\\\">\\n            <label>Pack Date</label>\\n            <input #pad type=\\\"date\\\" onkeydown=\\\"return false\\\" class=\\\"form-control required\\\" formControlName=\\\"pad011\\\" [ngClass]=\\\"{ 'is-invalid': submitted1 && f1.pad011.errors }\\\" maxlength=\\\"30\\\" >\\n            <div *ngIf=\\\"submitted1 && f1.pad011.errors\\\" class=\\\"invalid-feedback\\\">\\n              <div *ngIf=\\\"f1.pad011.errors.required\\\">Pack Date required </div>\\n            </div>\\n            \\n          </div></div>\\n          <div class=\\\"col-md-6\\\"><div class=\\\"form-group\\\">\\n            <label>Receiver</label>\\n            <input #re type=\\\"text\\\" class=\\\"form-control required\\\"  formControlName=\\\"re011\\\" [ngClass]=\\\"{ 'is-invalid': submitted1 && f1.re011.errors }\\\" maxlength=\\\"30\\\" >\\n            <div *ngIf=\\\"submitted1 && f1.re011.errors\\\" class=\\\"invalid-feedback\\\">\\n              <div *ngIf=\\\"f1.re011.errors.required\\\">Receiver required </div>\\n            </div>\\n            \\n          </div></div>\\n      </div>\\n\\n      <div class=\\\"row\\\">\\n          <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n              <label>Quality</label>\\n              <input #qu type=\\\"text\\\" class=\\\"form-control required\\\" formControlName=\\\"qu011\\\" [ngClass]=\\\"{ 'is-invalid': submitted1 && f1.qu011.errors }\\\"  maxlength=\\\"30\\\" >\\n              <div *ngIf=\\\"submitted1 && f1.qu011.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"f1.qu011.errors.required\\\">Quality required </div>\\n              </div>\\n              \\n            </div></div>\\n          <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n              <label>Receiver Type</label>\\n              <div class=\\\"form-group\\\">                        \\n                  <select #rt class=\\\"form-control required\\\" formControlName=\\\"rt011\\\" [ngClass]=\\\"{ 'is-invalid': submitted1 && f1.rt011.errors }\\\" maxlength=\\\"30\\\" >\\n                    <option></option>\\n                    <option>Wholesaler</option>\\n                    <option>Distributor</option>\\n                    \\n                  </select>\\n                  <div *ngIf=\\\"submitted1 && f1.rt011.errors\\\" class=\\\"invalid-feedback\\\">\\n                    <div *ngIf=\\\"f1.rt011.errors.required\\\">Receiver Type required </div>\\n                  </div>\\n                 \\n                </div>\\n            </div></div>          \\n        </div>\\n        <div class=\\\"row text-right\\\" >\\n          <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n            <button type=\\\"Submit\\\"  class=\\\"btn btn-primary\\\">Create Records</button>\\n              </div></div>\\n        </div>\\n  <br clear=\\\"all\\\">\\n  </form>\\n\\n\\n\\n  \\n   -->\\n  \\n\\n      \\n            \\n<!--            \\n           \\n\\n\\t <div class=\\\"container\\\">\\n                 <h2>List Of Manufacture</h2>\\n                <div class=\\\"table-responsive\\\">\\n                <table id=\\\"table_id\\\" class=\\\"table table-striped table-dark table-hover text-center\\\">\\n                 \\n                  <thead class=\\\"theme-table\\\">\\n                \\n                    <tr>\\n                      <th>Medicine Description</th>\\n                      <th>Shipper</th>\\n                      <th>Pick Date</th>\\n                      <th>Pack Date</th>\\n                      <th>Receiver</th>\\n                      <th>Quality</th>\\n                      <th>Receiver Type</th>\\n                      <th>Edit</th>\\n                      <th>Delete</th>\\n                    </tr>\\n                \\n                  </thead>\\n                \\n                  <tbody>\\n                    \\n                    \\n                    <tr *ngFor=\\\"let distdata of list\\\">\\n                      <td>{{ distdata.medicinedescription }}</td>\\n                      <td>{{ distdata.medicineStatus }}</td>\\n                      <td>{{ distdata.pickdate | date:'MM/dd/yyyy' }}</td>\\n                      <td>{{ distdata.packdate | date:'MM/dd/yyyy'}}</td>\\n                      <td>{{ distdata.reciver }}</td>\\n                      <td>{{ distdata.quality }}</td>\\n                      <td>{{ distdata.recivertype }}</td>\\n                      <td>\\n                        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" (click)=\\\"editManufacture(distdata._id)\\\" data-target=\\\"#exampleModalCenter\\\">Edit</button>\\n                      </td>\\n                \\n                      <td>\\n                        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-toggle=\\\"modal\\\"  (click)=\\\"deletemanufacture(distdata._id)\\\" >Delete</button>\\n                      </td>\\n                    </tr>\\n                    \\n                \\n                  </tbody>\\n                  <tfoot class=\\\"theme-table\\\">\\n                    <tr>\\n                      <th></th>\\n                      <th></th>\\n                      <th></th>\\n                      <th></th>\\n                      <th></th>\\n                      <th></th>\\n                      <th></th>\\n                      <th></th>\\n                      <th></th>\\n                    </tr>\\n                  </tfoot>\\n                </table>\\n                </div>\\n                \\n            </div>\\n\\n \\n\\n<div class=\\\"modal fade\\\" id=\\\"exampleModalCenter1\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalCenterTitle\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-dialog-centered modal-dialog modal-lg\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLongTitle\\\">Edit Data</h5>\\n        \\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form>\\n           <div class=\\\"row\\\">\\n            <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n                <label>Medicine Description</label>\\n                <textarea  cols=\\\"60\\\" rows=\\\"3\\\" #md1 class=\\\"form-control required\\\"  [(ngModel)]=\\\"editlist.medicinedescription\\\" name=\\\"medicinedescription\\\" required></textarea>\\n              \\n              </div></div>\\n              <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n                <label>Shipper</label>\\n                <input  type=\\\"text\\\" #sh1 class=\\\"form-control required \\\" [(ngModel)]=\\\"editlist.medicineStatus\\\" name=\\\"medicineStatus\\\" maxlength=\\\"30\\\" required>\\n              </div></div>\\n          </div>\\n\\n        <div class=\\\"row\\\">\\n        <div class=\\\"col-md-3\\\"><div class=\\\"form-group\\\">\\n            <label>Pick Date</label>\\n            <input  type=\\\"date\\\" #pid1  class=\\\"form-control required \\\" [(ngModel)]=\\\"editlist.pickdate\\\" name=\\\"pickdate\\\" maxlength=\\\"30\\\" >\\n          </div></div>\\n        <div class=\\\"col-md-3\\\"><div class=\\\"form-group\\\">\\n            <label>Pack Date</label>\\n            <input  type=\\\"date\\\" #pad1 class=\\\"form-control required \\\" [(ngModel)]=\\\"editlist.packdate\\\" name=\\\"packdate\\\" maxlength=\\\"30\\\" >\\n          </div></div>\\n          <div class=\\\"col-md-6\\\"><div class=\\\"form-group\\\">\\n            <label>Receiver</label>\\n            <input  type=\\\"text\\\" #re1 class=\\\"form-control required\\\" [required]=\\\"true\\\" [(ngModel)]=\\\"editlist.reciver\\\" name=\\\"reciver\\\" maxlength=\\\"30\\\" >\\n          </div></div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n              <label>Quality</label>\\n              <input  type=\\\"text\\\" #qu1 class=\\\"form-control required \\\" [(ngModel)]=\\\"editlist.quality\\\" name=\\\"quality\\\" maxlength=\\\"30\\\" >\\n            </div></div>\\n          <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n              <label>Receiver Type</label>\\n              <div class=\\\"form-group\\\">                        \\n                  <select #rt1 class=\\\"form-control required \\\" [(ngModel)]=\\\"editlist.recivertype\\\" name=\\\"recivertype\\\" maxlength=\\\"30\\\" >\\n                    <option>Select field</option>\\n                    <option>Wholesaler</option>\\n                    <option>Distributor</option>\\n                  </select>\\n                </div>\\n            </div></div>          \\n        </div>\\n        \\n      \\n          <div class=\\\"modal-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" #completeModal (click)=\\\"manufactureList();\\\" data-dismiss=\\\"modal\\\">Close</button>\\n          <button type=\\\"reset\\\" class=\\\"btn btn-primary\\\" (click)=\\\"updatManufacture(md1.value, sh1.value,pid1.value,pad1.value,re1.value,qu1.value,rt1.value,editlist._id)\\\">Save changes</button>\\n          </div>\\n        </form>\\n      </div>\\n  </div>\\n</div>\\n  </div> -->\\n  \\n  \\n\\n\\n<!-- private key Modal -->\\n<!--\\n<div *ngIf=\\\"popuptask\\\" _ngcontent-c1 aria-labelledby=\\\"exampleModalLabel\\\" class=\\\"modal fade {{button1}}\\\" id=\\\"basicExampleModal\\\" role=\\\"dialog\\\" tabindex=\\\"-1\\\" style=\\\"display: block; background-color: rgba(17, 16, 16, 0.82);\\\" aria-modal=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-lg modal-dialog-centered\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\" style=\\\"    border-bottom: 1px solid #ffffff;\\\">\\n        <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Private Key</h5>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n       <input type=\\\"text\\\" #privateK class=\\\"form-control required\\\" placeholder=\\\"Enter your public Key\\\">\\n      </div>\\n      <div class=\\\"modal-footer\\\" style=\\\"border-top: 1px solid #ffffff;\\\">       \\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"postPrivateKey(privateK.value)\\\">Save</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n-->\\n \\n<!--   ===============================================================================  -->\\n\\n<!-- Update Manufacture -->\\n<!-- <div class=\\\"container\\\">\\n\\n    \\n    <div class=\\\"modal fade\\\" id=\\\"exampleModalCenter\\\">\\n      <div class=\\\"modal-dialog modal-lg\\\">\\n        <div class=\\\"modal-content\\\">\\n  \\n  \\n          \\n          <div class=\\\"modal-body\\\">\\n            <form [formGroup]=\\\"registerForm\\\"\\n            (ngSubmit)=\\\"onSubmit(md1.value, sh1.value,pid1.value,pad1.value,re1.value,qu1.value,rt1.value,editlist._id)\\\">\\n\\n            <div class=\\\"row\\\">\\n            <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n                <label>Medicine Description</label>\\n                <textarea  cols=\\\"60\\\" rows=\\\"3\\\" #md1 [ngClass]=\\\"{ 'is-invalid': submitted && f.md10.errors }\\\" formControlName=\\\"md10\\\" class=\\\"form-control required\\\"  [(ngModel)]=\\\"editlist.medicinedescription\\\" name=\\\"medicinedescription\\\"></textarea>\\n                <div *ngIf=\\\"submitted && f.md10.errors\\\" class=\\\"invalid-feedback\\\">\\n                  <div *ngIf=\\\"f.md10.errors.required\\\">Medicine Description required </div>\\n                </div>\\n              </div></div>\\n              <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n                <label>Shipper</label>\\n                <input  type=\\\"text\\\" #sh1  formControlName=\\\"sh10\\\"  class=\\\"form-control required \\\" [(ngModel)]=\\\"editlist.medicineStatus\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.sh10.errors }\\\" name=\\\"medicineStatus\\\" maxlength=\\\"30\\\">\\n                <div *ngIf=\\\"submitted && f.sh10.errors\\\" class=\\\"invalid-feedback\\\">\\n                  <div *ngIf=\\\"f.sh10.errors.required\\\">Shipper required </div>\\n                </div>\\n              </div></div>\\n          </div>\\n\\n            <div class=\\\"row\\\">\\n            <div class=\\\"col-md-3\\\"><div class=\\\"form-group\\\">\\n            <label>Pick Date</label>\\n            <input  type=\\\"date\\\" onkeydown=\\\"return false\\\"  #pid1  formControlName=\\\"pid10\\\"  [ngClass]=\\\"{ 'is-invalid': submitted && f.pid10.errors }\\\"  class=\\\"form-control required \\\" [(ngModel)]=\\\"editlist.pickdate\\\" name=\\\"pickdate\\\" maxlength=\\\"30\\\" >\\n            \\n            <div *ngIf=\\\"submitted && f.pid10.errors\\\" class=\\\"invalid-feedback\\\">\\n              <div *ngIf=\\\"f.pid10.errors.required\\\">Pick Date required </div>\\n            </div>\\n          </div></div>\\n          <div class=\\\"col-md-3\\\"><div class=\\\"form-group\\\">\\n            <label>Pack Date</label>\\n            <input  type=\\\"date\\\" onkeydown=\\\"return false\\\"  #pad1  formControlName=\\\"pad10\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.pad10.errors }\\\"  class=\\\"form-control required \\\" [(ngModel)]=\\\"editlist.packdate\\\" name=\\\"packdate\\\" maxlength=\\\"30\\\" >\\n            <div *ngIf=\\\"submitted && f.pad10.errors\\\" class=\\\"invalid-feedback\\\">\\n              <div *ngIf=\\\"f.pad10.errors.required\\\">Pack Date required </div>\\n            </div>\\n          </div></div>\\n          <div class=\\\"col-md-6\\\"><div class=\\\"form-group\\\">\\n            <label>Receiver</label>\\n            <input  type=\\\"text\\\" #re1 formControlName=\\\"re10\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.re10.errors }\\\" class=\\\"form-control required\\\" [required]=\\\"true\\\" [(ngModel)]=\\\"editlist.reciver\\\" name=\\\"reciver\\\" maxlength=\\\"30\\\" >\\n            <div *ngIf=\\\"submitted && f.re10.errors\\\" class=\\\"invalid-feedback\\\">\\n              <div *ngIf=\\\"f.re10.errors.required\\\">Receiver required </div>\\n            </div>\\n          </div></div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n              <label>Quality</label>\\n              <input  type=\\\"text\\\" #qu1 formControlName=\\\"qu10\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.qu10.errors }\\\" class=\\\"form-control required \\\" [(ngModel)]=\\\"editlist.quality\\\" name=\\\"quality\\\" maxlength=\\\"30\\\" >\\n              <div *ngIf=\\\"submitted && f.qu10.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"f.qu10.errors.required\\\">Quality required </div>\\n              </div>\\n            </div></div>\\n          <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n              <label>Receiver Type</label>\\n              <div class=\\\"form-group\\\">                        \\n                  <select #rt1  formControlName=\\\"rt10\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.rt10.errors }\\\" class=\\\"form-control required \\\" [(ngModel)]=\\\"editlist.recivertype\\\" name=\\\"recivertype\\\" maxlength=\\\"30\\\" >\\n                      \\n                    <option></option>\\n                  \\n                    <option>Wholesaler</option>\\n                    <option>Distributor</option>\\n                  </select>\\n                  <div *ngIf=\\\"submitted && f.rt10.errors\\\" class=\\\"invalid-feedback\\\">\\n                      <div *ngIf=\\\"f.rt10.errors.required\\\">Receiver Type required </div>\\n                    </div>\\n                </div>\\n            </div></div>          \\n        </div>\\n        \\n  \\n              \\n              <div class=\\\"modal-footer\\\">\\n                <div class=\\\"form-group\\\">\\n                  <button type=\\\"submit\\\" #completeModal class=\\\"btn btn-danger\\\" (click)=\\\"manufactureList()\\\"   data-dismiss=\\\"modal\\\">Close</button>\\n                </div>\\n  \\n                <div class=\\\"form-group\\\">\\n                  <button class=\\\"btn btn-primary\\\">Save changes</button>\\n                </div>\\n              </div>\\n            </form>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div> \\n  -->\\n\\n\\n \\n\\n  \"","import { Component, OnInit,ElementRef,ViewChild} from '@angular/core';\nimport { AuthService } from '../../../service/auth.service';\nimport { Manufacture } from './manufacture';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: \"app-manufacturer\",\n  templateUrl: \"./manufacturer.component.html\",\n  styleUrls: [\"./manufacturer.component.css\"]\n})\nexport class ManufacturerComponent implements OnInit {\n\n\n\n\n  registerForm: FormGroup;\n  submitted = false;\n  registerForm1: FormGroup;\n  submitted1 = false;\n\n  public qrdata: string = null;\n  manufacture1: any = Manufacture;\n  list: any = [];\n  base;\n  call;\n  editlist: any = [];\n  medicinedescription;\n  medicineStatus;\n  pickdate;\n  packdate;\n  reciver;\n  quality;\n  recivertype;\n  userId;\n  @ViewChild('completeModal')completeModal: ElementRef;\n  \n  //button1:any;\n  //popuptask:boolean=true;\n  constructor(private httpuser: AuthService, private route: ActivatedRoute, private router: Router,private formBuilder: FormBuilder) {\n\t   console.log('AppComponent running');\n\t\tthis.qrdata = ' ';\n  }\n   changeValue(newValue: string): void {\n    this.qrdata = newValue;\n  }\n\n  ngOnInit() {\n\t  \n    this.manufactureList();\n    this.userId =localStorage.getItem(\"userId\");\n    console.log(\"User Id is\", this.userId);\n  //this.button1='show';\n \n  this.registerForm = this.formBuilder.group({\n    md10: ['', Validators.required],\n    sh10: ['', Validators.required],\n    pid10:['', Validators.required],\n    pad10:['', Validators.required],\n    re10: ['', Validators.required],\n    qu10: ['', Validators.required],\n    rt10: ['', Validators.required],\n      \n    \n    \n    });\n    this.registerForm1 = this.formBuilder.group({\n      md011: ['', Validators.required],\n      sh011: ['', Validators.required],\n      pid011:['', Validators.required],\n      pad011:['', Validators.required],\n      re011: ['', Validators.required],\n      qu011: ['', Validators.required],\n      rt011: ['', Validators.required],\n        \n      \n      \n      });\n\n\n  }\n  \n/* postPrivateKey(a){\n\t  console.log(a);\n\t  this.button1=\"hide\";\n\t  this.popuptask=false;\t  \n\t\t} */\n  \n  manufactureList() {\n    return this.httpuser.getManufactureList().subscribe(data => {\n      this.list = data;      \n    });\n  }\n\n // convenience getter for easy access to form fields\n get f1() { return this.registerForm1.controls; }\n\n  manufacture(a: string,b: string,c: string,d: string,e: string,f: string,g: string) { \n\n    console.log(c);\n    console.log(d);\n    console.log(\"User Id is\", this.userId);\n\n    this.submitted1 = true;\n  \n    // stop here if form is invalid\n    if (this.registerForm1.invalid) {\n        return;\n    }\n    console.log(a,b,c,d,e,f,g);\n\n\n    \n  \n   \n   \n    this.manufacture1 = new Manufacture(a, b, c, d, e, f, g);\n    this.base = this.httpuser.manufacture(this.manufacture1);\n    this.call = this.base.subscribe(\n      data => {      \n\n        alert(\"done\");\n        this.manufactureList();\n      });\n    \n      \n  }\n\n  deletemanufacture(id) {\n   if(confirm(\"Are you sure to delete ?\")){\n        this.httpuser.deleteManufacture(id).subscribe(res => {\n          this.manufactureList();\n        });\n        \n      }\n    \n   \n  }\n\n  editManufacture(id) {\n    this.httpuser.editManufacture(id).subscribe(res => {\n      this.editlist = res;\n    });\n  }\n\n // convenience getter for easy access to form fields\n get f() { return this.registerForm.controls; }\n\n\n  onSubmit(medicinedescription1,medicineStatus1,pickdate1,packdate1,reciver1,quality1,recivertype1,id1){\n   \n    this.submitted = true;\n  \n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n        return;\n    }\n    console.log(medicinedescription1,medicineStatus1,pickdate1,packdate1,reciver1,quality1,recivertype1,id1);\n    this.route.params.subscribe(params => {\n      this.httpuser.updatManufacture(\n\t\t\t\t\t\t\tmedicinedescription1,\n\t\t\t\t\t\t\tmedicineStatus1,\n\t\t\t\t\t\t\tpickdate1,\n\t\t\t\t\t\t\tpackdate1,\n\t\t\t\t\t\t\treciver1,\n\t\t\t\t\t\t\tquality1,\n\t\t\t\t\t\t\trecivertype1,\n\t\t\t\t\t\t\tid1\n\t\t\t\t\t  );\n      alert(\"Data Successfully Updated\");\n      let el: HTMLElement = this.completeModal.nativeElement;\n      el.click(); \n     let x= setTimeout(()=>{  this.manufactureList()}, 100);\n      this.router.navigate([\"manufacture\"]);\n    });\n  \n    \n    \n   \n  }\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2Rhc2hib2FyZC9wYWNrYWdldHJhbnNwb3J0ZXIvcGFja2FnZXRyYW5zcG9ydGVyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-dashboard></app-dashboard>\\n<div class=\\\"container\\\">\\n\\t<br>\\n\\t<br>\\n\\n\\t<form>\\n\\t\\n        <div class=\\\"row\\\"> \\n          <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n            <label>Packing Barcode</label>\\n\\t\\t\\t<input type=\\\"file\\\" style=\\\"margin-left:20px;\\\" accept=\\\"image/*\\\" (change)=\\\"onFileChange($event)\\\">\\n            <input #br type=\\\"text\\\" value=\\\"{{barcodevalue}}\\\" class=\\\"form-control required\\\" >\\n          </div>\\n        </div>   \\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Current Status</label>\\n                <select #status class=\\\"form-control\\\" >\\n                  <option >Manufecturer package Picked-up</option>\\n                  <option >Wholesaler package Picked-up</option>\\n                  <option >Distributer package Picked-up</option>\\n                    </select>   \\n              </div>\\n            </div>\\n          </div>\\n            <div class=\\\"row text-right\\\">\\n             \\t\\t<div class=\\\"col\\\">\\n             \\t\\t\\t<div class=\\\"form-group\\\">\\n                  \\t\\t\\t<button type=\\\"reset\\\" (click)=\\\"getByPackageId(br.value, status.value,4)\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n\\t\\t\\t\\t\\t\\t\\t&nbsp; &nbsp;\\n\\t\\t\\t\\t\\t\\t\\t<!-- <button type=\\\"reset\\\" (click)=\\\"getByPackageId(br.value, status.value,5)\\\" class=\\\"btn btn-primary\\\">Reject</button> -->\\n                \\t\\t</div>\\n                </div>\\n             </div>\\n\\t</form>\\n\\n\\n  <div *ngIf=\\\"displayTable\\\" class=\\\"table-responsive\\\">\\n    <br>\\n    <table class=\\\"table table-striped table-dark table-hover text-center\\\">\\n      \\n        <thead class=\\\"theme-table\\\">\\n            <tr>            \\n                <th> Serial Number</th>\\n                <th>Level</th>\\n                <th>Location</th>             \\n            </tr>\\n        </thead>\\n        <tbody>\\n          <tr>\\n            <td><a [routerLink]=\\\"['/package/details',mlist[0].serial]\\\">{{mlist[0].serial}}</a></td>\\n            <td>{{mlist[0].level}}</td>\\n            <td>{{mlist[0].location}}</td>\\n            </tr>\\n         \\n        </tbody>\\n        <tfoot class=\\\"theme-table\\\"><tr><th></th><th></th><th></th></tr></tfoot>\\n      </table>\\n    </div>\\n\\n\\n\\n<div  class=\\\"table-responsive\\\">\\n  <br>\\n  <table class=\\\"table table-striped table-dark table-hover text-center\\\">\\n    \\n      <thead class=\\\"theme-table\\\">\\n          <tr>            \\n              <th>Serial Number</th>\\n              <th>Level</th>\\n              <th>Location</th>          \\n          </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let list of TMlist\\\">\\n          <td><a [routerLink]=\\\"['/package/details',list.serial]\\\">{{list.serial}}</a></td>\\n          <td>{{list.level}}</td>\\n          <td>{{list.location}}</td>\\n          </tr>\\n       \\n      </tbody>\\n      <tfoot class=\\\"theme-table\\\"><tr><th></th><th></th><th></th></tr></tfoot>\\n    </table>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../../service/auth.service';\nimport { Packagetransporter } from './packagetransporter';\nimport { QrCodeReader } from 'src/app/qr-code-reader.service';\nimport { Subscription } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Package2 } from '../../medicine/package-create/addpackage2';\n@Component({\n  selector: 'app-packagetransporter',\n  templateUrl: './packagetransporter.component.html',\n  styleUrls: ['./packagetransporter.component.css']\n})\nexport class PackagetransporterComponent implements OnInit {\n  barcodevalue: any;\n  subscription: Subscription;\n  transporter1: any = Package2;\n  list: any = [];\n  mlist: any = [];\n  // dlist:any=[];\n  // plist:any=[];\n  TMlist: any = [];\n  packageStatus;\n  base;\n  call;\n  status;\n  displayTable: boolean = false;\n  blockchain: any = [];\n  blockchain2: any = [];\n  status2: any = [];\n  statusValue: any;\n  itemId: any = [];\n  mypublickey: any;\n  privateKey: any;\n  blockchainUrl: any = this.httpuser.blockchainUrl;\n\n  constructor(private httpuser: AuthService, private qrReader: QrCodeReader, private http: HttpClient) { }\n\n  ngOnInit() {\n    this.packageStatus = \"Recived by Transporter\";\n    this.mypublickey = localStorage.getItem(\"publicKey\");\n    this.transporterPackageId(this.mypublickey);\n  }\n\n  onFileChange(event) {\n    const file = event.target.files[0];\n    this.subscription = this.qrReader.decode(file)\n      .subscribe(decodedString => {\n        this.barcodevalue = decodedString;\n        console.log(decodedString)\n      });\n  }\n\n  //post data api\n  packagetransporterList() {\n    return this.httpuser.getPackagetransporterList().subscribe(data => {\n      this.list = data;\n    });\n  }\n\n\n  //   allDistributer() {\n  //     return this.http.getallWholesalerUser().subscribe(data => {\n  //       this.dlist = data; \n  // console.log(this.dlist);\t  \n  //     });\n  //   }\n  //   allPharma() {\n  //     return this.http.getallWholesalerUser().subscribe(data => {\n  //       this.plist = data; \n  // console.log(this.plist);\t  \n  //     });\n  //   }\n\n\n\n  transporterPackageId(id) {\n    return this.httpuser.transporterPackage(id).subscribe(data => {\n      this.TMlist = data;\n      console.log(this.TMlist);\n    });\n  }\n\n  getByPackageId(id, status, statusid) {\n    let that = this;\n    this.mypublickey = localStorage.getItem(\"publicKey\");\n    this.privateKey = localStorage.getItem(\"privateKey\");\n    this.httpuser.getPackageId(id).subscribe(data => {\n      this.mlist = data;\n      console.log(this.mlist);\n      if (statusid == 5) this.packageStatus = \"Rejected from Distributer\";\n              this.transporter(this.mlist[0].serial, this.mlist[0].medicines, this.mlist[0].barcode, this.mlist[0].location, this.mlist[0].level, this.mlist[0].packages, this.mlist[0].PackageId, this.mlist[0].role, this.mlist[0].time, this.mypublickey, this.packageStatus);\n              if (statusid == 5)\n                alert(\"Package Returned \");\n              else\n                alert(\"Package piked \");\n\n      //Register User on Blockchain ==>> if \"COMMITED\" :: register in db else Mail (ERROR Message)\t\n\n      // const Metadata = {\n      //   \"action\": \"pickPackage\",\n      //   \"payloaddata\": {\n      //     \"serialNumber\": this.mlist[0].serial,\n      //     \"comment\": status,\n      //     \"level\": this.mlist[0].level\n      //   },\n      //   \"private\": this.privateKey,\n      //   \"public\": this.mypublickey\n      // }\n\n      // const httpOptions = {\n      //   headers: new HttpHeaders({\n      //     'Content-Type': 'application/json'\n      //   })\n      // }\n\n      // return this.http.post(this.blockchainUrl, Metadata, httpOptions).subscribe(\n      //   (val) => {\n      //     console.log(\"POST call successful value returned in body\", val);\n      //     this.blockchain = val;\n      //     if (that.httpuser.IsJsonString(this.blockchain.response.body)) {\n      //       JSON.parse(this.blockchain.response.body).hasOwnProperty(\"data\");\n\n      //       this.status2 = JSON.parse(this.blockchain.response.body);\n      //       this.statusValue = this.status2.data[0].status;\n      //       this.itemId = this.status2.data[0].id;\n      //       if (this.statusValue == 'COMMITTED') {\n\n      //         this.displayTable = true;\n      //         if (statusid == 5) this.packageStatus = \"Rejected from Distributer\";\n      //         this.transporter(this.mlist[0].serial, this.mlist[0].medicines, this.mlist[0].barcode, this.mlist[0].location, this.mlist[0].level, this.mlist[0].packages, this.mlist[0].PackageId, this.mlist[0].role, this.mlist[0].time, this.mypublickey, this.packageStatus);\n      //         if (statusid == 5)\n      //           alert(\"Package Returned \");\n      //         else\n      //           alert(\"Package piked \");\n      //       }\n      //       else {\n      //         alert(\"Process not completed\");\n      //       }\n      //     }\n      //     else {\n\n      //       that.http.get(this.httpuser.batchUrl + \"/batch_statuses?\" + this.blockchain.id + \"&wait\").subscribe((val) => {\n      //         this.blockchain2 = val\n      //         if (that.httpuser.IsJsonString(this.blockchain2.body)) {\n      //           this.status2 = JSON.parse(this.blockchain2.body);\n      //           console.log('json value2', this.status2.data[0].status);\n      //           this.statusValue = this.status2.data[0].status;\n      //           this.itemId = this.status2.data[0].id;\n      //           if (this.statusValue == 'COMMITTED') {\n      //             if (statusid == 5) this.packageStatus = \"Rejected to Distributer\";\n      //             this.transporter(this.mlist[0].serial, this.mlist[0].medicines, this.mlist[0].barcode, this.mlist[0].location, this.mlist[0].level, this.mlist[0].packages, this.mlist[0].PackageId, this.mlist[0].role, this.mlist[0].time, this.mypublickey, this.packageStatus);\n      //             if (statusid == 5)\n      //               alert(\"Package Returned \");\n      //             else\n      //               alert(\"Package picked\");\n      //           }\n      //           else {\n      //             alert('Request Rejected');\n      //           }\n      //         }\n      //       })\n      //     }\n          // }).catch(function (err) {\n          //   console.log(err.message);\n       // });\n    });\n  }\n\n\n\n\n\n\n  transporter(a, b, c, d, e, f, g, h, i, j, k) {\n    this.transporter1 = new Package2(a, b, c, d, e, f, g, h, i, j, k);\n    this.base = this.httpuser.packagetransporter(this.transporter1);\n    this.call = this.base.subscribe(\n      data => {\n        alert(\"done\");\n\n      },\n      err => {\n        console.log(err);\n      },\n      () => {\n        console.log(\"Done\");\n      }\n    );\n  }\n\n}\n","module.exports = \".container{\\n   \\n    background-color: rgb(0, 0, 0) !important;   \\n    margin-top: 35px;   \\n    border-top-right-radius: 70px;\\n    border-top-left-radius: 70px;\\n}\\n\\nbody{\\n    background-color: rgb(7, 71, 167) !important;\\n}\\n\\nh4{\\n    border-radius: 38px;\\n    border: 12px solid black;\\n    border-bottom-width: 13px;\\n    margin-top: -24px;\\n    background-color: rgb(23, 0, 222);\\n    color: white;\\n    font-family: fantasy;\\n    font-size: 30px;\\n    text-align: center;\\n    margin-bottom: 25px;\\n}\\n\\nh2{\\n    font-size: 2rem;\\n    color: white;\\n    font-family: inherit;\\n    padding: 12px;\\n    border-top: 2px solid indianred;\\n    border-bottom: 2px solid indianred;\\n    border-right: 2px solid indianred;\\n    border-right-width: 12px;\\n    border-left: 2px solid indianred;\\n    border-left-width: 12px;\\n}\\n\\n.col{\\n    flex-basis: 0;\\n    flex-grow: 1;\\n    background-color: ghostwhite;\\n    margin-left: 5%;   \\n    max-width: 90%;\\n}\\n\\n.row{\\n\\t padding: 10px;\\n}\\n\\n#content{\\n   background-color: ghostwhite !important;\\n}\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vZGFzaGJvYXJkL3BoYXJtYS9waGFybWEuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7SUFFSSx5Q0FBeUM7SUFDekMsZ0JBQWdCO0lBQ2hCLDZCQUE2QjtJQUM3Qiw0QkFBNEI7QUFDaEM7O0FBRUE7SUFDSSw0Q0FBNEM7QUFDaEQ7O0FBQ0E7SUFDSSxtQkFBbUI7SUFDbkIsd0JBQXdCO0lBQ3hCLHlCQUF5QjtJQUN6QixpQkFBaUI7SUFDakIsaUNBQWlDO0lBQ2pDLFlBQVk7SUFDWixvQkFBb0I7SUFDcEIsZUFBZTtJQUNmLGtCQUFrQjtJQUNsQixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxlQUFlO0lBQ2YsWUFBWTtJQUNaLG9CQUFvQjtJQUNwQixhQUFhO0lBQ2IsK0JBQStCO0lBQy9CLGtDQUFrQztJQUNsQyxpQ0FBaUM7SUFDakMsd0JBQXdCO0lBQ3hCLGdDQUFnQztJQUNoQyx1QkFBdUI7QUFDM0I7O0FBQ0E7SUFDSSxhQUFhO0lBQ2IsWUFBWTtJQUNaLDRCQUE0QjtJQUM1QixlQUFlO0lBQ2YsY0FBYztBQUNsQjs7QUFFQTtFQUNFLGFBQWE7QUFDZjs7QUFFQTtHQUNHLHVDQUF1QztBQUMxQyIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2Rhc2hib2FyZC9waGFybWEvcGhhcm1hLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVye1xuICAgXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDAsIDAsIDApICFpbXBvcnRhbnQ7ICAgXG4gICAgbWFyZ2luLXRvcDogMzVweDsgICBcbiAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogNzBweDtcbiAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiA3MHB4O1xufVxuXG5ib2R5e1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYig3LCA3MSwgMTY3KSAhaW1wb3J0YW50O1xufVxuaDR7XG4gICAgYm9yZGVyLXJhZGl1czogMzhweDtcbiAgICBib3JkZXI6IDEycHggc29saWQgYmxhY2s7XG4gICAgYm9yZGVyLWJvdHRvbS13aWR0aDogMTNweDtcbiAgICBtYXJnaW4tdG9wOiAtMjRweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjMsIDAsIDIyMik7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIGZvbnQtZmFtaWx5OiBmYW50YXN5O1xuICAgIGZvbnQtc2l6ZTogMzBweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbWFyZ2luLWJvdHRvbTogMjVweDtcbn1cblxuaDJ7XG4gICAgZm9udC1zaXplOiAycmVtO1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgICBwYWRkaW5nOiAxMnB4O1xuICAgIGJvcmRlci10b3A6IDJweCBzb2xpZCBpbmRpYW5yZWQ7XG4gICAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkIGluZGlhbnJlZDtcbiAgICBib3JkZXItcmlnaHQ6IDJweCBzb2xpZCBpbmRpYW5yZWQ7XG4gICAgYm9yZGVyLXJpZ2h0LXdpZHRoOiAxMnB4O1xuICAgIGJvcmRlci1sZWZ0OiAycHggc29saWQgaW5kaWFucmVkO1xuICAgIGJvcmRlci1sZWZ0LXdpZHRoOiAxMnB4O1xufVxuLmNvbHtcbiAgICBmbGV4LWJhc2lzOiAwO1xuICAgIGZsZXgtZ3JvdzogMTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBnaG9zdHdoaXRlO1xuICAgIG1hcmdpbi1sZWZ0OiA1JTsgICBcbiAgICBtYXgtd2lkdGg6IDkwJTtcbn1cbiAgIFxuLnJvd3tcblx0IHBhZGRpbmc6IDEwcHg7XG59XG5cbiNjb250ZW50e1xuICAgYmFja2dyb3VuZC1jb2xvcjogZ2hvc3R3aGl0ZSAhaW1wb3J0YW50O1xufVxuXG4iXX0= */\"","module.exports = \"<app-dashboard></app-dashboard>\\n<div class=\\\"container\\\">\\n  <h4>Pharma Details</h4>\\n  <form id=\\\"content\\\" [formGroup]=\\\"registerForm1\\\" (ngSubmit)=\\\"pharma(bId.value,mediStatus.value,mediQuality.value)\\\">\\n    <div class=\\\"row\\\">\\n\\n      <div class=\\\"col\\\">\\n        <div class=\\\"form-group\\\">\\n          <label>Batch ID</label><span style=\\\"color: red\\\">*</span>\\n          <input #bId type=\\\"text\\\" formControlName=\\\"batchid011\\\" class=\\\"form-control required\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted1 && f1.batchid011.errors }\\\" maxlength=\\\"30\\\">\\n          <div *ngIf=\\\"submitted1 && f1.batchid011.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f1.batchid011.errors.required\\\">Batch ID required </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <div class=\\\"form-group\\\">\\n          <label>Medicine Status</label><span style=\\\"color: red\\\">*</span>\\n          <input #mediStatus type=\\\"text\\\" formControlName=\\\"mediStatus011\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted1 && f1.mediStatus011.errors }\\\" class=\\\"form-control required\\\"\\n            maxlength=\\\"30\\\">\\n          <div *ngIf=\\\"submitted1 && f1.mediStatus011.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f1.mediStatus011.errors.required\\\">Medicine Status required </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <div class=\\\"form-group\\\">\\n          <label>Medicine Quality</label><span style=\\\"color: red\\\">*</span>\\n          <input #mediQuality type=\\\"text\\\" formControlName=\\\"mediQuality011\\\" class=\\\"form-control required\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted1 && f1.mediQuality011.errors }\\\" maxlength=\\\"30\\\">\\n          <div *ngIf=\\\"submitted1 && f1.mediQuality011.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f1.mediQuality011.errors.required\\\">Medicine Quality required </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row text-right\\\">\\n      <div class=\\\"col\\\">\\n        <div class=\\\"form-group\\\">\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row text-right\\\">\\n      <div class=\\\"col\\\">\\n        <div class=\\\"form-group\\\">\\n         <a [routerLink]=\\\"'/sendpharma'\\\" class=\\\"btn btn-success\\\">Send Medicine Info </a>\\n        </div>\\n      </div>\\n    </div>\\n  </form>\\n\\n\\n\\n\\n  <div class=\\\"container\\\">\\n    <h2>List Of Pharma</h2>\\n    <div class=\\\"table-responsive\\\">\\n      <table class=\\\"table table-striped table-dark table-hover text-center\\\">\\n        <thead class=\\\"theme-table\\\">\\n\\n          <tr>\\n            <th>Batch ID</th>\\n            <th>Medicine Status</th>\\n            <th>Medicine Quality</th>\\n            <th>Edit</th>\\n            <th>Delete</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let distdata  of list\\\">\\n            <td>{{distdata.batchid}}</td>\\n            <td>{{distdata.medicineStatus}}</td>\\n            <td>{{distdata.medicineQuality}}</td>\\n            <td><button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"editPharma(distdata._id)\\\" data-toggle=\\\"modal\\\"\\n                data-target=\\\"#exampleModalCenter\\\">Edit</button></td>\\n            <td><button type=\\\"submit\\\" (click)=\\\"deletePharma(distdata._id)\\\" class=\\\"btn btn-danger\\\">Delete</button></td>\\n\\n          </tr>\\n\\n        </tbody>\\n        <tfoot class=\\\"theme-table\\\">\\n          <tr>\\n            <th></th>\\n            <th></th>\\n            <th></th>\\n            <th>\\n            <th></th>\\n          </tr>\\n        </tfoot>\\n      </table>\\n    </div>\\n\\n  </div>\\n</div>\\n\\n\\n<!-- Update Pharma -->\\n<div class=\\\"container\\\">\\n\\n  <!-- The Modal -->\\n  <div class=\\\"modal fade\\\" id=\\\"exampleModalCenter\\\">\\n    <div class=\\\"modal-dialog\\\">\\n      <div class=\\\"modal-content\\\">\\n\\n\\n        <!-- Modal body -->\\n        <div class=\\\"modal-body\\\">\\n          <form [formGroup]=\\\"registerForm\\\"\\n            (ngSubmit)=\\\"onSubmit(batchid.value, medicineStatus.value,medicineQuality.value,editlist._id)\\\">\\n          \\n            <div class=\\\"form-group\\\">\\n              <label>Batch ID</label>\\n              <input type=\\\"text\\\" formControlName=\\\"batchid0\\\" #batchid class=\\\"form-control required\\\"\\n                [(ngModel)]=\\\"editlist.batchid\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.batchid0.errors }\\\">\\n              <div *ngIf=\\\"submitted && f.batchid0.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"f.batchid0.errors.required\\\">Batch ID required</div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label>Medicine Status</label>\\n              <input #medicineStatus type=\\\"text\\\" formControlName=\\\"medicineStatus0\\\" class=\\\"form-control required\\\"\\n                [(ngModel)]=\\\"editlist.medicineStatus\\\"\\n                [ngClass]=\\\"{ 'is-invalid': submitted && f.medicineStatus0.errors }\\\">\\n              <div *ngIf=\\\"submitted && f.medicineStatus0.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"f.medicineStatus0.errors.required\\\">Medicine Status required </div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label>Medicine Quality</label>\\n              <input #medicineQuality type=\\\"text\\\" formControlName=\\\"medicineQuality0\\\" class=\\\"form-control required\\\"\\n                [(ngModel)]=\\\"editlist.medicineQuality\\\" maxlength=\\\"30\\\"\\n                [ngClass]=\\\"{ 'is-invalid': submitted && f.medicineQuality0.errors }\\\">\\n              <div *ngIf=\\\"submitted && f.medicineQuality0.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"f.medicineQuality0.errors.required\\\">Medicine Quality required </div>\\n              </div>\\n\\n\\n            </div>\\n\\n            <!-- Modal footer -->\\n            <div class=\\\"modal-footer\\\">\\n              <div class=\\\"form-group\\\">\\n                <button type=\\\"button\\\" #completeModal class=\\\"btn btn-danger\\\" (click)=\\\"pharmaList();\\\" data-dismiss=\\\"modal\\\">Close</button>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <button class=\\\"btn btn-primary\\\">Save changes</button>\\n              </div>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n\\n\\n\\n\\n\\n\"","import { Component, OnInit,ElementRef,ViewChild} from '@angular/core';\nimport { AuthService } from '../../../service/auth.service';\nimport { Pharma } from './pharma';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: \"app-pharma\",\n  templateUrl: \"./pharma.component.html\",\n  styleUrls: [\"./pharma.component.css\"]\n})\n\nexport class PharmaComponent implements OnInit {\n\n  \n  registerForm: FormGroup;\n  registerForm1: FormGroup;\n  submitted = false;\n  submitted1 = false;\n\n\n  pharma1: any = Pharma;\n  list: any = [];\n  base;\n  call;\n  editlist: any = [];\n  batchid;\n  medicineQuality;\n  medicineStatus;\n  var1 =\"\";\n  close1:boolean;\n  @ViewChild('completeModal')completeModal: ElementRef;\n  //  button1:any;\n  // popuptask:boolean=true;\n  constructor(private httpuser: AuthService, private route: ActivatedRoute, private router: Router, private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.pharmaList();\n    //this.button1='show';\n    this.registerForm = this.formBuilder.group({\n      batchid0: ['', Validators.required],\n      medicineStatus0: ['', Validators.required],\n      medicineQuality0: ['', Validators.required]\n\n\n    });\n    this.registerForm1 = this.formBuilder.group({\n      batchid011: ['', Validators.required],\n      mediStatus011: ['', Validators.required],\n      mediQuality011: ['', Validators.required]\n\n\n    });\n\n\n  }\n\n  /* postPrivateKey(a){\n      console.log(a);\n      this.button1=\"hide\";\n      this.popuptask=false;\t  \n      }\n      */\n\n  //post data api\n  pharmaList() {\n    return this.httpuser.getPharmaList().subscribe(data => {\n      this.list = data;\n    \n    });\n  }\n\n  get f1() { return this.registerForm1.controls; }\n  pharma(x: string, y: string, z: string) {\n    console.log(\"Pharma called\");\n\n\n    this.submitted1 = true;\n\n    // stop here if form is invalid\n    if (this.registerForm1.invalid) {\n      return;\n    }\n    console.log(x, y, z);\n\n\n    this.pharma1 = new Pharma(x, y, z);\n    this.base = this.httpuser.pharma(this.pharma1);\n    this.call = this.base.subscribe(\n      data => {\n        alert(\"Done\");\n        this.pharmaList();\n      },\n      err => {\n        console.log(err);\n      },\n      () => {\n        console.log(\"Done\");\n      }\n    );\n  }\n\n  //delete pharam api\n  deletePharma(id) {\n    if (confirm('Are you sure to delete ?')) {\n      this.httpuser.deletePharma(id).subscribe(res => {\n\n        this.pharmaList();\n      });\n    }\n  }\n\n  //edit get pharma detail api\n\n  editPharma(id) {\n    this.httpuser.editPharma(id).subscribe(res => {\n      this.editlist = res;\n    });\n  }\n  //update edited api\n  updatepharma(batchid, medicineStatus, medicineQuality, id) {\n\n    this.route.params.subscribe(params => {\n      this.httpuser.updatePharma(batchid, medicineStatus, medicineQuality, id);\n      alert(\"Data Successfully Udated\")\n      this.router.navigate(['pharma']);\n    });\n  }\n\n\n  //---------------------------------------\n  // convenience getter for easy access to form fields\n  get f() { return this.registerForm.controls; }\n\n  onSubmit(batchid1, medicineStatus1, medicineQuality1, id1) {\n   \n\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n      return;\n    }\n    console.log(batchid1, medicineStatus1, medicineQuality1, id1);\n\n    this.route.params.subscribe(params => {\n      this.httpuser.updatePharma(batchid1, medicineStatus1, medicineQuality1, id1);\n      alert(\"Data Successfully Udated\");\n      let el: HTMLElement = this.completeModal.nativeElement;\n      el.click(); \n      let x= setTimeout(()=>{  this.pharmaList()}, 100);\n      this.router.navigate(['pharma']);     \n    });       \n  }\n\n\n}\n","export class Pharma {\n  batchid: string;\n  medicineStatus: string;\n  medicineQuality: string;\n\n  constructor(\n    batchid: string,\n    medicineStatus: string,\n    medicineQuality: string\n  ) {\n    this.batchid = batchid;\n      this.medicineStatus = medicineStatus;\n      this.medicineQuality = medicineQuality;\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2Rhc2hib2FyZC9xcmNvZGVzY2FubmVyL3BoYXJtYXFyL3BoYXJtYXFyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<br><br>\\n<div style=\\\"width: 500px;margin: 0 auto\\\">\\n  <label>Scan Barcode</label>\\n  <input class=\\\"btn btn-primary\\\" type=\\\"file\\\" style=\\\"margin-left:20px;color:aquamarine\\\" accept=\\\"image/*\\\" (change)=\\\"onFileChange($event)\\\">\\n  <br><br>\\n  <input #br type=\\\"text\\\" value=\\\"{{barcodevalue}}\\\" class=\\\"form-control required\\\" >\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { QrCodeReader } from 'src/app/qr-code-reader.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-pharmaqr',\n  templateUrl: './pharmaqr.component.html',\n  styleUrls: ['./pharmaqr.component.css']\n})\nexport class PharmaqrComponent implements OnInit {\n  barcodevalue:any;\n  subscription: Subscription;\n\n  constructor(private httpuser:AuthService,private qrReader: QrCodeReader) { }\n\n  ngOnInit() {\n  }\n  onFileChange(event){\n    const file = event.target.files[0];\n    this.subscription = this.qrReader.decode(file)\n     .subscribe(decodedString =>{\n     this.barcodevalue= decodedString;\n    console.log(decodedString)\n    });\n }\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2Rhc2hib2FyZC9xcmNvZGVzY2FubmVyL3RyYW5zcG9ydGVycXIvdHJhbnNwb3J0ZXJxci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<br><br>\\n<div style=\\\"width: 500px;margin: 0 auto\\\">\\n  <label>Scan Barcode</label>\\n  <input class=\\\"btn btn-primary\\\" type=\\\"file\\\" style=\\\"margin-left:20px;color:aquamarine\\\" accept=\\\"image/*\\\" (change)=\\\"onFileChange($event)\\\">\\n  <br><br>\\n  <input #br type=\\\"text\\\" value=\\\"{{barcodevalue}}\\\" class=\\\"form-control required\\\" >\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { QrCodeReader } from 'src/app/qr-code-reader.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-transporterqr',\n  templateUrl: './transporterqr.component.html',\n  styleUrls: ['./transporterqr.component.css']\n})\nexport class TransporterqrComponent implements OnInit {\n  barcodevalue:any;\n  subscription: Subscription;\n\n  constructor(private httpuser:AuthService,private qrReader: QrCodeReader) { }\n\n  ngOnInit() {\n  }\n  onFileChange(event){\n    const file = event.target.files[0];\n    this.subscription = this.qrReader.decode(file)\n     .subscribe(decodedString =>{\n     this.barcodevalue= decodedString;\n    console.log(decodedString)\n    });\n }\n\n}\n","module.exports = \"\\n\\n.container{\\n   \\n    min-height: 580px;\\n    max-width: 100%;\\n    color: white;\\n    background-color: black;\\n}\\n.col-md-6 {\\n    border: 10px solid #2a4058;\\n   \\n    background-color: #18518a70;\\n  \\n    margin-top: 20  px;\\n}\\nh3{\\ntext-align: center;\\ncolor: white\\n\\n}\\n.jumbotron {\\n \\n    background-color: black;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vZGFzaGJvYXJkL3FyY29kZXNjYW5uZXIvd2hvbGVzYWxlcnFyL3dob2xlc2FsZXJxci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBRUE7O0lBRUksaUJBQWlCO0lBQ2pCLGVBQWU7SUFDZixZQUFZO0lBQ1osdUJBQXVCO0FBQzNCO0FBQ0E7SUFDSSwwQkFBMEI7O0lBRTFCLDJCQUEyQjs7SUFFM0Isa0JBQWtCO0FBQ3RCO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7O0FBRUE7QUFDQTs7SUFFSSx1QkFBdUI7QUFDM0IiLCJmaWxlIjoic3JjL2FwcC9hZG1pbi9kYXNoYm9hcmQvcXJjb2Rlc2Nhbm5lci93aG9sZXNhbGVycXIvd2hvbGVzYWxlcnFyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcblxuLmNvbnRhaW5lcntcbiAgIFxuICAgIG1pbi1oZWlnaHQ6IDU4MHB4O1xuICAgIG1heC13aWR0aDogMTAwJTtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XG59XG4uY29sLW1kLTYge1xuICAgIGJvcmRlcjogMTBweCBzb2xpZCAjMmE0MDU4O1xuICAgXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzE4NTE4YTcwO1xuICBcbiAgICBtYXJnaW4tdG9wOiAyMCAgcHg7XG59XG5oM3tcbnRleHQtYWxpZ246IGNlbnRlcjtcbmNvbG9yOiB3aGl0ZVxuXG59XG4uanVtYm90cm9uIHtcbiBcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcbn0iXX0= */\"","module.exports = \"<div class=\\\"jumbotron\\\">\\n\\t<div class=\\\"container\\\">\\n\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t<div class=\\\"col-md-3\\\"></div>\\n\\t\\t\\t<div class=\\\"col-md-6 \\\">\\n\\t\\t\\t\\t<label style=\\\"color: white\\\">Email-Id</label><br>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<input #eid type=\\\"text\\\" placeholder=\\\"Enter Your Email Id\\\" class=\\\"form-control required\\\" style=\\\"border: 2px solid green\\\" >\\n\\t\\t\\t\\t<br>\\n\\t\\t\\t\\t<label style=\\\"color: white\\\">Enter New Password</label><br>\\n\\t\\t\\t\\t<input #pass type=\\\"password\\\" placeholder=\\\"Enter New Password\\\" class=\\\"form-control required\\\" style=\\\"border: 2px solid green\\\" >\\n\\t\\t\\t\\t<br>\\n\\t\\t\\t\\t<button type=\\\"submit\\\" (click)=\\\"sendRequest(eid.value,pass.value)\\\" class=\\\"btn btn-success\\\">Submit</button>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<p> <a [routerLink]=\\\"'/login'\\\" style=\\\"margin-left:10px\\\"> Click here to Login</a></p>\\n\\t\\t\\t  </div>\\n\\t\\t</div>\\n\\t</div>\\n</div> \\n  \\n\\n  \"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { QrCodeReader } from 'src/app/qr-code-reader.service';\nimport { Subscription } from 'rxjs';\nimport { Router,ActivatedRoute } from '@angular/router';\n\n\n@Component({\n  selector: 'app-wholesalerqr',\n  templateUrl: './wholesalerqr.component.html',\n  styleUrls: ['./wholesalerqr.component.css']\n})\nexport class WholesalerqrComponent implements OnInit {\n  barcodevalue:any;\n  subscription: Subscription;\n  actcode:any;\n  base;\n  call;\n\n\n  constructor(private route: ActivatedRoute,private httpuser:AuthService,private qrReader: QrCodeReader) { }\n\n  ngOnInit() {\n\t  \n\t  this.actcode = this.route.snapshot.params['id'];\n  }\n\n  sendRequest(eid,pass){\n    console.log(eid,pass);\n\tif(this.actcode == '')\n\t{\n\t\talert(\"Invalid Reset password URL !!\");\n\t\treturn false;\n\t}\n    this.base = this.httpuser.wholesalerqr(eid,pass,this.actcode);\n    this.call = this.base.subscribe(\n      data => {\n        alert(\"Password had been Changed!!\");  \n      },\n      err => {\n\t\talert(\"It is either invalid or already used Reset password URL\");\n\t\tconsole.log(err);\n      },\n      () => {\n        console.log(\"Password had been Changed!!\");\n      }\n    );\n\n\n  }\n \n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2Rhc2hib2FyZC90cmFuc3BvcnRlci90cmFuc3BvcnRlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-dashboard></app-dashboard>\\n<div class=\\\"container\\\">\\n\\t<br>\\n\\t<br>\\n\\n\\t<form>\\n\\t\\n        <div class=\\\"row\\\"> \\n          <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n            <label>Packing Barcode</label>\\n\\t\\t\\t<input type=\\\"file\\\" style=\\\"margin-left:20px;\\\" accept=\\\"image/*\\\" (change)=\\\"onFileChange($event)\\\">\\n            <input #br type=\\\"text\\\" value=\\\"{{barcodevalue}}\\\" class=\\\"form-control required\\\" >\\n          </div>\\n        </div>   \\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Current Status</label>\\n                <select #status class=\\\"form-control\\\" >\\n                  <option >Manufecturer package Picked-up</option>\\n                  <option >Wholesaler package Picked-up</option>\\n                  <option >Distributer package Picked-up</option>\\n                    </select>   \\n              </div>\\n            </div>\\n          </div>\\n            <div class=\\\"row text-right\\\">\\n             \\t\\t<div class=\\\"col\\\">\\n             \\t\\t\\t<div class=\\\"form-group\\\">\\n                  \\t\\t\\t<button type=\\\"reset\\\" (click)=\\\"getByMedicineId(br.value, status.value)\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n                \\t\\t</div>\\n                </div>\\n             </div>\\n\\t</form>\\n\\n\\n  <div *ngIf=\\\"displayTable\\\" class=\\\"table-responsive\\\">\\n    <br>\\n    <table class=\\\"table table-striped table-dark table-hover text-center\\\">\\n      \\n        <thead class=\\\"theme-table\\\">\\n            <tr>            \\n                <th> Serial Number</th>\\n                <th>Medicine</th>\\n                <th>Add</th>\\n                <th>Update</th>\\n                <th>Updates</th>                \\n            </tr>\\n        </thead>\\n        <tbody>\\n          <tr>\\n            <td><a [routerLink]=\\\"['/medicine/details',mlist[0].serial]\\\">{{mlist[0].serial}}</a></td>\\n            <td>{{mlist[0].medicine}}</td>\\n            <td>{{mlist[0].Mdate}}</td>\\n            <td>{{mlist[0].location}}</td>\\n            <td>{{mlist[0].weight}}</td>\\n            </tr>\\n         \\n        </tbody>\\n        <tfoot class=\\\"theme-table\\\"><tr><th></th><th></th><th></th><th></th><th></th></tr></tfoot>\\n      </table>\\n    </div>\\n\\n\\n\\n<div  class=\\\"table-responsive\\\">\\n  <br>\\n  <table class=\\\"table table-striped table-dark table-hover text-center\\\">\\n    \\n      <thead class=\\\"theme-table\\\">\\n          <tr>            \\n              <th> Serial Number</th>\\n              <th>Medicine</th>\\n              <th>Manufacture Date</th>\\n              <th>Location</th>\\n              <th>Weight(Kg)</th>                \\n          </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let list of TMlist\\\">\\n          <td><a [routerLink]=\\\"['/medicine/details',list.serial]\\\">{{list.serial}}</a></td>\\n          <td>{{list.medicine}}</td>\\n          <td>{{list.Mdate}}</td>\\n          <td>{{list.location}}</td>\\n          <td>{{list.weight}}</td>\\n          </tr>\\n       \\n      </tbody>\\n      <tfoot class=\\\"theme-table\\\"><tr><th></th><th></th><th></th><th></th><th></th></tr></tfoot>\\n    </table>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../../service/auth.service';\nimport { Transporter} from './transporter';\nimport { QrCodeReader } from 'src/app/qr-code-reader.service';\nimport { Subscription } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Medicine2 } from '../../medicine/medicine-create/addmedicine2';\n@Component({\n  selector: 'app-transporter',\n  templateUrl: './transporter.component.html',\n  styleUrls: ['./transporter.component.css']\n})\nexport class TransporterComponent implements OnInit {\n  barcodevalue:any;\n  subscription: Subscription;\ntransporter1: any = Medicine2;\nlist: any = [];\nmlist:any=[];\n// dlist:any=[];\n// plist:any=[];\nTMlist:any=[];\nMedistatus;\nbase;\ncall;\nstatus;\ndisplayTable:boolean=false;\nblockchain:any=[];\nblockchain2:any=[];\nstatus2:any=[];\nstatusValue:any;\nitemId:any=[];\n  mypublickey:any;\n  privateKey:any;\n  blockchainUrl:any = this.httpuser.blockchainUrl;\n\n  constructor(private httpuser: AuthService,private qrReader: QrCodeReader,private http: HttpClient) { }\n\n  ngOnInit() {\n    this.Medistatus=\"Recived by Transporter\";\n    this.mypublickey =localStorage.getItem(\"publicKey\");\n    this.transporterMedicineId(this.mypublickey);\n  }\n\n    onFileChange(event) {\n      const file = event.target.files[0];\n      this.subscription = this.qrReader.decode(file)\n        .subscribe(decodedString =>{\n      this.barcodevalue= decodedString;\n      console.log(decodedString)\n      });\n    }\n\n   //post data api\n   transporterList() {\n    return this.httpuser.getTransporterList().subscribe(data => {\n      this.list = data;        \n    });\n  }\n\n\n//   allDistributer() {\n//     return this.http.getallWholesalerUser().subscribe(data => {\n//       this.dlist = data; \n// console.log(this.dlist);\t  \n//     });\n//   }\n//   allPharma() {\n//     return this.http.getallWholesalerUser().subscribe(data => {\n//       this.plist = data; \n// console.log(this.plist);\t  \n//     });\n//   }\n\n\n  \n  transporterMedicineId(id) {\n    return this.httpuser.transporterMedicine(id).subscribe(data => {\n      this.TMlist = data; \nconsole.log(this.TMlist);\t  \n    });\n  }\n\n  getByMedicineId(id,status) {  \n    let that = this;\n    this.mypublickey =localStorage.getItem(\"publicKey\");\n    this.privateKey =localStorage.getItem(\"privateKey\");     \n    this.httpuser.getMedicineId(id).subscribe(data => {\n   this.mlist=data;\n      console.log(this.mlist);\n      this.transporter(this.mlist[0].serial,this.mlist[0].medicine,this.mlist[0].barcode,this.mlist[0].location,this.mlist[0].weight,this.mlist[0].Edate,this.mlist[0].Mdate,\n            this.mlist[0].MedicineId,this.mlist[0].role,this.mlist[0].time,this.mypublickey,this.Medistatus);\n           alert(\"Package piked \");\n   //Register User on Blockchain ==>> if \"COMMITED\" :: register in db else Mail (ERROR Message)\t\n\t\t\t  \n//  const Metadata = {\n//   \"action\": \"pickPackage\",\n//   \"payloaddata\": {\n//       \"serialNumber\": this.mlist[0].serial,\n//       \"comment\": status\n//   },\n//   \"private\":this.privateKey,\n//   \"public\": this.mypublickey\n//     }\t    \n\n// const httpOptions = {\n// headers: new HttpHeaders({\n//   'Content-Type': 'application/json'\n// })\n// }\n\n//     return this.http.post(this.blockchainUrl, Metadata,httpOptions).subscribe(\n//  (val) => {\t\n//   console.log(\"POST call successful value returned in body\", val);\n//   this.blockchain = val;\n//   if (that.httpuser.IsJsonString(this.blockchain.response.body)) {\n//     JSON.parse(this.blockchain.response.body).hasOwnProperty(\"data\");\n\n//     this.status2 = JSON.parse(this.blockchain.response.body);            \n//     this.statusValue = this.status2.data[0].status;\n//     this.itemId = this.status2.data[0].id;\n//     if (this.statusValue == 'COMMITTED') {\n\n//    this.displayTable=true; \n//    this.transporter(this.mlist[0].serial,this.mlist[0].medicine,this.mlist[0].barcode,this.mlist[0].location,this.mlist[0].weight,this.mlist[0].Edate,this.mlist[0].Mdate,\n//     this.mlist[0].MedicineId,this.mlist[0].role,this.mlist[0].time,this.mypublickey,this.Medistatus);\n//    alert(\"Package piked \");\n//   }\n//   else{\n// \t  alert(\"Process not completed\");\n//   }\n// }\n//   else {\n\n//     that.http.get(this.httpuser.batchUrl +\"/batch_statuses?\" + this.blockchain.id + \"&wait\").subscribe((val) => {\n//       this.blockchain2 =val\n//       if (that.httpuser.IsJsonString(this.blockchain2.body)) {\n//         this.status2 = JSON.parse(this.blockchain2.body);\n//         console.log('json value2', this.status2.data[0].status);\n//         this.statusValue = this.status2.data[0].status;\n//         this.itemId = this.status2.data[0].id;\n//         if (this.statusValue == 'COMMITTED') {\n//           this.transporter(this.mlist[0].serial,this.mlist[0].medicine,this.mlist[0].barcode,this.mlist[0].location,this.mlist[0].weight,this.mlist[0].Edate,this.mlist[0].Mdate,\n//             this.mlist[0].MedicineId,this.mlist[0].role,this.mlist[0].time,this.mypublickey,this.Medistatus);\n//             alert(\"Package piked \");\n//         }\n//         else {\n//           alert('Request Rejected');\n//         }\n//       }\n//     })\n//   }\n// // }).catch(function (err) {\n// //   console.log(err.message);\n// });\n});\n}\n    \n\n \n\n\n\n  transporter(a,b,c,d,e,f,g,h,i,j,k,l){  \t  \n  \tthis.transporter1 = new Medicine2(a,b,c,d,e,f,g,h,i,j,k,l);\n  \t this.base = this.httpuser.transporter(this.transporter1);\n    this.call = this.base.subscribe(\n      data => {       \n        alert(\"done\");\n        \n      },\n      err => {\n        console.log(err);\n      },\n      () => {\n        console.log(\"Done\");\n      }\n    );\n  }\n\n}\n","module.exports = \".container{\\n   \\n    background-color: rgb(0, 0, 0) !important;   \\n    margin-top: 35px;   \\n    border-top-right-radius: 70px;\\n    border-top-left-radius: 70px;\\n}\\n\\nbody{\\n    background-color: rgb(7, 71, 167) !important;\\n}\\n\\nh4{\\n    border-radius: 38px;\\n    border: 12px solid black;\\n    border-bottom-width: 13px;\\n    margin-top: -24px;\\n    background-color: rgb(23, 0, 222);\\n    color: white;\\n    font-family: fantasy;\\n    font-size: 30px;\\n    text-align: center;\\n    margin-bottom: 25px;\\n}\\n\\nh2{\\n    font-size: 2rem;\\n    color: white;\\n    font-family: inherit;\\n    padding: 12px;\\n    border-top: 2px solid indianred;\\n    border-bottom: 2px solid indianred;\\n    border-right: 2px solid indianred;\\n    border-right-width: 12px;\\n    border-left: 2px solid indianred;\\n    border-left-width: 12px;\\n}\\n\\n.col{\\n    flex-basis: 0;\\n    flex-grow: 1;\\n    background-color: ghostwhite;\\n    margin-left: 5%;   \\n    max-width: 90%;\\n}\\n\\n.row{\\n\\t padding: 10px;\\n}\\n\\n#content{\\n    background-color: ghostwhite !important;   \\n}\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vZGFzaGJvYXJkL3dob2xlc2FsZXIvd2hvbGVzYWxlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztJQUVJLHlDQUF5QztJQUN6QyxnQkFBZ0I7SUFDaEIsNkJBQTZCO0lBQzdCLDRCQUE0QjtBQUNoQzs7QUFFQTtJQUNJLDRDQUE0QztBQUNoRDs7QUFDQTtJQUNJLG1CQUFtQjtJQUNuQix3QkFBd0I7SUFDeEIseUJBQXlCO0lBQ3pCLGlCQUFpQjtJQUNqQixpQ0FBaUM7SUFDakMsWUFBWTtJQUNaLG9CQUFvQjtJQUNwQixlQUFlO0lBQ2Ysa0JBQWtCO0lBQ2xCLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLGVBQWU7SUFDZixZQUFZO0lBQ1osb0JBQW9CO0lBQ3BCLGFBQWE7SUFDYiwrQkFBK0I7SUFDL0Isa0NBQWtDO0lBQ2xDLGlDQUFpQztJQUNqQyx3QkFBd0I7SUFDeEIsZ0NBQWdDO0lBQ2hDLHVCQUF1QjtBQUMzQjs7QUFDQTtJQUNJLGFBQWE7SUFDYixZQUFZO0lBQ1osNEJBQTRCO0lBQzVCLGVBQWU7SUFDZixjQUFjO0FBQ2xCOztBQUVBO0VBQ0UsYUFBYTtBQUNmOztBQUVBO0lBQ0ksdUNBQXVDO0FBQzNDIiwiZmlsZSI6InNyYy9hcHAvYWRtaW4vZGFzaGJvYXJkL3dob2xlc2FsZXIvd2hvbGVzYWxlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lcntcbiAgIFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigwLCAwLCAwKSAhaW1wb3J0YW50OyAgIFxuICAgIG1hcmdpbi10b3A6IDM1cHg7ICAgXG4gICAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDcwcHg7XG4gICAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogNzBweDtcbn1cblxuYm9keXtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoNywgNzEsIDE2NykgIWltcG9ydGFudDtcbn1cbmg0e1xuICAgIGJvcmRlci1yYWRpdXM6IDM4cHg7XG4gICAgYm9yZGVyOiAxMnB4IHNvbGlkIGJsYWNrO1xuICAgIGJvcmRlci1ib3R0b20td2lkdGg6IDEzcHg7XG4gICAgbWFyZ2luLXRvcDogLTI0cHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIzLCAwLCAyMjIpO1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBmb250LWZhbWlseTogZmFudGFzeTtcbiAgICBmb250LXNpemU6IDMwcHg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIG1hcmdpbi1ib3R0b206IDI1cHg7XG59XG5cbmgye1xuICAgIGZvbnQtc2l6ZTogMnJlbTtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gICAgcGFkZGluZzogMTJweDtcbiAgICBib3JkZXItdG9wOiAycHggc29saWQgaW5kaWFucmVkO1xuICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCBpbmRpYW5yZWQ7XG4gICAgYm9yZGVyLXJpZ2h0OiAycHggc29saWQgaW5kaWFucmVkO1xuICAgIGJvcmRlci1yaWdodC13aWR0aDogMTJweDtcbiAgICBib3JkZXItbGVmdDogMnB4IHNvbGlkIGluZGlhbnJlZDtcbiAgICBib3JkZXItbGVmdC13aWR0aDogMTJweDtcbn1cbi5jb2x7XG4gICAgZmxleC1iYXNpczogMDtcbiAgICBmbGV4LWdyb3c6IDE7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogZ2hvc3R3aGl0ZTtcbiAgICBtYXJnaW4tbGVmdDogNSU7ICAgXG4gICAgbWF4LXdpZHRoOiA5MCU7XG59XG4gICBcbi5yb3d7XG5cdCBwYWRkaW5nOiAxMHB4O1xufVxuXG4jY29udGVudHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBnaG9zdHdoaXRlICFpbXBvcnRhbnQ7ICAgXG59XG5cbiJdfQ== */\"","module.exports = \"<app-dashboard></app-dashboard>\\n\\n<!-- <div class=\\\"container\\\">\\n  <h4>Wholesaler Details</h4>\\n  <form id=\\\"content\\\" [formGroup]=\\\"registerForm1\\\" (ngSubmit)=\\\"wholesaler(bId.value,shipper.value,reciver.value)\\\">\\n    <div class=\\\"row\\\">\\n\\n      <div class=\\\"col\\\">\\n        <div class=\\\"form-group\\\">\\n          <label>Batch ID</label><span style=\\\"color: red\\\">*</span>\\n          <input #bId type=\\\"text\\\" class=\\\"form-control required\\\" formControlName=\\\"bId011\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted1 && f1.bId011.errors }\\\" maxlength=\\\"30\\\">\\n          <div *ngIf=\\\"submitted1 && f1.bId011.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f1.bId011.errors.required\\\">Batch ID required</div>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <div class=\\\"form-group\\\">\\n          <label>Shipper</label><span style=\\\"color: red\\\">*</span>\\n          <input #shipper type=\\\"text\\\" class=\\\"form-control required\\\" formControlName=\\\"shipper011\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted1 && f1.shipper011.errors }\\\" maxlength=\\\"30\\\">\\n          <div *ngIf=\\\"submitted1 && f1.shipper011.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f1.shipper011.errors.required\\\">Shipper required</div>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <div class=\\\"form-group\\\">\\n          <label>Receiver</label><span style=\\\"color: red\\\">*</span>\\n          <input #reciver type=\\\"text\\\" class=\\\"form-control required\\\" formControlName=\\\"reciver011\\\"\\n            [ngClass]=\\\"{ 'is-invalid': submitted1 && f1.reciver011.errors }\\\" maxlength=\\\"30\\\">\\n          <div *ngIf=\\\"submitted1 && f1.reciver011.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f1.reciver011.errors.required\\\">Receiver required</div>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n\\n\\n\\n    <div class=\\\"row text-right\\\">\\n      <div class=\\\"col\\\">\\n        <div class=\\\"form-group\\\">\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Create Records</button>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row text-right\\\">\\n      <div class=\\\"col\\\">\\n        <div class=\\\"form-group\\\">\\n          <a [routerLink]=\\\"'/sendwholesaler'\\\" class=\\\"btn btn-success\\\"> Send Medicine</a>\\n        </div>\\n      </div>\\n    </div>\\n  </form>\\n\\n\\n  <div class=\\\"container-fulid\\\">\\n    <h2>List Of Wholesaler</h2>\\n    <div class=\\\"table-responsive\\\">\\n      <table class=\\\"table table-striped table-dark table-hover text-center\\\">\\n\\n        <thead class=\\\"bg-success\\\">\\n          <tr>\\n            <th>Batch ID</th>\\n            <th>Shipper</th>\\n            <th>Receiver</th>\\n            <th>Edit</th>\\n            <th>Delete</th>\\n          </tr>\\n\\n        </thead>\\n\\n\\n        <tbody>\\n          <tr *ngFor=\\\"let distdata  of list\\\">\\n            <td>{{distdata.batchid}}</td>\\n            <td>{{distdata.shipper}}</td>\\n            <td>{{distdata.reciver}}</td>\\n            <td><button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" (click)=\\\"editWholesaler(distdata._id)\\\"\\n                data-target=\\\"#exampleModalCenter\\\" data-dismiss=\\\"exampleModalCenter\\\">Edit</button></td>\\n            <td><button type=\\\"button\\\" (click)=\\\"deleteWholesaler(distdata._id)\\\" class=\\\"btn btn-danger\\\">Delete</button>\\n            </td>\\n          </tr>\\n        </tbody>\\n        <tfoot class=\\\"bg-success\\\">\\n          <tr>\\n            <th></th>\\n            <th></th>\\n            <th></th>\\n            <th></th>\\n            <th></th>\\n\\n          </tr>\\n        </tfoot>\\n      </table>\\n    </div>\\n  </div> -->\\n\\n\\n\\n  <!-- Modal \\n<div class=\\\"modal fade\\\" id=\\\"exampleModalCenter1\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalCenterTitle\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLongTitle\\\">Edit Data</h5>\\n        \\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form>\\n           <div class=\\\"row\\\">\\n           <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n                <label>Batch ID</label>\\n                <input type=\\\"text\\\"  #bId1 class=\\\"form-control required\\\" [(ngModel)]=\\\"editlist.batchid\\\" name=\\\"batchid\\\" maxlength=\\\"30\\\"  >\\n              </div></div>\\n          </div>\\n\\n      <div class=\\\"row\\\">\\n          <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n              <label>Shipper</label>\\n              <input  type=\\\"text\\\" #shipper1 class=\\\"form-control required\\\" [(ngModel)]=\\\"editlist.shipper\\\" name=\\\"reciver\\\" maxlength=\\\"30\\\"  >\\n            </div></div>           \\n        </div>     \\n\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n                <label>Receiver</label>\\n                <input  type=\\\"text\\\" #reciver1 class=\\\"form-control \\\" [required]=\\\"true\\\" [(ngModel)]=\\\"editlist.reciver\\\" name=\\\"shipper\\\" maxlength=\\\"30\\\"  >\\n              </div></div>            \\n          </div>    \\n        </form>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"wholesalerList()\\\" data-dismiss=\\\"modal\\\">Close</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"updateWholesaler(bId1.value, shipper1.value,reciver1.value,editlist._id)\\\">Save changes</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>  \\n\\n</div>-->\\n\\n\\n  <!-- private key Modal \\n<div *ngIf=\\\"popuptask\\\" _ngcontent-c1 aria-labelledby=\\\"exampleModalLabel\\\" class=\\\"modal fade {{button1}}\\\" id=\\\"basicExampleModal\\\" role=\\\"dialog\\\" tabindex=\\\"-1\\\" style=\\\"display: block; background-color: rgba(17, 16, 16, 0.82);\\\" aria-modal=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-lg modal-dialog-centered\\\" role=\\\"document\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\" style=\\\"    border-bottom: 1px solid #ffffff;\\\">\\n          <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Private Key</h5>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n          <h6 style=\\\"color:red; float: right;\\\">Chance {{count+1}}</h6>\\n          <span style=\\\"color:green; text-align: right;\\\">You have only 3 chance to enter your valid Key</span>\\n         <input type=\\\"text\\\" #privateK class=\\\"form-control required\\\" placeholder=\\\"Enter your private Key\\\">\\n        </div>\\n        <div class=\\\"modal-footer\\\" style=\\\"border-top: 1px solid #ffffff;\\\">       \\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"postPrivateKey(privateK.value)\\\">Save</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div> -->\\n\\n\\n<!-- \\n\\n  <div class=\\\"container\\\">\\n\\n    \\n    <div class=\\\"modal fade\\\" id=\\\"exampleModalCenter\\\">\\n      <div class=\\\"modal-dialog\\\">\\n        <div class=\\\"modal-content\\\">\\n\\n\\n          \\n          <div class=\\\"modal-body\\\">\\n            <form [formGroup]=\\\"registerForm\\\"\\n              (ngSubmit)=\\\"onSubmit(bId1.value,shipper1.value, reciver1.value,editlist._id)\\\">\\n\\n\\n              \\n\\n\\n              <div class=\\\"form-group\\\">\\n                <label>Batch ID</label>\\n                <input type=\\\"text\\\" formControlName=\\\"batchid0\\\" #bId1 class=\\\"form-control required\\\"\\n                  [(ngModel)]=\\\"editlist.batchid\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.batchid0.errors }\\\">\\n                <div *ngIf=\\\"submitted && f.batchid0.errors\\\" class=\\\"invalid-feedback\\\">\\n                  <div *ngIf=\\\"f.batchid0.errors.required\\\">Batch ID required</div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <label>Shipper</label>\\n                <input #shipper1 type=\\\"text\\\" formControlName=\\\"medicineStatus0\\\" class=\\\"form-control required\\\"\\n                  [(ngModel)]=\\\"editlist.shipper\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.medicineStatus0.errors }\\\">\\n                <div *ngIf=\\\"submitted && f.medicineStatus0.errors\\\" class=\\\"invalid-feedback\\\">\\n                  <div *ngIf=\\\"f.medicineStatus0.errors.required\\\">Shipper required </div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <label>Receiver</label>\\n                <input #reciver1 type=\\\"text\\\" formControlName=\\\"medicineQuality0\\\" class=\\\"form-control required\\\"\\n                  [(ngModel)]=\\\"editlist.reciver\\\" maxlength=\\\"30\\\"\\n                  [ngClass]=\\\"{ 'is-invalid': submitted && f.medicineQuality0.errors }\\\">\\n                <div *ngIf=\\\"submitted && f.medicineQuality0.errors\\\" class=\\\"invalid-feedback\\\">\\n                  <div *ngIf=\\\"f.medicineQuality0.errors.required\\\">Receiver required </div>\\n                </div>\\n\\n\\n              </div>\\n\\n              \\n              <div class=\\\"modal-footer\\\">\\n                <div class=\\\"form-group\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" #completeModal (click)=\\\"wholesalerList()\\\"\\n                    data-dismiss=\\\"modal\\\">Close</button>\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                  <button class=\\\"btn btn-primary\\\">Save changes</button>\\n                </div>\\n              </div>\\n            </form>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div> -->\"","import { Component, OnInit,ElementRef,ViewChild  } from '@angular/core';\nimport { Wholesaler } from './wholesaler';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: \"app-wholesaler\",\n  templateUrl: \"./wholesaler.component.html\",\n  styleUrls: [\"./wholesaler.component.css\"]\n})\nexport class WholesalerComponent implements OnInit {\n\n  registerForm: FormGroup;\n  registerForm1: FormGroup;\n  submitted = false;\n  submitted1 = false;\n\n\n  wholeSaler: Wholesaler;\n  list: any = [];\n  base;\n  call;\n  editlist: any = [];\n  batchid;\n  reciver;\n  shipper;\n\n  mypublickey;\n  newpublickey;\n  mypublickey1;\n  primerykeyinput: any = [];\n  count: number = 0;\n  isShown: boolean = false;\n  popuptask: boolean = true;\n  button1: any;\n  @ViewChild('completeModal')completeModal: ElementRef;\n  constructor(private httpuser: AuthService, private route: ActivatedRoute, private router: Router, private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.button1 = 'show';\n    this.onloadcheckKey();\n    this.wholesalerList();\n    // this.button1='show';\n\n    this.registerForm = this.formBuilder.group({\n      batchid0: ['', Validators.required],\n      medicineStatus0: ['', Validators.required],\n      medicineQuality0: ['', Validators.required]\n\n\n    });\n\n    this.registerForm1 = this.formBuilder.group({\n      bId011: ['', Validators.required],\n      shipper011: ['', Validators.required],\n      reciver011: ['', Validators.required]\n\n    });\n\n\n\n  }\n\n  /* postPrivateKey(a){\n\t  console.log(a);\n\t  this.button1=\"hide\";\n\t  this.popuptask=false;\n\t\n  } */\n\n  wholesalerList() {\n    return this.httpuser.getWholesalerList().subscribe(data => {\n      this.list = data;\n    });\n  }\n\n\n  // convenience getter for easy access to form fields\n  get f1() { return this.registerForm1.controls; }\n\n  wholesaler(x: string, y: string, z: string) {\n\n    this.submitted1 = true;\n\n    // stop here if form is invalid\n    if (this.registerForm1.invalid) {\n      return;\n    }\n    console.log(x, y, z);\n\n\n\n    this.wholeSaler = new Wholesaler(x, y, z);\n    this.base = this.httpuser.wholesaler(this.wholeSaler);\n    this.call = this.base.subscribe(\n      data => {\n        alert(\"Done\");\n        this.wholesalerList();\n      },\n      err => {\n        console.log(err);\n      },\n      () => {\n        console.log(\"Done\");\n      }\n    );\n  }\n  deleteWholesaler(id) {\n    if (confirm('Are you sure to delete?')) {\n      this.httpuser.deletewholesaler(id).subscribe(res => {\n        this.wholesalerList();\n      });\n    }\n  }\n\n  editWholesaler(id) {\n    this.httpuser.editWholesaler(id).subscribe(res => {\n      this.editlist = res;\n    });\n  }\n  updateWholesaler(batchid, shipper, reciver, id) {\n\n    this.route.params.subscribe(params => {\n      this.httpuser.updateWholesaler(batchid, shipper, reciver, id);\n      alert(\"Data Successfully Updated\");\n      this.router.navigate([\"wholesaler\"]);\n    });\n  }\n  // convenience getter for easy access to form fields\n  get f() { return this.registerForm.controls; }\n\n\n  onSubmit(batchid1, shipper1, reciver1, id1) {\n\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n      return;\n    }\n    console.log(batchid1, shipper1, reciver1, id1);\n\n    this.route.params.subscribe(params => {\n      this.httpuser.updateWholesaler(batchid1, shipper1, reciver1, id1);\n      alert(\"Data Successfully Updated\");\n      let el: HTMLElement = this.completeModal.nativeElement;\n      el.click(); \n     let x= setTimeout(()=>{  this.wholesalerList()}, 100);\n      this.router.navigate([\"wholesaler\"]);\n    });\n\n\n  }\n\n\n\n\n  //propup for private key........\n  onloadcheckKey() {\n    this.mypublickey1 = localStorage.getItem(\"generatedPublickey\");\n    this.mypublickey = localStorage.getItem(\"publicKey\");\n    if (this.mypublickey1 == this.mypublickey) {\n      this.button1 = \"hide\";\n      this.popuptask = false;\n    }\n    else {\n      return;\n    }\n  }\n\n  //private key post method..............\n  postPrivateKey(keystring) {\n    this.count++;\n\n    if (this.count == 3) {\n      this.logout();\n    }\n    else {\n      return this.httpuser.getpublickey(keystring).subscribe(result => {\n        this.primerykeyinput = result;\n        this.mypublickey = localStorage.getItem(\"publicKey\");\n\n        if (this.primerykeyinput == this.mypublickey) {\n          this.newpublickey = localStorage.setItem('generatedPublickey', this.primerykeyinput);\n          this.button1 = \"hide\";\n          this.popuptask = false;\n        }\n        else {\n          console.log('count number', this.count);\n          this.button1 = 'show';\n        }\n\n      });\n    }\n\n  }\n\n  //logout\n  logout() {\n    localStorage.removeItem(\"id_token\");\n    localStorage.removeItem(\"publicKey\");\n    localStorage.removeItem(\"generatedPublickey\");\n    localStorage.removeItem(\"role\");\n    localStorage.removeItem(\"x-token\");\n    this.router.navigate(['/home']);\n  }\n\n\n}\n","export class Wholesaler {\n\tbatchid: string;\t\n\tshipper: string;\n\treciver: string\n\n\tconstructor(batchid:string, shipper:string, reciver:string){\n\t\tthis.batchid = batchid;\t\t\n\t\tthis.shipper = shipper;\n\t\tthis.reciver = reciver;\n\t}\n}\n","export class Medicine {\n    serial: string;\t\n    medicine:string;\n    MedicineCurrentTempurature:string;\n    location: string;\n    \n    weight:string;\n    \n\n    reporter:string;\n    status:string;\n     userId:string;\n\n\n     customern:string;\ncustomername:string;\nshipton :string;\ncountrycode:string;\nshiptoparty:string;\npharmadeliveryno:string;\nsalesorderendcustomer:string;\npurchaseorderendcustomer:string;\nshippedquantity:string;\nunit:string;\naproductname:string;\ndosageform:string;\npackagetype:string;\npackagesize:string;\nglobelmaterialno:string;\nplocalmaterialno:string;\nbatchn:string;\ndateofmanufecture:string;\nreleasedate:string;\nexpirydate:string;\nproductionqty:string;\npproductname:string;\npglobelmaterialno:string;\napackagingsite:string;\nmanufacturinglicense:string;\ngmvcertificateno:string;\ncertificateno:string;\nproductn:string;\nglobalmaterialn:string;\nlocalmaterialn:string;\n\nareleasedate:string;\nabatchn:string;\namanufacturingsite:string;\namanufacturinglicense:string;\nMdate:string;\nEdate:string;\nlocalmaterialno:string;\nbarcode:string;\n\tconstructor(   \n         serial: string,\n        medicine:string,\n        MedicineCurrentTempurature:string,\n        location: string,\n        \n        weight:string,\n       \n      \n        reporter:string,\n        status:string,\n        userId:string,\n\ncustomern:string,\ncustomername:string,\nshipton :string,\ncountrycode:string,\nshiptoparty:string,\npharmadeliveryno:string,\nsalesorderendcustomer:string,\npurchaseorderendcustomer:string,\nshippedquantity:string,\nunit:string,\naproductname:string,\ndosageform:string,\npackagetype:string,\npackagesize:string,\nglobelmaterialno:string,\nplocalmaterialno:string,\nbatchn:string,\ndateofmanufecture:string,\nreleasedate:string,\nexpirydate:string,\nproductionqty:string,\npproductname:string,\npglobelmaterialno:string,\napackagingsite:string,\nmanufacturinglicense:string,\ngmvcertificateno:string,\ncertificateno:string,\nproductn:string,\nglobalmaterialn:string,\nlocalmaterialn:string,\n\nareleasedate:string,\nabatchn:string,\namanufacturingsite:string,\namanufacturinglicense:string,\nMdate:string,\nEdate:string,\nlocalmaterialno:string,\nbarcode:string,\t\n       )\n        {\n            this.serial=serial;\n            this.medicine=medicine;\n            this.MedicineCurrentTempurature=MedicineCurrentTempurature;\n            this.location=location;\n            \n            this.weight=weight;\n           \n            \n            this.reporter=reporter;\n            this.status=status;\n            this.userId=userId;\n    \n            this.customern=customern;\n            this.customername=customername;\n            this.shipton=shipton ;\n            this.countrycode=countrycode;\n            this.shiptoparty=shiptoparty;\n            this.pharmadeliveryno=pharmadeliveryno;\n            this.salesorderendcustomer=salesorderendcustomer;\n            this.purchaseorderendcustomer=purchaseorderendcustomer;\n            this.shippedquantity=shippedquantity;\n            this.unit=unit;\n            this.aproductname=aproductname;\n            this.dosageform=dosageform;\n            this.packagetype=packagetype;\n            this.packagesize=packagesize;\n            this.globelmaterialno=globelmaterialno;\n            this.plocalmaterialno=plocalmaterialno;\n            this.batchn=batchn;\n            this.dateofmanufecture=dateofmanufecture;\n            this.releasedate=releasedate;\n            this.expirydate=expirydate;\n            this.productionqty=productionqty;\n            this.pproductname=pproductname;\n            this.pglobelmaterialno=pglobelmaterialno;\n            this.apackagingsite=apackagingsite;\n            this.manufacturinglicense=manufacturinglicense;\n            this.gmvcertificateno=gmvcertificateno;\n            this.certificateno=certificateno;\n            this.productn=productn;\n            this.globalmaterialn=globalmaterialn;\n            this.localmaterialn=localmaterialn;\n            \n            this.areleasedate=areleasedate;\n            this.abatchn=abatchn;\n            this.amanufacturingsite=amanufacturingsite;\n            this.amanufacturinglicense=amanufacturinglicense;\n            this.Mdate=Mdate;\n            this.Edate=Edate;\n            this.localmaterialno=localmaterialno;\n            this.barcode=barcode;\n    \t}\n}\n","export class Medicine2 {\n    serial: string;\t\n    medicine:string;\n    barcode:string;\n    location: string;\n    weight:string;\n    Mdate:string;\n    Edate:string;\n    MedicineId:string;\n\trole: string;\n    time:string;\n    publickey:string;\n    status:string;\n\n\n    // customern:string;\n    // customername:string;\n    // shipton :string;\n    // countrycode:string;\n    // shiptoparty:string;\n    // pharmadeliveryno:string;\n    // salesorderendcustomer:string;\n    // purchaseorderendcustomer:string;\n    // shippedquantity:string;\n    // unit:string;\n    // aproductname:string;\n    // dosageform:string;\n    // packagetype:string;\n    // packagesize:string;\n    // globelmaterialno:string;\n    // batchn:string;\n    // dateofmanufecture:string;\n    // releasedate:string;\n    // expirydate:string;\n    // productionqty:string;\n    // pproductname:string;\n    // pglobelmaterialno:string;\n    // apackagingsite:string;\n    // manufacturinglicense:string;\n    // gmvcertificateno:string;\n    // certificateno:string;\n    // productn:string;\n    // globalmaterialn:string;\n    // localmaterialn:string;\n    // areleasedate:string;\n    // abatchn:string;\n    // amanufacturingsite:string;\n    // amanufacturinglicense:string;\n\n\n\n\tconstructor(   \n         serial: string,\n        medicine:string,\n        barcode:string,\n        location: string,\n        weight:string,\n        Mdate:string,\n        Edate:string,\n        MedicineId:string,\n        role: string,\n        time:string,\n        publickey:string,\n        status:string,\n\n//         customern:string,\n// customername:string,\n// shipton :string,\n// countrycode:string,\n// shiptoparty:string,\n// pharmadeliveryno:string,\n// salesorderendcustomer:string,\n// purchaseorderendcustomer:string,\n// shippedquantity:string,\n// unit:string,\n// aproductname:string,\n// dosageform:string,\n// packagetype:string,\n// packagesize:string,\n// globelmaterialno:string,\n// batchn:string,\n// dateofmanufecture:string,\n// releasedate:string,\n// expirydate:string,\n// productionqty:string,\n// pproductname:string,\n// pglobelmaterialno:string,\n// apackagingsite:string,\n// manufacturinglicense:string,\n// gmvcertificateno:string,\n// certificateno:string,\n// productn:string,\n// globalmaterialn:string,\n// localmaterialn:string,\n// areleasedate:string,\n// abatchn:string,\n// amanufacturingsite:string,\n// amanufacturinglicense:string,\n\n\t)\n        {\n            this.serial=serial;\n            this.medicine=medicine;\n            this.barcode=barcode;\n            this.location=location;\n            this.weight=weight;\n            this.Mdate=Mdate;\n            this.Edate=Edate;\n            this.MedicineId=MedicineId;\n            this.role=role;\n            this.time=time;\n            this.publickey=publickey;\n            this.status=status;\n\n            // this.customern=customern;\n            // this.customername=customername;\n            // this.shipton=shipton ;\n            // this.countrycode=countrycode;\n            // this.shiptoparty=shiptoparty;\n            // this.pharmadeliveryno=pharmadeliveryno;\n            // this.salesorderendcustomer=salesorderendcustomer;\n            // this.purchaseorderendcustomer=purchaseorderendcustomer;\n            // this.shippedquantity=shippedquantity;\n            // this.unit=unit;\n            // this.aproductname=aproductname;\n            // this.dosageform=dosageform;\n            // this.packagetype=packagetype;\n            // this.packagesize=packagesize;\n            // this.globelmaterialno=globelmaterialno;\n            // this.batchn=batchn;\n            // this.dateofmanufecture=dateofmanufecture;\n            // this.releasedate=releasedate;\n            // this.expirydate=expirydate;\n            // this.productionqty=productionqty;\n            // this.pproductname=pproductname;\n            // this.pglobelmaterialno=pglobelmaterialno;\n            // this.apackagingsite=apackagingsite;\n            // this.manufacturinglicense=manufacturinglicense;\n            // this.gmvcertificateno=gmvcertificateno;\n            // this.certificateno=certificateno;\n            // this.productn=productn;\n            // this.globalmaterialn=globalmaterialn;\n            // this.localmaterialn=localmaterialn;\n            // this.areleasedate=areleasedate;\n            // this.abatchn=abatchn;\n            // this.amanufacturingsite=amanufacturingsite;\n            // this.amanufacturinglicense=amanufacturinglicense;\n\t    \n    \t}\n}\n","module.exports = \".container{\\n    margin-top:50px;\\n    color: navy;\\n}\\n\\nh4{\\ncolor: navy;\\n    margin-left: 20px;\\n}\\n\\nbody{\\n    color: navy;\\n}\\n\\n.cen{\\n    text-align: center;\\n}\\n\\n.width-100px{\\n    min-width: 100px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vbWVkaWNpbmUvbWVkaWNpbmUtY3JlYXRlL21lZGljaW5lLWNyZWF0ZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZUFBZTtJQUNmLFdBQVc7QUFDZjs7QUFFQTtBQUNBLFdBQVc7SUFDUCxpQkFBaUI7QUFDckI7O0FBQ0E7SUFDSSxXQUFXO0FBQ2Y7O0FBQ0E7SUFDSSxrQkFBa0I7QUFDdEI7O0FBQ0E7SUFDSSxnQkFBZ0I7QUFDcEIiLCJmaWxlIjoic3JjL2FwcC9hZG1pbi9tZWRpY2luZS9tZWRpY2luZS1jcmVhdGUvbWVkaWNpbmUtY3JlYXRlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVye1xuICAgIG1hcmdpbi10b3A6NTBweDtcbiAgICBjb2xvcjogbmF2eTtcbn1cblxuaDR7XG5jb2xvcjogbmF2eTtcbiAgICBtYXJnaW4tbGVmdDogMjBweDtcbn1cbmJvZHl7XG4gICAgY29sb3I6IG5hdnk7XG59XG4uY2Vue1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbi53aWR0aC0xMDBweHtcbiAgICBtaW4td2lkdGg6IDEwMHB4O1xufSJdfQ== */\"","module.exports = \"<app-dashboard></app-dashboard>\\n\\n<div class=\\\"container\\\">\\n  <h4>Logistic Cover Sheet NCH010400787797 to Batch Certificate</h4>\\n  <mat-horizontal-stepper linear #stepper>\\n    <mat-step>\\n      <form [formGroup]=\\\"basicLogisticInformation\\\" (ngSubmit)=\\\"onBasicInfoSubmit(stepper)\\\">\\n        <div class=\\\"row mb-3 justify-content-center\\\"><b>Basic Logistic Information</b></div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Product Name:</label>\\n              <input #se type=\\\"text\\\" formControlName=\\\"SerialNumber\\\" name=\\\"SerialNumber\\\"\\n                [ngClass]=\\\"{ 'is-invalid': basicSubmit && basicInfoFormControl.SerialNumber.errors }\\\"\\n                class=\\\"form-control required\\\" maxlength=\\\"30\\\" required>\\n              <div *ngIf=\\\"basicSubmit && basicInfoFormControl.SerialNumber.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"basicInfoFormControl.SerialNumber.errors.required\\\">Product Name required </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Customer's Product Name:</label>\\n              <input #me type=\\\"name\\\" formControlName=\\\"Medicine\\\" name=\\\"Medicine\\\"\\n                [ngClass]=\\\"{ 'is-invalid': basicSubmit && basicInfoFormControl.Medicine.errors }\\\"\\n                class=\\\"form-control required\\\" maxlength=\\\"30\\\">\\n              <div *ngIf=\\\"basicSubmit && basicInfoFormControl.Medicine.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"basicInfoFormControl.Medicine.errors.required\\\">Customer's Product required </div>\\n              </div>\\n            </div>\\n          </div>\\n\\n\\n          <div class=\\\"col\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Batch N:</label>\\n              <input #lo type=\\\"text\\\" formControlName=\\\"Location\\\" name=\\\"Location\\\"\\n                [ngClass]=\\\"{ 'is-invalid': basicSubmit && basicInfoFormControl.Location.errors }\\\"\\n                class=\\\"form-control required\\\" maxlength=\\\"30\\\">\\n              <div *ngIf=\\\"basicSubmit && basicInfoFormControl.Location.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"basicInfoFormControl.Location.errors.required\\\">Batch N required </div>\\n              </div>\\n\\n\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Global Valuated Material N:</label>\\n              <input #br type=\\\"number\\\" pattern=\\\"[0-9]*\\\"\\n                oninput=\\\"javascript: if (this.value != this.number) this.value = this.value.slice(null);\\\" min=\\\"0\\\"\\n                max=\\\"99\\\" formControlName=\\\"MedicineCurrentTempurature\\\" name=\\\"MedicineCurrentTempurature\\\"\\n                [ngClass]=\\\"{ 'is-invalid': basicSubmit && basicInfoFormControl.MedicineCurrentTempurature.errors }\\\"\\n                class=\\\"form-control required\\\">\\n              <div *ngIf=\\\"basicSubmit && basicInfoFormControl.MedicineCurrentTempurature.errors\\\"\\n                class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"basicInfoFormControl.MedicineCurrentTempurature.errors.required\\\">Global Valuated Material\\n                  required </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Batch Certificate N</label>\\n              <input #we type=\\\"text\\\" formControlName=\\\"Weight\\\" name=\\\"Weight\\\"\\n                [ngClass]=\\\"{ 'is-invalid': basicSubmit && basicInfoFormControl.Weight.errors }\\\"\\n                class=\\\"form-control required\\\" min=0 oninput=\\\"validity.valid||(value='');\\\">\\n              <div *ngIf=\\\"basicSubmit && basicInfoFormControl.Weight.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"basicInfoFormControl.Weight.errors.required\\\">Batch Certificate required </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Customer N</label>\\n              <input #cn type=\\\"text\\\" formControlName=\\\"customern\\\" name=\\\"customern\\\"\\n                [ngClass]=\\\"{ 'is-invalid': basicSubmit && basicInfoFormControl.customern.errors }\\\"\\n                class=\\\"form-control required\\\">\\n              <div *ngIf=\\\"basicSubmit && basicInfoFormControl.customern.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"basicInfoFormControl.customern.errors.required\\\">Customer N required</div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Customer Name:</label>\\n              <input #cusn type=\\\"text\\\" name=\\\"customername\\\" formControlName=\\\"customername\\\"\\n                [ngClass]=\\\"{ 'is-invalid': basicSubmit && basicInfoFormControl.customername.errors }\\\"\\n                class=\\\"form-control required\\\">\\n              <div *ngIf=\\\"basicSubmit && basicInfoFormControl.customername.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"basicInfoFormControl.customername.errors.required\\\">Customer Name required</div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Ship to N</label>\\n              <input #stn type=\\\"text\\\" name=\\\"shipton\\\" formControlName=\\\"shipton\\\"\\n                [ngClass]=\\\"{ 'is-invalid': basicSubmit && basicInfoFormControl.shipton.errors }\\\"\\n                class=\\\"form-control required\\\">\\n              <div *ngIf=\\\"basicSubmit && basicInfoFormControl.shipton.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"basicInfoFormControl.shipton.errors.required\\\">Ship N required</div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Country Code</label>\\n              <input #cc type=\\\"text\\\" name=\\\"countrycode\\\" formControlName=\\\"countrycode\\\"\\n                [ngClass]=\\\"{ 'is-invalid': basicSubmit && basicInfoFormControl.countrycode.errors }\\\"\\n                class=\\\"form-control required\\\">\\n              <div *ngIf=\\\"basicSubmit && basicInfoFormControl.countrycode.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"basicInfoFormControl.countrycode.errors.required\\\">Country Code required</div>\\n              </div>\\n\\n\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Ship to Party:</label>\\n              <input #stp type=\\\"text\\\" name=\\\"shiptoparty\\\" formControlName=\\\"shiptoparty\\\"\\n                [ngClass]=\\\"{ 'is-invalid': basicSubmit && basicInfoFormControl.shiptoparty.errors }\\\"\\n                class=\\\"form-control required\\\">\\n              <div *ngIf=\\\"basicSubmit && basicInfoFormControl.shiptoparty.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"basicInfoFormControl.shiptoparty.errors.required\\\">Ship to Party required</div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Pharma Outbound Delivery No:</label>\\n              <input #podn type=\\\"text\\\" name=\\\"pharmadeliveryno\\\" formControlName=\\\"pharmadeliveryno\\\"\\n                [ngClass]=\\\"{ 'is-invalid': basicSubmit && basicInfoFormControl.pharmadeliveryno.errors }\\\"\\n                class=\\\"form-control required\\\" maxlength=\\\"30\\\">\\n              <div *ngIf=\\\"basicSubmit && basicInfoFormControl.pharmadeliveryno.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"basicInfoFormControl.pharmadeliveryno.errors.required\\\">Pharma Outbound Delivery No. required\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n\\n          <div class=\\\"col\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Sales Order No vs. End Customer:</label>\\n              <input #sonec type=\\\"text\\\" name=\\\"salesorderendcustomer\\\" formControlName=\\\"salesorderendcustomer\\\"\\n                [ngClass]=\\\"{ 'is-invalid': basicSubmit && basicInfoFormControl.salesorderendcustomer.errors }\\\"\\n                class=\\\"form-control required\\\" maxlength=\\\"30\\\">\\n              <div *ngIf=\\\"basicSubmit && basicInfoFormControl.salesorderendcustomer.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"basicInfoFormControl.salesorderendcustomer.errors.required\\\"></div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Purchase Order N of End Customer:</label>\\n              <input #ponec type=\\\"text\\\" name=\\\"purchaseorderendcustomer\\\" formControlName=\\\"purchaseorderendcustomer\\\"\\n                [ngClass]=\\\"{ 'is-invalid': basicSubmit && basicInfoFormControl.purchaseorderendcustomer.errors }\\\"\\n                class=\\\"form-control required\\\">\\n              <div *ngIf=\\\"basicSubmit && basicInfoFormControl.purchaseorderendcustomer.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"basicInfoFormControl.purchaseorderendcustomer.errors.required\\\">Purchase Order N of End\\n                  Customer required</div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Shipped Quantity:</label>\\n              <input #sq type=\\\"text\\\" name=\\\"shippedquantity\\\" formControlName=\\\"shippedquantity\\\"\\n                [ngClass]=\\\"{ 'is-invalid': basicSubmit && basicInfoFormControl.shippedquantity.errors }\\\"\\n                class=\\\"form-control required\\\">\\n              <div *ngIf=\\\"basicSubmit && basicInfoFormControl.shippedquantity.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"basicInfoFormControl.shippedquantity.errors.required\\\">Shipped Quantity required</div>\\n              </div>\\n\\n\\n            </div>\\n          </div>\\n          <div class=\\\"col\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Unit:</label>\\n              <input #unit type=\\\"text\\\" name=\\\"unit\\\" formControlName=\\\"unit\\\"\\n                [ngClass]=\\\"{ 'is-invalid': basicSubmit && basicInfoFormControl.unit.errors }\\\"\\n                class=\\\"form-control required\\\">\\n              <div *ngIf=\\\"basicSubmit && basicInfoFormControl.unit.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"basicInfoFormControl.unit.errors.required\\\"> Unit required</div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col col d-flex justify-content-end\\\">\\n            <button class=\\\"btn btn-primary width-100px\\\" type=\\\"submit\\\">Next</button>\\n          </div>\\n        </div>\\n      </form>\\n    </mat-step>\\n    <mat-step>\\n      <form [formGroup]=\\\"additionalLogisticInformation\\\" (ngSubmit)=\\\"onAdditionalInfoSubmit(stepper)\\\">\\n        <div class=\\\"row mb-3 justify-content-center\\\"><b>Additional Logistic Information</b></div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Product Name:</label>\\n              <input #apn type=\\\"text\\\" name=\\\"aproductname\\\" formControlName=\\\"aproductname\\\"\\n                [ngClass]=\\\"{ 'is-invalid': additionalSubmit && additionalInfoFormControl.aproductname.errors }\\\"\\n                class=\\\"form-control required\\\">\\n              <div *ngIf=\\\"additionalSubmit && additionalInfoFormControl.aproductname.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"additionalInfoFormControl.aproductname.errors.required\\\">Product Name required</div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Dosage Form:</label>\\n              <input #df type=\\\"text\\\" name=\\\"dosageform\\\" formControlName=\\\"dosageform\\\"\\n                [ngClass]=\\\"{ 'is-invalid': additionalSubmit && additionalInfoFormControl.dosageform.errors }\\\"\\n                class=\\\"form-control required\\\">\\n              <div *ngIf=\\\"additionalSubmit && additionalInfoFormControl.dosageform.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"additionalInfoFormControl.dosageform.errors.required\\\">Dosage Form required</div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Package type:</label>\\n              <input #pt type=\\\"text\\\" onkeypress=\\\"return /[a-z]/i.test(event.key)\\\" formControlName=\\\"packagetype\\\"\\n                name=\\\"packagetype\\\"\\n                [ngClass]=\\\"{ 'is-invalid': additionalSubmit && additionalInfoFormControl.packagetype.errors }\\\"\\n                class=\\\"form-control required\\\">\\n              <div *ngIf=\\\"additionalSubmit && additionalInfoFormControl.packagetype.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"additionalInfoFormControl.packagetype.errors.required\\\"> Package Type required</div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Package Size:</label>\\n              <input #pcsi type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"packagesize\\\" name=\\\"packagesize\\\">\\n              <div *ngIf=\\\"\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"\\\">Package Size required</div>\\n              </div>\\n\\n\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Global Material No.:</label>\\n              <input #gm type=\\\"number\\\" pattern=\\\"[0-9]*\\\"\\n                oninput=\\\"javascript: if (this.value != this.number) this.value = this.value.slice(null);\\\" min=\\\"0\\\"\\n                max=\\\"99\\\" formControlName=\\\"globelmaterialno\\\" name=\\\"globelmaterialno\\\"\\n                [ngClass]=\\\"{ 'is-invalid': additionalSubmit && additionalInfoFormControl.globelmaterialno.errors }\\\"\\n                class=\\\"form-control required\\\">\\n              <div *ngIf=\\\"additionalSubmit && additionalInfoFormControl.globelmaterialno.errors\\\"\\n                class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"additionalInfoFormControl.globelmaterialno.errors.required\\\"> Global Material No. required\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Batch N:</label>\\n              <input #bn type=\\\"text\\\" name=\\\"batchn\\\" formControlName=\\\"batchn\\\"\\n                [ngClass]=\\\"{ 'is-invalid': additionalSubmit && additionalInfoFormControl.batchn.errors }\\\"\\n                class=\\\"form-control required\\\">\\n              <div *ngIf=\\\"additionalSubmit && additionalInfoFormControl.batchn.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"additionalInfoFormControl.batchn.errors.required\\\">Batch N Quantity required</div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Date of Manufacturing:</label>\\n              <input #dom type=\\\"date\\\" name=\\\"dateofmanufecture\\\" formControlName=\\\"dateofmanufecture\\\"\\n                [ngClass]=\\\"{ 'is-invalid': additionalSubmit && additionalInfoFormControl.dateofmanufecture.errors }\\\"\\n                class=\\\"form-control required\\\">\\n              <div *ngIf=\\\"additionalSubmit && additionalInfoFormControl.dateofmanufecture.errors\\\"\\n                class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"additionalInfoFormControl.dateofmanufecture.errors.required\\\">Date of Manufacturing required\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Release Date:</label>\\n              <input #rd type=\\\"date\\\" name=\\\"releasedate\\\" formControlName=\\\"releasedate\\\"\\n                [ngClass]=\\\"{ 'is-invalid': additionalSubmit && additionalInfoFormControl.releasedate.errors }\\\"\\n                class=\\\"form-control required\\\">\\n              <div *ngIf=\\\"additionalSubmit && additionalInfoFormControl.releasedate.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"additionalInfoFormControl.releasedate.errors.required\\\">Release Date required</div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Production Qty:</label><span>PC</span>\\n              <input #pq type=\\\"number\\\" pattern=\\\"[0-9]*\\\"\\n                oninput=\\\"javascript: if (this.value != this.number) this.value = this.value.slice(null);\\\" min=\\\"0\\\"\\n                max=\\\"99\\\" name=\\\"productionqty\\\" formControlName=\\\"productionqty\\\"\\n                [ngClass]=\\\"{ 'is-invalid': additionalSubmit && additionalInfoFormControl.productionqty.errors }\\\"\\n                class=\\\"form-control required\\\">\\n              <div *ngIf=\\\"additionalSubmit && additionalInfoFormControl.productionqty.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"additionalInfoFormControl.productionqty.errors.required\\\"> Production Qty required</div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col col d-flex justify-content-end\\\">\\n            <button class=\\\"btn btn-primary width-100px\\\" type=\\\"submit\\\">Next</button>\\n          </div>\\n        </div>\\n      </form>\\n    </mat-step>\\n    <mat-step>\\n      <form [formGroup]=\\\"packagingInformation\\\" (ngSubmit)=\\\"onPackagingInfoSubmit(stepper)\\\">\\n        <div class=\\\"row mb-3 justify-content-center\\\"><b>Packaging Logistic Information</b></div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Product Name:</label>\\n              <input #ppn type=\\\"text\\\" name=\\\"pproductname\\\" formControlName=\\\"pproductname\\\"\\n                [ngClass]=\\\"{ 'is-invalid': packagingSubmit && packagingInfoFormControl.pproductname.errors }\\\"\\n                class=\\\"form-control required\\\">\\n              <div *ngIf=\\\"packagingSubmit && packagingInfoFormControl.pproductname.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"packagingInfoFormControl.pproductname.errors.required\\\">Product Name required</div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Global Material No.:</label>\\n              <input #gmn type=\\\"number\\\" pattern=\\\"[0-9]*\\\"\\n                oninput=\\\"javascript: if (this.value != this.number) this.value = this.value.slice(null);\\\" min=\\\"0\\\"\\n                max=\\\"99\\\" name=\\\"pglobelmaterialno\\\" formControlName=\\\"pglobelmaterialno\\\"\\n                [ngClass]=\\\"{ 'is-invalid': packagingSubmit && packagingInfoFormControl.pglobelmaterialno.errors }\\\"\\n                class=\\\"form-control required\\\">\\n              <div *ngIf=\\\"packagingSubmit && packagingInfoFormControl.pglobelmaterialno.errors\\\"\\n                class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"packagingInfoFormControl.pglobelmaterialno.errors.required\\\"> Global Material No. required\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Local Material No:</label>\\n              <input #localm type=\\\"number\\\" pattern=\\\"[0-9]*\\\"\\n                oninput=\\\"javascript: if (this.value != this.number) this.value = this.value.slice(null);\\\" min=\\\"0\\\"\\n                max=\\\"99\\\" name=\\\"plocalmaterialno\\\" formControlName=\\\"plocalmaterialno\\\"\\n                [ngClass]=\\\"{ 'is-invalid': packagingSubmit && packagingInfoFormControl.plocalmaterialno.errors }\\\"\\n                class=\\\"form-control required\\\">\\n              <div *ngIf=\\\"packagingSubmit && packagingInfoFormControl.plocalmaterialno.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"packagingInfoFormControl.plocalmaterialno.errors.required\\\">Local Material No. required</div>\\n              </div>\\n\\n\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Packaging Site:</label>\\n              <input #pcsi type=\\\"text\\\" name=\\\"apackagingsite\\\" formControlName=\\\"apackagingsite\\\"\\n                [ngClass]=\\\"{ 'is-invalid': packagingSubmit && packagingInfoFormControl.apackagingsite.errors }\\\"\\n                class=\\\"form-control required\\\">\\n              <div *ngIf=\\\"packagingSubmit && packagingInfoFormControl.apackagingsite.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"packagingInfoFormControl.apackagingsite.errors.required\\\"> Packaging Site required</div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Manufacturing License:</label>\\n              <input #ml type=\\\"text\\\" name=\\\"manufacturinglicense\\\" formControlName=\\\"manufacturinglicense\\\"\\n                [ngClass]=\\\"{ 'is-invalid': packagingSubmit && packagingInfoFormControl.manufacturinglicense.errors }\\\"\\n                class=\\\"form-control required\\\">\\n              <div *ngIf=\\\"packagingSubmit && packagingInfoFormControl.manufacturinglicense.errors\\\"\\n                class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"packagingInfoFormControl.manufacturinglicense.errors.required\\\">Manufacturing License\\n                  required</div>\\n              </div>\\n\\n\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>GMV Certificate No:</label>\\n              <input #gmvc type=\\\"text\\\" name=\\\"gmvcertificateno\\\" formControlName=\\\"gmvcertificateno\\\"\\n                [ngClass]=\\\"{ 'is-invalid': packagingSubmit && packagingInfoFormControl.gmvcertificateno.errors }\\\"\\n                class=\\\"form-control required\\\">\\n              <div *ngIf=\\\"packagingSubmit && packagingInfoFormControl.gmvcertificateno.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"packagingInfoFormControl.gmvcertificateno.errors.required\\\"> GMV Certificate No required\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col col d-flex justify-content-end\\\">\\n            <button class=\\\"btn btn-primary width-100px\\\" type=\\\"submit\\\">Next</button>\\n          </div>\\n        </div>\\n      </form>\\n    </mat-step>\\n    <mat-step>\\n      <form [formGroup]=\\\"requirementInformation\\\" (ngSubmit)=\\\"onRequirementInfoSubmit(stepper)\\\">\\n        <div class=\\\"row mb-3 justify-content-center\\\"><b>For Tests, Requirments,Results and Conclusion refer to the\\n            following\\n            Certificate(s)</b></div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Certificate No:</label>\\n              <input #cern type=\\\"text\\\" min=\\\"0\\\" max=\\\"99\\\" formControlName=\\\"certificateno\\\" name=\\\"certificateno\\\"\\n                [ngClass]=\\\"{ 'is-invalid': requirementSubmit && requirementInfoFormControl.certificateno.errors }\\\"\\n                class=\\\"form-control required\\\">\\n              <div *ngIf=\\\"requirementSubmit && requirementInfoFormControl.certificateno.errors\\\"\\n                class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"requirementInfoFormControl.certificateno.errors.required\\\">Certificate No required</div>\\n              </div>\\n\\n\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Product Name:</label>\\n              <input #prn type=\\\"text\\\" name=\\\"productn\\\" formControlName=\\\"productn\\\"\\n                [ngClass]=\\\"{ 'is-invalid': requirementSubmit && requirementInfoFormControl.productn.errors }\\\"\\n                class=\\\"form-control required\\\">\\n              <div *ngIf=\\\"requirementSubmit && requirementInfoFormControl.productn.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"requirementInfoFormControl.productn.errors.required\\\"> Product Name required</div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Global Material N:</label>\\n              <input #glm type=\\\"number\\\" pattern=\\\"[0-9]*\\\"\\n                oninput=\\\"javascript: if (this.value != this.number) this.value = this.value.slice(null);\\\" min=\\\"0\\\"\\n                max=\\\"99\\\" name=\\\"globalmaterialn\\\" formControlName=\\\"globalmaterialn\\\"\\n                [ngClass]=\\\"{ 'is-invalid': requirementSubmit && requirementInfoFormControl.globalmaterialn.errors }\\\"\\n                class=\\\"form-control required\\\">\\n              <div *ngIf=\\\"requirementSubmit && requirementInfoFormControl.globalmaterialn.errors\\\"\\n                class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"requirementInfoFormControl.globalmaterialn.errors.required\\\">Global Material N required</div>\\n              </div>\\n\\n\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Local Material N:</label>\\n              <input #lmn type=\\\"number\\\" pattern=\\\"[0-9]*\\\"\\n                oninput=\\\"javascript: if (this.value != this.number) this.value = this.value.slice(null);\\\" min=\\\"0\\\"\\n                max=\\\"99\\\" name=\\\"localmaterialn\\\" formControlName=\\\"localmaterialn\\\"\\n                [ngClass]=\\\"{ 'is-invalid': requirementSubmit && requirementInfoFormControl.localmaterialn.errors }\\\"\\n                class=\\\"form-control required\\\">\\n              <div *ngIf=\\\"requirementSubmit && requirementInfoFormControl.localmaterialn.errors\\\"\\n                class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"requirementInfoFormControl.localmaterialn.errors.required\\\">Local Material N required</div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Release Date:</label>\\n              <input #rld type=\\\"date\\\" name=\\\"areleasedate\\\" formControlName=\\\"areleasedate\\\"\\n                [ngClass]=\\\"{ 'is-invalid': requirementSubmit && requirementInfoFormControl.areleasedate.errors }\\\"\\n                class=\\\"form-control required\\\">\\n              <div *ngIf=\\\"requirementSubmit && requirementInfoFormControl.areleasedate.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"requirementInfoFormControl.areleasedate.errors.required\\\">Release Date required</div>\\n              </div>\\n\\n\\n            </div>\\n          </div>\\n          <div class=\\\"col\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Batch N:</label>\\n              <input #abn type=\\\"number\\\" pattern=\\\"[0-9]*\\\"\\n                oninput=\\\"javascript: if (this.value != this.number) this.value = this.value.slice(null);\\\" min=\\\"0\\\"\\n                max=\\\"99\\\" name=\\\"abatchn\\\" formControlName=\\\"abatchn\\\"\\n                [ngClass]=\\\"{ 'is-invalid': requirementSubmit && requirementInfoFormControl.abatchn.errors }\\\"\\n                class=\\\"form-control required\\\">\\n              <div *ngIf=\\\"requirementSubmit && requirementInfoFormControl.abatchn.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"requirementInfoFormControl.abatchn.errors.required\\\">Batch N required</div>\\n              </div>\\n\\n\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Manufacturing Site:</label>\\n              <input #ams type=\\\"text\\\" name=\\\"amanufacturingsite\\\" formControlName=\\\"amanufacturingsite\\\"\\n                [ngClass]=\\\"{ 'is-invalid': requirementSubmit && requirementInfoFormControl.amanufacturingsite.errors }\\\"\\n                class=\\\"form-control required\\\">\\n              <div *ngIf=\\\"requirementSubmit && requirementInfoFormControl.amanufacturingsite.errors\\\"\\n                class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"requirementInfoFormControl.amanufacturingsite.errors.required\\\"> Manufacturing Site required\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n\\n          <div class=\\\"col\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Manufacturing License:</label>\\n              <input #amn type=\\\"text\\\" name=\\\"amanufacturinglicense\\\" formControlName=\\\"amanufacturinglicense\\\"\\n                [ngClass]=\\\"{ 'is-invalid': requirementSubmit && requirementInfoFormControl.amanufacturinglicense.errors }\\\"\\n                class=\\\"form-control required\\\">\\n              <div *ngIf=\\\"requirementSubmit && requirementInfoFormControl.amanufacturinglicense.errors\\\"\\n                class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"requirementInfoFormControl.amanufacturinglicense.errors.required\\\">Manufacturing License\\n                  required</div>\\n              </div>\\n            </div>\\n          </div>\\n\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Local Material No:</label>\\n              <input #rld type=\\\"text\\\" name=\\\"localmaterialno\\\" formControlName=\\\"localmaterialno\\\"\\n                [ngClass]=\\\"{ 'is-invalid': requirementSubmit && requirementInfoFormControl.localmaterialno.errors }\\\"\\n                class=\\\"form-control required\\\">\\n              <div *ngIf=\\\"requirementSubmit && requirementInfoFormControl.localmaterialno.errors\\\"\\n                class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"requirementInfoFormControl.localmaterialno.errors.required\\\">localmaterialno required</div>\\n              </div>\\n\\n\\n            </div>\\n          </div>\\n          <div class=\\\"col\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Manufactured Date:</label>\\n              <input #rld type=\\\"date\\\" name=\\\"ManufacturedDate\\\" formControlName=\\\"ManufacturedDate\\\"\\n                [ngClass]=\\\"{ 'is-invalid': requirementSubmit && requirementInfoFormControl.ManufacturedDate.errors }\\\"\\n                class=\\\"form-control required\\\">\\n              <div *ngIf=\\\"requirementSubmit && requirementInfoFormControl.ManufacturedDate.errors\\\"\\n                class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"requirementInfoFormControl.ManufacturedDate.errors.required\\\">Manufactured Date required\\n                </div>\\n              </div>\\n\\n\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col col d-flex justify-content-end\\\">\\n            <button class=\\\"btn btn-primary width-100px\\\" type=\\\"submit\\\">Create Records</button>\\n          </div>\\n        </div>\\n        <div class=\\\"row text-left\\\">\\n          <div class=\\\"col\\\">\\n            <div class=\\\"form-group\\\">\\n              <button type=\\\"button\\\" #completeModal style=\\\" margin: 0px; display: none\\\" class=\\\"btn btn-primary\\\"\\n                data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\">\\n                Generate QR Code\\n              </button>\\n\\n            </div>\\n          </div>\\n        </div>\\n</form>\\n</mat-step>\\n</mat-horizontal-stepper>\\n<!-- The Modal -->\\n<div class=\\\"modal fade\\\" id=\\\"myModal\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n\\n      <!-- Modal Header QR Code Generator Start -->\\n      <div class=\\\"modal-header\\\">\\n\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n      </div>\\n\\n      <!-- Modal body -->\\n      <div class=\\\"modal-body\\\" style=\\\"margin-left:125px\\\">\\n        <div>\\n          <h3>Medicine QR Code Image</h3>\\n          <qrcode #parent [qrdata]=\\\"medicineid\\\" [size]=\\\"256\\\" [level]=\\\"'M'\\\"></qrcode>\\n        </div>\\n\\n        <br>\\n\\n        <div class=\\\"text\\\">\\n\\n          <button (click)=\\\"saveAsImage(parent)\\\">Download QR Code Image</button>\\n        </div>\\n      </div>\\n\\n      <!-- Modal footer  QR Code Generator End-->\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\">Close</button>\\n      </div>\\n\\n    </div>\\n  </div>\\n</div>\\n\\n</div>\"","import { Component, VERSION, OnInit, ElementRef, ViewChild, OnDestroy } from '@angular/core';\nimport { Medicine } from './addmedicine';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { QrCodeReader } from 'src/app/qr-code-reader.service';\nimport { Subscription } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatStepper } from '@angular/material/stepper';\n\n@Component({\n  selector: 'app-medicine-create',\n  templateUrl: './medicine-create.component.html',\n  styleUrls: ['./medicine-create.component.css']\n})\nexport class MedicineCreateComponent implements OnInit, OnDestroy {\n\n  registerForm: FormGroup;\n  submitted = false;\n\n\n\n  qrdata: string = null;\n  barcodevalue: any;\n  subscription: Subscription;\n  createmedicne;\n  base;\n  call;\n  itemId: any = [];\n  itemId1: any = [];\n  status: any = [];\n  transId: any = [];\n  statusValue: any;\n  medicineid: any = [];\n  medicineserial: any;\n  blockchain: any = [];\n  blockchain2: any = [];\n  mypublickey: any;\n  privateKey: any;\n  medicineStatus: any;\n  userId;\n  myrole;\n  myrole1;\n  firstname;\n  lastname;\n  blockchainUrl: any = this.httpuser.blockchainUrl;\n  @ViewChild('completeModal') completeModal: ElementRef;\n  SerialNumber: string;\n  Medicine: string;\n  MedicineCurrentTempurature: string;\n  Location: string;\n  Weight: string;\n  ExpiryDate: string;\n  basicLogisticInformation: FormGroup\n  additionalLogisticInformation: FormGroup\n  packagingInformation: FormGroup\n  requirementInformation: FormGroup\n  basicSubmit = false;\n  additionalSubmit = false;\n  packagingSubmit = false;\n  requirementSubmit = false;\n  constructor(private httpuser: AuthService, private qrReader: QrCodeReader, private http: HttpClient, private formBuilder: FormBuilder) {\n    console.log('AppComponent running');\n    this.qrdata = ' ';\n  }\n  changeValue(newValue: string): void {\n    this.qrdata = newValue;\n  }\n\n\n  ngOnInit() {\n    this.medicineStatus = \"Medicine Created by Wholesaler\";\n    this.userId = localStorage.getItem(\"userId\");\n    console.log(\"User ID\", this.userId);\n    this.myrole = localStorage.getItem(\"role\");\n    this.myrole1 = localStorage.getItem(\"email\");\n    console.log(\"User Role\", this.myrole1);\n    console.log(\"User Role\", this.myrole);\n    this.firstname = localStorage.getItem(\"firstName\");\n    this.lastname = localStorage.getItem(\"lastName\");\n    console.log(\"User name\", this.firstname, this.lastname);\n    this.basicLogisticInformation = this.formBuilder.group({\n      SerialNumber: ['SerialNumber', Validators.required],\n      Medicine: ['Medicine', Validators.required],\n      MedicineCurrentTempurature: ['21', Validators.required],\n      Location: ['12', Validators.required],\n      Weight: ['Weight', Validators.required],\n      customern: ['customern', Validators.required],\n      customername: ['customername', Validators.required],\n      shipton: ['shipton', Validators.required],\n      countrycode: ['countrycode', Validators.required],\n      shiptoparty: ['shiptoparty', Validators.required],\n      pharmadeliveryno: ['pharmadeliveryno', Validators.required],\n      salesorderendcustomer: ['salesorderendcustomer', Validators.required],\n      purchaseorderendcustomer: ['purchaseorderendcustomer', Validators.required],\n      shippedquantity: ['shippedquantity', Validators.required],\n      unit: ['unit', Validators.required],\n    })\n\n    this.additionalLogisticInformation = this.formBuilder.group({\n      aproductname: ['aproductname', Validators.required],\n      dosageform: ['dosageform', Validators.required],\n      packagetype: ['packagetype', Validators.required],\n      packagesize: ['packagesize'],\n      globelmaterialno: [88, Validators.required],\n      batchn: ['batchn', Validators.required],\n      dateofmanufecture: ['dateofmanufecture', Validators.required],\n      releasedate: ['01/27/2021', Validators.required],\n      expirydate: ['01/28/2021', Validators.required],\n      productionqty: [34, Validators.required],\n    });\n\n    this.packagingInformation = this.formBuilder.group({\n      pproductname: ['das', Validators.required],\n      pglobelmaterialno: [45, Validators.required],\n      plocalmaterialno: [434],\n      apackagingsite: ['apackagingsite', Validators.required],\n      manufacturinglicense: ['manufacturinglicense', Validators.required],\n      gmvcertificateno: [231, Validators.required],\n    });\n\n    this.requirementInformation = this.formBuilder.group({\n      certificateno: ['certificateno', Validators.required],\n      productn: ['productn', Validators.required],\n      globalmaterialn: [222, Validators.required],\n      localmaterialn: [333, Validators.required],\n      areleasedate: ['', Validators.required],\n      abatchn: [444, Validators.required],\n      amanufacturingsite: ['amanufacturingsite', Validators.required],\n      amanufacturinglicense: ['amanufacturinglicense', Validators.required],\n      ManufacturedDate: ['', Validators.required],\n      localmaterialno: ['localmaterialno', Validators.required],\n    })\n    //this.medicineid = '92516006ba3253876aed6bc22d4a6ff53d8406c6ad864195ed144ab5c87621b6c233b5';\n    this.registerForm = this.formBuilder.group({\n      // SerialNumber: ['', Validators.required],\n      // Medicine: ['', Validators.required],\n      // MedicineCurrentTempurature: ['', Validators.required],\n      // Location: ['', Validators.required],\n      // Weight: ['', Validators.required],\n\n\n      // customern: ['', Validators.required],\n      // customername: ['', Validators.required],\n      // shipton: ['', Validators.required],\n      // countrycode: ['', Validators.required],\n      // shiptoparty: ['', Validators.required],\n      // pharmadeliveryno: ['', Validators.required],\n      // salesorderendcustomer: ['', Validators.required],\n      // purchaseorderendcustomer: ['', Validators.required],\n      // shippedquantity: ['', Validators.required],\n      // unit: ['', Validators.required],\n      // aproductname: ['', Validators.required],\n      // dosageform: ['', Validators.required],\n      // packagetype: ['', Validators.required],\n      // packagesize: [''],\n      // globelmaterialno: ['', Validators.required],\n      // plocalmaterialno:[''],\n      // batchn: ['', Validators.required],\n      // dateofmanufecture: ['', Validators.required],\n      // releasedate: ['', Validators.required],\n      // expirydate: ['', Validators.required],\n      // productionqty: ['', Validators.required],\n      // pproductname: ['', Validators.required],\n      // pglobelmaterialno: ['', Validators.required],\n      // apackagingsite: ['', Validators.required],\n      // manufacturinglicense: ['', Validators.required],\n      // gmvcertificateno: ['', Validators.required],\n      // certificateno: ['', Validators.required],\n      // productn: ['', Validators.required],\n      // globalmaterialn: ['', Validators.required],\n      // localmaterialn: ['', Validators.required],\n\n      // areleasedate: ['', Validators.required],\n      // abatchn: ['', Validators.required],\n      // amanufacturingsite: ['', Validators.required],\n      // amanufacturinglicense: ['', Validators.required],\n      // ManufacturedDate: ['', Validators.required],\n      // ExpiryDate: [''],\n      // localmaterialno: ['', Validators.required],\n      // AuthorizeReporters: ['', Validators.required],\n      // Selectfield: ['', Validators.required],\n\n    });\n\n  }\n\n  onFileChange(event) {\n    const file = event.target.files[0];\n    this.subscription = this.qrReader.decode(file)\n      .subscribe(decodedString => {\n        this.barcodevalue = decodedString;\n        console.log(decodedString)\n      });\n  }\n\n\n\n  //saving image file of Qr code \n\n  // qrdata2 = this.medicineid;\n\n  saveAsImage(parent) {\n    // fetches base 64 date from image\n    const parentElement = parent.el.nativeElement.querySelector(\"img\").src;\n\n    // converts base 64 encoded image to blobData\n    let blobData = this.convertBase64ToBlob(parentElement);\n\n    // saves as image\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) { //IE\n      window.navigator.msSaveOrOpenBlob(blobData, 'Qrcode');\n    } else { // chrome\n      const blob = new Blob([blobData], { type: \"image/png\" });\n      const url = window.URL.createObjectURL(blob);\n      // window.open(url);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = this.medicineserial;\n      link.click();\n    }\n\n  }\n\n  private convertBase64ToBlob(Base64Image: any) {\n    // SPLIT INTO TWO PARTS\n    const parts = Base64Image.split(';base64,');\n    // HOLD THE CONTENT TYPE\n    const imageType = parts[0].split(':')[1];\n    // DECODE BASE64 STRING\n    const decodedData = window.atob(parts[1]);\n    // CREATE UNIT8ARRAY OF SIZE SAME AS ROW DATA LENGTH\n    const uInt8Array = new Uint8Array(decodedData.length);\n    // INSERT ALL CHARACTER CODE INTO UINT8ARRAY\n    for (let i = 0; i < decodedData.length; ++i) {\n      uInt8Array[i] = decodedData.charCodeAt(i);\n    }\n    // RETURN BLOB IMAGE AFTER CONVERSION\n    return new Blob([uInt8Array], { type: imageType });\n  }\n\n\n\n  ngOnDestroy(): void {\n\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.registerForm.controls; }\n\n  \n    // serialNo: string, medicine: string, location: string, MedicineCurrentTempurature: string, weight: string, customern: string, customername: string, shipton: string, countrycode: string, shiptoparty: string, pharmadeliveryno: string, salesorderendcustomer: string, purchaseorderendcustomer: string, shippedquantity: string, unit: string, aproductname: string, dosageform: string, packagetype: string, packagesize: string, globelmaterialno: string, batchn: string, dateofmanufecture: string, releasedate: string, expirydate: string, productionqty: string, pproductname: string, pglobelmaterialno: string, plocalmaterialno: string, apackagingsite: string, manufacturinglicense: string, gmvcertificateno: string, certificateno: string, productn: string, globalmaterialn: string, localmaterialn: string, areleasedate: string, abatchn: string, amanufacturingsite: string, amanufacturinglicense: string, mdate: string, edate: string,\n    // localmaterialno: string, barcode: string,\n    onSubmit() {\n   \n    var serialNo = this.basicLogisticInformation.value.SerialNumber;\n    console.log(serialNo)\n    var medicine = this.basicLogisticInformation.value.Medicine;\n    var MedicineCurrentTempurature = this.basicLogisticInformation.value.MedicineCurrentTempurature;\n    var location = this.basicLogisticInformation.value.Location;\n    var weight = this.basicLogisticInformation.value.Weight;\n    var customern = this.basicLogisticInformation.value.customern;\n    var customername = this.basicLogisticInformation.value.customername;\n    var shipton = this.basicLogisticInformation.value.shipton;\n    var countrycode = this.basicLogisticInformation.value.countrycode;\n    var shiptoparty = this.basicLogisticInformation.value.shiptoparty;\n    var pharmadeliveryno = this.basicLogisticInformation.value.pharmadeliveryno;\n    var salesorderendcustomer = this.basicLogisticInformation.value.salesorderendcustomer;\n    var purchaseorderendcustomer = this.basicLogisticInformation.value.purchaseorderendcustomer;\n    var shippedquantity = this.basicLogisticInformation.value.shippedquantity;\n    var unit = this.basicLogisticInformation.value.unit;\n    var aproductname = this.additionalLogisticInformation.value.aproductname;\n    var dosageform = this.additionalLogisticInformation.value.dosageform;\n    var packagetype = this.additionalLogisticInformation.value.packagetype;\n   var packagesize = this.additionalLogisticInformation.value.packagesize;\n    var globelmaterialno = this.additionalLogisticInformation.value.globelmaterialno;\n    var batchn = this.additionalLogisticInformation.value.batchn;\n    var dateofmanufecture = this.additionalLogisticInformation.value.dateofmanufecture;\n    var releasedate = this.additionalLogisticInformation.value.releasedate;\n    var expirydate = this.additionalLogisticInformation.value.expirydate;\n    var productionqty = this.additionalLogisticInformation.value.productionqty;\n    var pproductname = this.packagingInformation.value.pproductname;\n    var pglobelmaterialno= this.packagingInformation.value.pglobelmaterialno;\n    var apackagingsite= this.packagingInformation.value.apackagingsite;\n\n    var manufacturinglicense = this.packagingInformation.value.manufacturinglicense;\n\n    var gmvcertificateno= this.packagingInformation.value.gmvcertificateno;\n\n    var certificateno = this.requirementInformation.value.certificateno;\n\n    var productn= this.requirementInformation.value.productn;\n\n    var globalmaterialn = this.requirementInformation.value.globalmaterialn;\n\n    var localmaterialn = this.requirementInformation.value.localmaterialn;\n\n    var plocalmaterialno = this.packagingInformation.value.plocalmaterialno;\n\n    var areleasedate = this.requirementInformation.value.areleasedate;\n\n    var abatchn= this.requirementInformation.value.abatchn;\n\n    var amanufacturingsite = this.requirementInformation.value.amanufacturingsite;\n\n    var amanufacturinglicense= this.requirementInformation.value.amanufacturinglicense;\n   var mdate = this.requirementInformation.value.ManufacturedDate;\n   var localmaterialno = this.requirementInformation.value.localmaterialno;\n   var barcode = '';\n\n    if (serialNo == '' || typeof serialNo == 'undefined') {\n      alert('serial is empty!');\n      return false;\n    }\n    else if (medicine == '' || typeof medicine == 'undefined') {\n      alert('Customers Product Name is empty!');\n      return false;\n    }\n\n    else if (location == '' || typeof location == 'undefined') {\n      alert('Batch N required is empty!');\n      return false;\n    }\n    else if (weight == '' || typeof weight == 'undefined') {\n      alert('Batch Certificate N is empty!');\n      return false;\n    }\n    else if (customern == '' || typeof customern == 'undefined') {\n      alert('Customer N is empty!');\n      return false;\n    }\n    else if (customername == '' || typeof customername == 'undefined') {\n      alert('Customer Name is empty!');\n      return false;\n    }\n    else if (shipton == '' || typeof shipton == 'undefined') {\n      alert('Ship to N is empty!');\n      return false;\n    }\n    else if (countrycode == '' || typeof countrycode == 'undefined') {\n      alert('Country Code is empty!');\n      return false;\n    }\n    else if (shiptoparty == '' || typeof shiptoparty == 'undefined') {\n      alert('Ship to Party is empty!');\n      return false;\n    }\n    else if (pharmadeliveryno == '' || typeof pharmadeliveryno == 'undefined') {\n      alert('Pharma Outbound Delivery No is empty!');\n      return false;\n    }\n    else if (salesorderendcustomer == '' || typeof salesorderendcustomer == 'undefined') {\n      alert('Sales Order No vs. End Customer is empty!');\n      return false;\n    }\n    else if (purchaseorderendcustomer == '' || typeof purchaseorderendcustomer == 'undefined') {\n      alert('Purchase Order N of End Customer is empty!');\n      return false;\n    }\n    else if (shippedquantity == '' || typeof shippedquantity == 'undefined') {\n      alert('Shipped Quantity is empty!');\n      return false;\n    }\n    else if (unit == '' || typeof unit == 'undefined') {\n      alert('unit is empty!');\n      return false;\n    }\n    else if (aproductname == '' || typeof aproductname == 'undefined') {\n      alert('Product Name is empty!');\n      return false;\n    }\n    else if (dosageform == '' || typeof dosageform == 'undefined') {\n      alert('Dosage Form is empty!');\n      return false;\n    }\n    else if (packagetype == '' || typeof packagetype == 'undefined') {\n      alert('Package type is empty!');\n      return false;\n    }\n    else if (globelmaterialno == '' || typeof globelmaterialno == 'undefined') {\n      alert('Global Material No. is empty!');\n      return false;\n    }\n    else if (batchn == '' || typeof batchn == 'undefined') {\n      alert('Batch N is empty!');\n      return false;\n    }\n    else if (dateofmanufecture == '' || typeof dateofmanufecture == 'undefined') {\n      alert('Date of Manufacturing is empty!');\n      return false;\n    }\n    else if (releasedate == '' || typeof releasedate == 'undefined') {\n      alert('Release Date is empty!');\n      return false;\n    }\n    else if (expirydate == '' || typeof expirydate == 'undefined') {\n      alert('Expiry Date is empty!');\n      return false;\n    }\n    else if (productionqty == '' || typeof productionqty == 'undefined') {\n      alert('Production Qty is empty!');\n      return false;\n    }\n    else if (pproductname == '' || typeof pproductname == 'undefined') {\n      alert('Product Name is empty!');\n      return false;\n    }\n    else if (pglobelmaterialno == '' || typeof pglobelmaterialno == 'undefined') {\n      alert('Global Material No is empty!');\n      return false;\n    }\n    else if (apackagingsite == '' || typeof apackagingsite == 'undefined') {\n      alert('Packaging Site No is empty!');\n      return false;\n    }\n    else if (manufacturinglicense == '' || typeof manufacturinglicense == 'undefined') {\n      alert('Manufacturing License is empty!');\n      return false;\n    }\n    else if (gmvcertificateno == '' || typeof gmvcertificateno == 'undefined') {\n      alert('GMV Certificate No is empty!');\n      return false;\n    }\n    else if (certificateno == '' || typeof certificateno == 'undefined') {\n      alert('Certificate No is empty!');\n      return false;\n    }\n    else if (productn == '' || typeof productn == 'undefined') {\n      alert('Product Name is empty!');\n      return false;\n    }\n    else if (globalmaterialn == '' || typeof globalmaterialn == 'undefined') {\n      alert('Global Material N is empty!');\n      return false;\n    }\n    else if (localmaterialn == '' || typeof localmaterialn == 'undefined') {\n      alert('Local Material N is empty!');\n      return false;\n    }\n    else if (plocalmaterialno == '' || typeof plocalmaterialno == 'undefined') {\n      alert('Local Material No is empty!');\n      return false;\n    }\n    else if (areleasedate == '' || typeof areleasedate == 'undefined') {\n      alert(' Release Date is empty!');\n      return false;\n    }\n    else if (abatchn == '' || typeof abatchn == 'undefined') {\n      alert('Batch N is empty!');\n      return false;\n    }\n    else if (amanufacturingsite == '' || typeof amanufacturingsite == 'undefined') {\n      alert('Manufacturing Site is empty!');\n      return false;\n    }\n    else if (amanufacturinglicense == '' || typeof amanufacturinglicense == 'undefined') {\n      alert('Manufacturing License is empty!');\n      return false;\n    }\n\n\n\n    let that = this;\n    this.submitted = true;\n\n\n    console.log(\"User ID\", this.userId);\n\n    /* \tObject.keys(this.registerForm.controls).forEach(field => { // {1}\n        const control = this.registerForm.get(field);   \n        control.markAsUntouched({ onlySelf: true });\n        console.log(control.touched);\n        control.markAsTouched({ onlySelf: true });       // {3}\n      });\n        // stop here if form is invalid\n         if (!this.registerForm.valid) {\n           alert(\"wrong\");\n           return;\n         } */\n\n    //CREATE MEDICINE CODE\n    this.medicineStatus = this.firstname + \" \" + this.lastname + \" \" + \"[Manufacturer]\";\n    console.log(this.medicineStatus);\n    this.mypublickey = localStorage.getItem(\"publicKey\");\n    console.log(\"MedicineStatus\", this.mypublickey);\n    this.privateKey = localStorage.getItem(\"privateKey\");\n    console.log(\"Private Key\", this.privateKey);\n\n\n    this.createmedicne = new Medicine(serialNo, medicine, MedicineCurrentTempurature, location, weight, '', this.medicineStatus, this.userId, customern, customername, shipton, countrycode, shiptoparty, pharmadeliveryno, salesorderendcustomer, purchaseorderendcustomer, shippedquantity, unit, aproductname, dosageform, packagetype, packagesize, globelmaterialno, plocalmaterialno, batchn, dateofmanufecture, releasedate, expirydate, productionqty, pproductname, pglobelmaterialno, apackagingsite, manufacturinglicense, gmvcertificateno, certificateno, productn, globalmaterialn, localmaterialn, areleasedate, abatchn, amanufacturingsite, amanufacturinglicense, mdate, expirydate, localmaterialno, barcode\n    );\n    console.log('createmedicne object => console of data', JSON.stringify(this.createmedicne));\n    this.base = this.httpuser.createmedicine(this.createmedicne);\n                this.call = this.base.subscribe((data) => {\n                  console.log(\"AT = \" + JSON.stringify(data));\n                  this.medicineid = data.MedicineId;\n                  this.medicineserial = data.serial;\n                  alert('Request Accepted');\n                  let el: HTMLElement = this.completeModal.nativeElement;\n                  el.click();\n                 \n                  //this.registerForm.reset();\n        });\n    //blockcahin\n    // const Metadata = {\n\n    //   \"action\": \"createMedicine\",\n    //   \"payloaddata\": {\n    //     \"serialNumber\": serialNo,\n    //     \"description\": medicine + \" \" + weight + \" \" + mdate + \" \" + edate,\n    //     \"location\": {\n    //       \"type\": 1,\n    //       \"body\": {\n    //         \"address\": location\n    //       }\n    //     },\n    //     \"uintDescription\": {\n    //       \"units\": 12\n    //     }\n    //   },\n    //   \"private\": this.privateKey,\n    //   \"public\": this.mypublickey\n    // }\n\n    // const httpOptions = {\n    //   headers: new HttpHeaders({\n    //     'Content-Type': 'application/json'\n    //   })\n    // };\n\n    // var x = this.http.post(this.blockchainUrl, Metadata, httpOptions).subscribe(\n    //   (val) => {\n    //     console.log(\"POST call successful value returned in body\", val);\n    //     this.blockchain = val;\n    //     if (that.httpuser.IsJsonString(this.blockchain.response.body)) {\n    //       JSON.parse(this.blockchain.response.body).hasOwnProperty(\"data\");\n\n    //       this.status = JSON.parse(this.blockchain.response.body);\n    //       this.statusValue = this.status.data[0].status;\n    //       this.itemId = this.status.data[0].id;\n    //       if (this.statusValue == 'COMMITTED') {\n    //         this.base = this.httpuser.createmedicine(this.createmedicne);\n    //         this.call = this.base.subscribe((data) => {\n\n    //           console.log(JSON.stringify(data));\n    //           this.medicineid = data.MedicineId;\n    //           this.medicineserial = data.serial;\n    //           alert('Request Accepted');\n    //           let el: HTMLElement = this.completeModal.nativeElement;\n    //           el.click();\n    //           //this.registerForm.reset();\n    //         });\n    //       }\n    //       else {\n    //         alert('Request Rejected');\n    //       }\n    //     } else {\n\n    //       that.http.get(this.httpuser.batchUrl + \"/batch_statuses?\" + this.blockchain.id + \"&wait\").subscribe((val) => {\n    //         this.blockchain2 = val\n    //         if (that.httpuser.IsJsonString(this.blockchain2.body)) {\n    //           this.status = JSON.parse(this.blockchain2.body);\n    //           console.log('json value2', this.status.data[0].status);\n    //           this.statusValue = this.status.data[0].status;\n    //           this.itemId = this.status.data[0].id;\n    //           if (this.statusValue == 'COMMITTED') {\n    //             this.base = this.httpuser.createmedicine(this.createmedicne);\n    //             this.call = this.base.subscribe((data) => {\n    //               console.log(\"AT = \" + JSON.stringify(data));\n    //               this.medicineid = data.MedicineId;\n    //               this.medicineserial = data.serial;\n    //               alert('Request Accepted');\n    //               //this.registerForm.reset();\n    //             });\n    //           }\n    //           else {\n    //             alert('Request Rejected');\n    //           }\n    //         }\n    //       })\n    //     }\n    //     // }).catch(function (err) {\n    //     //   console.log(err.message);\n    //   });\n  }\n  // convenience getter for easy access to form fields\n  get basicInfoFormControl() { return this.basicLogisticInformation.controls; }\n\n  onBasicInfoSubmit(stepper: MatStepper) {\n    this.basicSubmit = true\n    if (this.basicLogisticInformation.invalid) {\n      return;\n    }\n  console.log(this.basicLogisticInformation.value)\n  console.log(this.basicLogisticInformation.value.SerialNumber)\n    console.log('basic value', this.basicInfoFormControl);\n    stepper.next();\n  }\n  get additionalInfoFormControl() { return this.additionalLogisticInformation.controls; }\n\n  onAdditionalInfoSubmit(stepper: MatStepper) {\n    this.additionalSubmit = true\n    if (this.additionalLogisticInformation.invalid) {\n      return;\n    }\n    console.log('additional value', this.additionalInfoFormControl);\n    stepper.next();\n  }\n\n  get packagingInfoFormControl() { return this.packagingInformation.controls; }\n\n  onPackagingInfoSubmit(stepper: MatStepper) {\n    this.packagingSubmit = true\n    if (this.packagingInformation.invalid) {\n      return;\n    }\n    console.log('packaging value', this.packagingInfoFormControl);\n    stepper.next();\n  }\n  get requirementInfoFormControl() { return this.requirementInformation.controls; }\n\n  onRequirementInfoSubmit(stepper: MatStepper) {\n    this.requirementSubmit = true\n    console.log('requirementInformation', this.requirementInformation);\n    if (this.requirementInformation.invalid) {\n      return;\n    }\n  \n    console.log('onRequirementInfoSubmit', this.requirementInfoFormControl);\n    this.onSubmit()\n    console.log('stepper',stepper);\n  }\n}\n\n\n\n\n\n\n\n","module.exports = \"table {\\n    width: 100%;\\n    background-color: white;\\n  }\\n\\n \\n#heading{\\n    background-color: rgb(18, 50, 190); \\n    color:white;\\n}\\n\\n \\n.pd{\\n  background: navy;\\n}\\n\\n \\na{\\n  color: #3d6d79;\\n}\\n\\n \\ntd {\\n    width: 100%;\\n    border-bottom-color: #b5b3b3;\\n    border-color: #454d55 !important;\\n    color: #13343c;\\n}\\n\\n \\nth{\\n  border: none !important;\\n  background-color: #3d6d79; \\n  color:White;\\n  font-family: Muli,Helvetica Neue,Arial,sans-serif;\\n  font-weight: 600;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vbWVkaWNpbmUvbWVkaWNpbmUtZGFzaGJvYXJkL21lZGljaW5lLWRhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksV0FBVztJQUNYLHVCQUF1QjtFQUN6Qjs7O0FBR0Y7SUFDSSxrQ0FBa0M7SUFDbEMsV0FBVztBQUNmOzs7QUFDQTtFQUNFLGdCQUFnQjtBQUNsQjs7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCOzs7QUFFQTtJQUNJLFdBQVc7SUFDWCw0QkFBNEI7SUFDNUIsZ0NBQWdDO0lBQ2hDLGNBQWM7QUFDbEI7OztBQUdBO0VBQ0UsdUJBQXVCO0VBQ3ZCLHlCQUF5QjtFQUN6QixXQUFXO0VBQ1gsaURBQWlEO0VBQ2pELGdCQUFnQjtBQUNsQiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL21lZGljaW5lL21lZGljaW5lLWRhc2hib2FyZC9tZWRpY2luZS1kYXNoYm9hcmQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgfVxuXG4gXG4jaGVhZGluZ3tcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTgsIDUwLCAxOTApOyBcbiAgICBjb2xvcjp3aGl0ZTtcbn1cbi5wZHtcbiAgYmFja2dyb3VuZDogbmF2eTtcbn1cblxuYXtcbiAgY29sb3I6ICMzZDZkNzk7XG59XG5cbnRkIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBib3JkZXItYm90dG9tLWNvbG9yOiAjYjViM2IzO1xuICAgIGJvcmRlci1jb2xvcjogIzQ1NGQ1NSAhaW1wb3J0YW50O1xuICAgIGNvbG9yOiAjMTMzNDNjO1xufVxuXG4gXG50aHtcbiAgYm9yZGVyOiBub25lICFpbXBvcnRhbnQ7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzZDZkNzk7IFxuICBjb2xvcjpXaGl0ZTtcbiAgZm9udC1mYW1pbHk6IE11bGksSGVsdmV0aWNhIE5ldWUsQXJpYWwsc2Fucy1zZXJpZjtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbn0iXX0= */\"","module.exports = \"<app-dashboard></app-dashboard>\\n\\n    \\n<div class=\\\"container\\\" style=\\\" width: 100%; padding: 2%;\\\" >\\n  <div class=\\\"row\\\">\\n    <!--br table-responsive  -->\\n\\t<div class=\\\"col-xs-6 col-md-4 col-sm-4\\\">\\n    <table class=\\\"table table-striped table-hover text-center\\\"> \\n\\n      <thead class=\\\"theme-table\\\">\\n        <tr>\\n          <th> Serial Number</th>\\n          <!-- <th>Medicine code</th>\\n          <th>Manufactured Date</th>\\n          <th>Location</th>\\n          <th>Weight(Kg)</th> -->\\n          <!-- <th></th>\\n          <th></th> -->\\n        </tr>\\n      </thead>\\n      <tbody>\\n          <ng-container *ngFor=\\\"let x of list; let i = index\\\" >\\n            <tr *ngIf=\\\"x.serial\\\">\\n            <td><a [routerLink]=\\\"['/medicinedetailsdashboard',x.serial]\\\">{{x.serial}}</a></td>\\n          <!-- <td>{{x.medicine}}</td>\\n          <td>{{x.Mdate}}</td>\\n          <td>{{x.location}}</td>\\n          <td>{{x.weight}}</td> -->\\n          <!-- <td><button type=\\\"button\\\" *ngIf=\\\"myrole>1\\\" (click)=\\\"deleteMedicine(x._id)\\\" class=\\\"btn btn-danger\\\">Delete</button></td>\\n          <td><button type=\\\"button\\\" (click)=\\\"serialId(x.serial)\\\" class=\\\"btn btn-info\\\" data-toggle=\\\"modal\\\"\\n              data-target=\\\"#exampleModalCenter\\\" *ngIf=\\\"myrole>1\\\">Send to Wholesaler</button></td> -->\\n            </tr>\\n          </ng-container>\\n          <tr><th></th></tr>\\n      </tbody>\\n      <tfoot class=\\\"theme-table\\\">\\n        <tr>\\n          <!-- <th></th>\\n          <th></th>\\n          <th></th>\\n          <th></th>\\n          <th></th>\\n          <th></th> -->\\n        </tr>\\n      </tfoot>\\n    </table>\\n\\t </div>\\n\\t \\n\\t <div class=\\\"col-xs-12 col-md-8 col-sm-8\\\">\\n    <table class=\\\"table table-striped table-hover text-center\\\">\\n\\n      <thead class=\\\"theme-table\\\">\\n        <tr>\\n          <th> Serial</th>\\n          <th>Sent to</th>\\n          <th>Transporter</th>\\n          <th>Date</th>\\n          <!-- <th>Medicine code</th>\\n          <th>Manufactured Date</th>\\n          <th>Location</th>\\n          <th>Weight(Kg)</th> -->\\n          <!-- <th></th>\\n          <th></th> -->\\n        </tr>\\n      </thead>\\n      <tbody>\\n          <ng-container *ngFor=\\\"let tr of trans; let i = index\\\" >\\n            <!-- <tr *ngIf=\\\"tr.serial\\\"> -->\\n            <tr>\\n              <td><a [routerLink]=\\\"['/medicinedetailsdashboard',tr.serial]\\\" style=\\\"color:white\\\"> {{tr.serial}} </a></td>\\n              <td><p *ngFor=\\\"let u of wlist;\\\"><span *ngIf=\\\"u.userId==tr.wholesalerId || u.publicKey==tr.wholesalerId \\\">{{u.firstName}} {{u.lastName}}</span></p></td>\\n              <td><p *ngFor=\\\"let t of tlist;\\\"><span *ngIf=\\\"t.userId==tr.transporterId  || t.publicKey==tr.wholesalerId \\t\\\">{{t.firstName}} {{t.lastName}}</span></p></td>\\n              <td><span *ngIf=\\\"tr.edate\\\">{{tr.edate | date: 'dd/MM/yyyy h:mm:ss a'}}</span></td>\\n            </tr>\\n          </ng-container>\\n      </tbody>\\n    </table>\\n\\t </div>\\n  </div>\\n</div>\\n\\n\\n<!-- Modal -->\\n<div class=\\\"modal fade\\\" id=\\\"exampleModalCenter\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalCenterTitle\\\"\\n  aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLongTitle\\\">Medicine Transportation</h5>\\n\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Serial</label>\\n              <input #serial type=\\\"text\\\" [(ngModel)]=\\\"serialvalue\\\" class=\\\"form-control required\\\">\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Wholesailer</label>\\n              <select [(ngModel)]=\\\"wId1\\\" class=\\\"form-control\\\">\\n                <option *ngFor=\\\"let wid of wlist\\\" [value]=\\\"wid.publicKey\\\">{{wid.firstName}}</option>\\n              </select>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Transporter</label>\\n              <select [(ngModel)]=\\\"tId1\\\" class=\\\"form-control\\\">\\n                <option *ngFor=\\\"let wid of tlist\\\" [value]=\\\"wid.userId\\\">{{wid.firstName}}</option>\\n              </select>\\n            </div>\\n          </div>\\n        </div>\\n\\n\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" #completeModal data-dismiss=\\\"modal\\\">Close</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"mTransection(serial.value,wId1,tId1)\\\">Send</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport { AuthService } from 'src/app/service/auth.service';\n// import { Medicine } from '../medicine-create/addmedicine';\nimport { Transection } from './transection';\nimport { Router } from '@angular/router';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\n\n@Component({\n  selector: 'app-medicine-dashboard',\n  templateUrl: './medicine-dashboard.component.html',\n  styleUrls: ['./medicine-dashboard.component.css']\n})\nexport class MedicineDashboardComponent implements OnInit {\n\n\n  selectedWId: string = '';\n  selectedTId: string = '';\n  base;\n  call;\n  serialvalue: any = \" \";\n  wlist: any = [];\n  tlist: any = [];\n  wid1: any = '';\n  tid1: any = '';\n  list: any = [];\n  trans: any = [];\n  users: any = [];\n  transporters: any = [];\n  transection: any = Transection;\n\n  blockchain: any = [];\n  blockchain2: any = [];\n  status: any = [];\n  statusValue: any;\n  itemId: any = [];\n  mypublickey: any;\n  privateKey: any;\n  myrole;\n  userId;\n\n\n\n  @ViewChild('completeModal') completeModal: ElementRef;\n  blockchainUrl: any = this.http.blockchainUrl;;\n  constructor(private http: AuthService, private http1: HttpClient, private router: Router) { }\n\n  ngOnInit() {\n    this.medicinelist();\n    this.medicinetransactions();\n    this.allWholesaler();\n    this.allTransporter();\n    this.mypublickey = localStorage.getItem(\"publicKey\");\n\n    this.privateKey = localStorage.getItem(\"privateKey\");\n    this.myrole = localStorage.getItem(\"role\");\n    this.userId = localStorage.getItem(\"userId\");\n    console.log(\"User Idhhhhhhh\", this.userId);\n\n    console.log(this.myrole);\n  }\n\n  selectChangeHandler1(event: any) {\n    //update the ui\n    this.selectedWId = event.target.value;\n\n  }\n\n  selectChangeHandler2(event: any) {\n    //update the ui\n    this.selectedTId = event.target.value;\n  }\n\n  serialId(serialId) {\n    this.serialvalue = serialId;\n  }\n\n\n\n  medicinelist() {\n    this.myrole = localStorage.getItem(\"role\");\n\n    if (this.myrole == 1) {\n      return this.http.getMedicineList().subscribe((data) => {\n        this.list = data;\n        console.log(\"All Medicine\", this.list);\n      });\n\n    } else {\n      return this.http.getMedicineUserId().subscribe((data) => {\n        console.log(data);\n        this.list = data;\n        console.log(\"user Medicine\", this.list);\n      });\n\n    }\n\n  }\n\n  medicinetransactions() {\n\n    return this.http.getMedicineTransection().subscribe((data) => {\n      this.trans = data;\n\n\n      console.log(\"All Medicine trans\", this.trans);\n    });\n\n\n  }\n\n  deleteMedicine(id) {\n    if (confirm('Are you sure to delete')) {\n      this.http.deleteMedicine(id).subscribe(res => {\n\n        this.medicinelist();\n\n      });\n    }\n  }\n\n  allWholesaler() {\n    return this.http.getallWholesalerUser().subscribe(data => {\n      this.wlist = data;\n      console.log(this.wlist);\n    });\n  }\n\n  allTransporter() {\n    return this.http.getallTransporterUser().subscribe(data => {\n      this.tlist = data;\n      console.log(this.tlist);\n    });\n  }\n\n\n\n\n  mTransection(serial: string, wholesalerId: string, transpoterId: string) {\n    let that = this;\n    console.log(serial, wholesalerId, transpoterId);\n    //Register User on Blockchain ==>> if \"COMMITED\" :: register in db else Mail (ERROR Message)\t\n    this.transection = new Transection(serial, wholesalerId, transpoterId);\n    this.base = this.http.medicineTransection(this.transection);\n    this.call = this.base.subscribe(\n      data => {\n        alert('Request Accepted');\n        let el: HTMLElement = this.completeModal.nativeElement;\n        el.click();\n      });\n    // const Metadata = {\n    //   \"action\": \"sendToWholesaler\",\n    //   \"payloaddata\": {\n    //     \"serialNumber\": serial,\n    //     \"wholesaler\": {\n    //       \"address\": wholesalerId,\n    //       \"comment\": \"In Transaction\"\n    //     },\n    //     \"transporterid\": transpoterId\n    //   },\n    //   \"private\": this.privateKey,\n    //   \"public\": this.mypublickey\n    // }\n\n    // const httpOptions = {\n    //   headers: new HttpHeaders({\n    //     'Content-Type': 'application/json'\n    //   })\n    // };\n\n    // var x = this.http1.post(this.blockchainUrl, Metadata, httpOptions).subscribe(\n    //   (val) => {\n    //     console.log(\"POST call successful value returned in body\", val);\n    //     this.blockchain = val;\n    //     if (that.http.IsJsonString(this.blockchain.response.body)) {\n    //       JSON.parse(this.blockchain.response.body).hasOwnProperty(\"data\");\n    //       JSON.parse(this.blockchain.response.body).hasOwnProperty(\"data\");\n    //       console.log(JSON.parse);\n    //       this.status = JSON.parse(this.blockchain.response.body);\n    //       this.statusValue = this.status.data[0].status;\n    //       this.itemId = this.status.data[0].id;\n    //       if (this.statusValue == 'COMMITTED') {\n\n    //         this.transection = new Transection(serial, wholesalerId, transpoterId);\n    //         this.base = this.http.medicineTransection(this.transection);\n    //         this.call = this.base.subscribe(\n    //           data => {\n    //             alert('Request Accepted');\n    //             let el: HTMLElement = this.completeModal.nativeElement;\n    //             el.click();\n\n    //           });\n    //       }\n    //       else {\n    //         alert('Request Rejected');\n    //         let el: HTMLElement = this.completeModal.nativeElement;\n    //         el.click();\n    //       }\n    //     } else {\n\n    //       that.http1.get(this.http.blockchainUrl+\"/batch_statuses?\" + this.blockchain.id + \"&wait\").subscribe((val) => {\n    //         this.blockchain2 = val\n    //         if (that.http.IsJsonString(this.blockchain2.body)) {\n    //           this.status = JSON.parse(this.blockchain2.body);\n    //           console.log('json value2', this.status.data[0].status);\n    //           this.statusValue = this.status.data[0].status;\n    //           this.itemId = this.status.data[0].id;\n    //           if (this.statusValue == 'COMMITTED') {\n    //             this.base = this.http.medicineTransection(this.transection);\n    //             this.call = this.base.subscribe(\n    //               data => {\n\n    //                 alert('Request Accepted');\n    //                 let el: HTMLElement = this.completeModal.nativeElement;\n    //                 el.click();\n\n    //               });\n    //           }\n    //           else {\n    //             alert('Request Rejected');\n    //             let el: HTMLElement = this.completeModal.nativeElement;\n    //             el.click();\n    //           }\n    //         }\n    //       })\n    //     }\n    //     // }).catch(function (err) {\n    //     //   console.log(err.message);\n    //   });\n  }\n}\n","export class Transection {\n    serial: string;\t\n    wholesalerId:string;\n    transporterId:string;   \n\n\tconstructor(   \n         serial: string,\n        wholesalerId:string,\n        transporterId:string,\n       )\n        {\n            this.serial=serial;\n            this.wholesalerId=wholesalerId;\n            this.transporterId=transporterId;           \n\t\n    \t}\n}\n","module.exports = \".form-control {\\n    /* margin-top: 10px;\\n    margin-left: 8%;\\n    margin-right: 15%;\\n    display: block;\\n    width: 87%; */\\n    background: #f4a018;\\n    color: white;\\n    width: 200px;\\n}\\n\\n#styleStatus{\\n    color: white;\\n    background-color: #4a858b;\\n    border-radius: 8px;\\n    padding-left: 10px;\\n    padding-right: 10px;\\n    padding-top: 4px;\\n    padding-bottom: 4px;\\n    height: 30px;\\n    display: inline-block;\\n    justify-content: center;\\n    align-items: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vbWVkaWNpbmUvbWVkaWNpbmUtZGV0YWlsL21lZGljaW5lLWRldGFpbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0k7Ozs7aUJBSWE7SUFDYixtQkFBbUI7SUFDbkIsWUFBWTtJQUNaLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxZQUFZO0lBQ1oseUJBQXlCO0lBQ3pCLGtCQUFrQjtJQUNsQixrQkFBa0I7SUFDbEIsbUJBQW1CO0lBQ25CLGdCQUFnQjtJQUNoQixtQkFBbUI7SUFDbkIsWUFBWTtJQUNaLHFCQUFxQjtJQUNyQix1QkFBdUI7SUFDdkIsbUJBQW1CO0FBQ3ZCIiwiZmlsZSI6InNyYy9hcHAvYWRtaW4vbWVkaWNpbmUvbWVkaWNpbmUtZGV0YWlsL21lZGljaW5lLWRldGFpbC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZvcm0tY29udHJvbCB7XG4gICAgLyogbWFyZ2luLXRvcDogMTBweDtcbiAgICBtYXJnaW4tbGVmdDogOCU7XG4gICAgbWFyZ2luLXJpZ2h0OiAxNSU7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgd2lkdGg6IDg3JTsgKi9cbiAgICBiYWNrZ3JvdW5kOiAjZjRhMDE4O1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICB3aWR0aDogMjAwcHg7XG59XG5cbiNzdHlsZVN0YXR1c3tcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzRhODU4YjtcbiAgICBib3JkZXItcmFkaXVzOiA4cHg7XG4gICAgcGFkZGluZy1sZWZ0OiAxMHB4O1xuICAgIHBhZGRpbmctcmlnaHQ6IDEwcHg7XG4gICAgcGFkZGluZy10b3A6IDRweDtcbiAgICBwYWRkaW5nLWJvdHRvbTogNHB4O1xuICAgIGhlaWdodDogMzBweDtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn0iXX0= */\"","module.exports = \"<app-dashboard></app-dashboard>\\n<br>\\n<div class=\\\"container\\\">\\n<div class=\\\"row\\\" *ngFor=\\\"let distdata  of list\\\"> \\n  <div class=\\\"col\\\">\\n    <div class=\\\"card custom-card\\\" style=\\\"padding:18px;\\\">\\n      <p style=\\\"text-align:center\\\"><b>Medicine Id: </b> {{list[0].MedicineId}}</p>\\n      <div class=\\\"row\\\">\\n\\t  <div class=\\\"col\\\" ><b>Product Name: </b> {{distdata.serial}}</div>\\n\\t  <div class=\\\"col\\\"><b>Batch N: </b> {{distdata.location}}</div>\\n\\t  <div class=\\\"col\\\"><b>Global Valuated Material N: </b> {{distdata.MedicineCurrentTempurature}}<sup>o</sup>C</div>\\n    </div><br>\\n\\n\\t  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\"><b>Customer's Product Name: </b> {{distdata.medicine}}</div>\\n\\t  <div class=\\\"col\\\"><b>Batch Certificate N: </b> {{distdata.weight}}</div>\\n\\t  <div class=\\\"col\\\"><b>Customer N: </b> {{distdata.customern}}</div>\\n    </div><br>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\"><b>Customer Name: </b> {{distdata.customername}}</div>\\n      <div class=\\\"col\\\"><b>Ship to N: </b> {{distdata.shipton}}</div>  \\n      <div class=\\\"col\\\"><b>Country Code: </b> {{distdata.countrycode}}</div>\\n      </div><br>\\n\\n      <div class=\\\"row\\\">\\n      <div class=\\\"col\\\"><b>Ship to Party: </b> {{distdata.shiptoparty}}</div>\\n      <div class=\\\"col\\\"><b>Pharma Outbound Delivery No: </b> {{distdata.pharmadeliveryno}}</div>\\n      <div class=\\\"col\\\"><b>Sales Order No vs. End Customer: </b> {{distdata.salesorderendcustomer}}</div>\\n      </div><br>\\n\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col\\\"><b>Purchase Order N of End Customer: </b> {{distdata.purchaseorderendcustomer}}</div>\\n        <div class=\\\"col\\\"><b>Shipped Quantity: </b> {{distdata.shippedquantity}}</div>\\n        <div class=\\\"col\\\"><b>Unit: </b> {{distdata.unit}}</div>\\n        </div><br>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col col-4\\\"></div>\\n          <div class=\\\"col col-5\\\"><b>Additional Logistic Information</b></div>\\n          <div class=\\\"col col-3\\\"></div>\\n        </div><br>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\"><b>Product Name: </b> {{distdata.aproductname}}</div>\\n          <div class=\\\"col\\\"><b>Dosage Form: </b> {{distdata.dosageform}}</div>\\n          <div class=\\\"col\\\"><b>Package type: </b> {{distdata.packagetype}}</div>\\n          </div><br>\\n\\n\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col\\\"><b>Package Size: </b> {{distdata.packagesize}}</div>\\n              <div class=\\\"col\\\"><b>Global Material No.: </b> {{distdata.globelmaterialno}}</div>\\n              <div class=\\\"col\\\"><b>Batch N: </b> {{distdata.batchn}}</div>\\n              </div><br>\\n\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col\\\"><b>Date of Manufacturing: </b> {{distdata.dateofmanufecture}}</div>\\n                <div class=\\\"col\\\"><b>Release Date: </b> {{distdata.releasedate}}</div>\\n                <div class=\\\"col\\\"><b> Expiry Date:</b>{{distdata.expirydate}}</div>\\n                </div><br>\\n\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col\\\"><b>Production Qty: </b> {{distdata.productionqty}}</div>\\n                  <div class=\\\"col\\\"><b> </b> </div>\\n                  <div class=\\\"col\\\"><b> </b></div>\\n                  </div><br>\\n\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col col-4\\\"></div>\\n                  <div class=\\\"col col-5\\\"><b>Packaging Information</b></div>\\n                  <div class=\\\"col col-3\\\"></div>\\n                </div><br>\\n\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col\\\"><b>Product Name: </b> {{distdata.pproductname}}</div>\\n                  <div class=\\\"col\\\"><b>Global Material No.: </b> {{distdata.pglobelmaterialno}}</div>\\n                  <div class=\\\"col\\\"><b>Local Material No: </b> {{distdata.plocalmaterialno}}</div>\\n                  </div><br>\\n\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col\\\"><b>Packaging Site: </b> {{distdata.apackagingsite}}</div>\\n                    <div class=\\\"col\\\"><b>Manufacturing License: </b> {{distdata.manufacturinglicense}}</div>\\n                    <div class=\\\"col\\\"><b>GMV Certificate No: </b> {{distdata.gmvcertificateno}}</div>\\n                    </div><br>\\n\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col col-4\\\"></div>\\n                      <div class=\\\"col col-5\\\"><b>For Tests, Requirments,Results and Conclusion refer to the following Certificate(s)</b></div>\\n                      <div class=\\\"col col-3\\\"></div>\\n                    </div><br>\\n\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col\\\"><b>Certificate No: </b> {{distdata.certificateno}}</div>\\n                      <div class=\\\"col\\\"><b>Product Name: </b> {{distdata.productn}}</div>\\n                      <div class=\\\"col\\\"><b>Global Material N: </b> {{distdata.globalmaterialn}}</div>\\n                      </div><br>\\n\\n                      <div class=\\\"row\\\">\\n                        <div class=\\\"col\\\"><b>Local Material N: </b> {{distdata.localmaterialn}}</div>\\n                        <div class=\\\"col\\\"><b>Release Date: </b> {{distdata.releasedate}}</div>\\n                        <div class=\\\"col\\\"><b>Batch N: </b> {{distdata.abatchn}}</div>\\n                        </div><br>\\n\\n                        <div class=\\\"row\\\">\\n                          <div class=\\\"col\\\"><b>Manufacturing Site: </b> {{distdata.amanufacturingsite}}</div>\\n                          <div class=\\\"col\\\"><b>Manufacturing License: </b> {{distdata.amanufacturinglicense}}</div>\\n                          <div class=\\\"col\\\"><b> </b></div>\\n                          </div><br>\\n    <div class=\\\"row  mb-3\\\">\\n      <div class=\\\"col\\\"  style=\\\"margin-left:25%; text-align: left\\\">\\n        <b style=\\\"color:blue;text-align: center\\\">Medicine Owner </b>\\n        <div id=\\\"styleStatus\\\">{{distdata.status}}</div>\\n      </div>\\n    </div>\\n\\t  <div class=\\\"row\\\">\\n\\t\\t<div class=\\\"col\\\" style=\\\"text-align:center;\\\">\\n    <button class=\\\"form-control btn-defult m-auto\\\" *ngIf=\\\"myrole>1\\\" (click)=\\\"editMedicine(distdata._id)\\\" data-toggle=\\\"modal\\\" data-target=\\\"#exampleModalCenter\\\"> <b>Update Status</b> </button>\\n    \\n    \\n\\t\\t</div>\\n\\t\\t</div>\\n    </div>\\n  </div>  \\n  </div>\\n  \\n  <!-- part 2 for medicine status -->\\n  <div class=\\\"row\\\" *ngFor=\\\"let distdata  of list2\\\"> \\n  <div class=\\\"col\\\">\\n    <div class=\\\"card\\\" style=\\\"padding:18px;\\\">\\n    <!--  <p style=\\\"text-align:center\\\"><b>Medicne Id:</b> {{distdata.MedicineId}}</p> -->\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\" style=\\\"margin-left:8%; text-align: left\\\">\\n        <b>Date:</b>{{distdata.time | date:'dd/MM/yyyy'}}\\n      </div>\\n      <div class=\\\"col\\\"></div>\\n      <div class=\\\"col\\\" >\\n        <b>Time:</b>{{distdata.time | date:'hh:mm:ss'}}\\n      </div>\\n    </div>\\n      <div class=\\\"row\\\">\\n\\t  <div class=\\\"col\\\"  style=\\\"margin-left:8%;\\\"><b>Serial No: </b> {{distdata.serial}} </div>\\n\\t  <div class=\\\"col\\\"><b>Location: </b> {{distdata.location}}</div>\\n\\t  <div class=\\\"col\\\"><b>Temperature: </b> {{distdata.barcode}}<sup>o</sup>C</div>\\n\\t  </div>\\n\\t  <div class=\\\"row\\\">\\n\\t  <div class=\\\"col\\\"   style=\\\"margin-left:8%;\\\"><b>Weight: </b> {{distdata.weight}}</div>\\n\\t  <div class=\\\"col\\\"><b>Manufacture Date: </b> {{distdata.Mdate}}</div>\\n\\t  <div class=\\\"col\\\"><b>Expiry Date: </b> {{distdata.Edate}}</div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\" style=\\\"margin-left:8%; text-align: left;\\\">\\n        <b>Medicine Status: </b>\\n        <span id='styleStatus'>{{distdata.status}}</span>\\n      </div>\\n    </div>\\t  \\n    </div>\\n  </div>  \\n  </div>\\n  \\n  \\n  \\n  \\n  \\n  \\n  </div>\\n  \\n  \\n  <!-- Modal -->\\n<div class=\\\"modal fade\\\" id=\\\"exampleModalCenter\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalCenterTitle\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLongTitle\\\">Status Update</h5>\\n        \\n      </div>\\n      <form [formGroup]=\\\"registerForm1\\\" (ngSubmit)=\\\"medicineUpdate(editlist.serial,editlist.medicine,temperature.value,location.value,editlist.weight,editlist.Mdate,editlist.Edate,editlist.MedicineId,editlist.role,now)\\\">\\n      <div class=\\\"modal-body\\\">\\n\\t  \\n\\t        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n              <label style=\\\"margin-left: 35px\\\">Temperature</label>\\n              <input #temperature  formControlName=\\\"temperature011\\\" type=\\\"number\\\" class=\\\"form-control required\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f1.temperature011.errors }\\\" placeholder=\\\" Enter Current Temperature\\\" maxlength=\\\"5\\\">\\n              <div *ngIf=\\\"submitted && f1.temperature011.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"f1.temperature011.errors.required\\\" style=\\\"margin-left: 35px\\\">Temperature required </div>\\n              </div>\\n            </div></div>           \\n            </div>   \\n         <div class=\\\"row\\\">          \\n              <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n                <label style=\\\"margin-left: 35px\\\">Location</label>\\n                <input  type=\\\"text\\\" #location formControlName=\\\"location011\\\" class=\\\"form-control required\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f1.location011.errors }\\\" placeholder=\\\"Enter Current Location\\\" maxlength=\\\"30\\\">\\n                <div *ngIf=\\\"submitted && f1.location011.errors\\\" class=\\\"invalid-feedback\\\">\\n                    <div *ngIf=\\\"f1.location011.errors.required\\\" style=\\\"margin-left: 35px\\\">Location required </div>\\n                  </div>\\n                \\n              </div></div>\\n          </div>       \\t\\n\\n          \\n       </div>\\n        <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" #completeModal  data-dismiss=\\\"modal\\\">Close</button>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save changes</button>\\n         </div>\\n        </form>\\n      \\n    </div>\\n  </div>\\n</div>\\n\\n\\n\\n  \\n  \\n  \"","import { Component, OnInit,ElementRef,ViewChild  } from '@angular/core';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { Router } from '@angular/router';\nimport { Medicine2 } from './../medicine-create/addmedicine2';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-medicine-detail',\n  templateUrl: './medicine-detail.component.html',\n  styleUrls: ['./medicine-detail.component.css']\n})\nexport class MedicineDetailComponent implements OnInit {\n\n\n  registerForm1: FormGroup;\n  submitted = false;\n\n  public now: any = new Date();\n\n  base;\n  call;\n  serialvalue;\n  serialNo: any;\n  mStatus: any = Medicine2;\n  updateStatus;\n  list: any = [];\n  list2: any = [];\n  editlist: any = [];\n  blockchain: any = [];\n  blockchain2: any = [];\n  status: any = [];\n  myrole: any = [];\n  statusValue: any;\n  itemId: any = [];\n  mypublickey: any;\n  privateKey: any;\n  myrole1;\n  firstname;\n  lastname;\n\n  @ViewChild('completeModal')completeModal: ElementRef;\n  blockchainUrl: any = this.http.blockchainUrl;\n  constructor(private route: ActivatedRoute, private router: Router, private http: AuthService, private http1: HttpClient, private formBuilder: FormBuilder) { }\n\n\n  ngOnInit() {\n    this.myrole = localStorage.getItem(\"role\");\n    this.myrole1 = localStorage.getItem(\"email\");\n    console.log(\"Email\", this.myrole1);\n    this.firstname=localStorage.getItem(\"firstName\");\n    this.lastname=localStorage.getItem(\"lastName\");\n    console.log(\"User name\", this.firstname,this.lastname);\n\n\n    console.log(\"User Role \" +this.myrole);\n\n    switch (this.myrole) {\n\n      case \"1\": {\n        this.updateStatus = \"User is Admin\";\n        break;\n      }\n\n      case \"2\": {\n        this.updateStatus = \"Status Updated by\"+ \" \" + this.firstname + \" \" + this.lastname + \" \" + \"[Manufacturer]\";\n        break;\n      }\n      case \"3\": {\n        this.updateStatus = \"Status Updated by\"+ \" \" + this.firstname + \" \" + this.lastname + \" \" + \"[Wholesaler]\";\n        break;\n      }\n      case \"4\": {\n        this.updateStatus = \"Status Updated by\"+ \" \" + this.firstname + \" \" + this.lastname + \" \" + \"[Distributor]\";\n        break;\n      }\n      case \"5\": {\n        this.updateStatus = \"Status Updated by\"+ \" \" + this.firstname + \" \" + this.lastname + \" \" + \"[Pharma]\";\n        break;\n      }\n      case \"7\": {\n        this.updateStatus = \"Status Updated by\"+ \" \" + this.firstname + \" \" + this.lastname + \" \" + \"[Transporter]\";\n        break;\n      }\n      default: {\n       console.log(\"User role not define\");\n        break;\n      }\n    }\n    \n    this.serialNo = this.route.snapshot.params['id'];\n    this.medicineStatus(this.serialNo);\n    this.medicineStatus2(this.serialNo);\n  \n    this.mypublickey = localStorage.getItem(\"publicKey\");\n    this.privateKey = localStorage.getItem(\"privateKey\");\n    \n\n    this.registerForm1 = this.formBuilder.group({\n      temperature011: ['', Validators.required],\n      location011: ['', Validators.required],\n     \n    });\n  }\n\n\n  medicineStatus(id) {\n    return this.http.getMedicineStatus(id).subscribe((data) =>{  \n      this.list = data;\n      console.log('list data',this.list);\n    })\n  }\n\n  medicineStatus2(id) {\n    return this.http.getMedicineStatus2(id).subscribe((data) => {\n      this.list2 = data;     \n    })\n  }\n\n  editMedicine(id) {\n    this.http.editMedicineStatus(id).subscribe(res => {\n      this.editlist = res;\n    \n      \n    });\n  }\n\n  get f1() { return this.registerForm1.controls; }\n\n  medicineUpdate(serial: string, me: string, br: string, location: string, we: string, \n    md: string, ed: string, mid: string, ro: string, time: string, mypublickey: string, updateStatus: string) {\n\n      console.log(\"Data\",this.myrole);\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.registerForm1.invalid) {\n      return;\n    }\n\n    let that = this;\n    this.mStatus = new Medicine2(serial, me, br, location, we, md, ed, mid, ro, this.now, this.mypublickey, this.updateStatus);\n    this.base = this.http.createmedicine2(this.mStatus);\n            this.call = this.base.subscribe(data => {\n              alert('Status Updated');\n              let el: HTMLElement = this.completeModal.nativeElement;\n              el.click(); \n              this.medicineStatus2(this.serialNo);\n            });\n    //Register User on Blockchain ==>> if \"COMMITED\" :: register in db else Mail (ERROR Message)\t\n\n    // const Metadata = {\n    //   \"action\": \"medicineStatusUpdate\",\n    //   \"payloaddata\": {\n    //     \"serialNumber\": serial,\n       \n        \n\n    //     \"physicalState\": {\n    //       \"timestamp\": this.now,\n    //       \"location\": {\n    //         \"type\": 1,\n    //         \"body\": {\n    //           \"address\": location\n    //         }\n    //       },\n    //       \"temprature\": 12,\n          \n\n    //     },\n    //     \"userRole\" :this.myrole,\n    //   },\n    //   \"private\": this.privateKey,\n    //   \"public\": this.mypublickey\n    // }\n\n    // const httpOptions = {\n    //   headers: new HttpHeaders({\n    //     'Content-Type': 'application/json'\n    //   })\n    // };\n\n    // var x = this.http1.post(this.blockchainUrl, Metadata, httpOptions).subscribe(\n    //   (val) => {\n    //     console.log(\"POST call successful value returned in body\", val);\n    //     this.blockchain = val;\n    //     if (that.http.IsJsonString(this.blockchain.response.body)) {\n    //       JSON.parse(this.blockchain.response.body).hasOwnProperty(\"data\");\n\n    //       this.status = JSON.parse(this.blockchain.response.body);\n    //       this.statusValue = this.status.data[0].status;\n    //       this.itemId = this.status.data[0].id;\n    //       if (this.statusValue == 'COMMITTED') {\n\n    //         this.mStatus = new Medicine2(serial, me, br, location, we, md, ed, mid, ro, this.now, this.mypublickey, this.updateStatus);\n    //         this.base = this.http.createmedicine2(this.mStatus);\n    //         this.call = this.base.subscribe(data => {\n    //           alert('Status Updated');\n    //           let el: HTMLElement = this.completeModal.nativeElement;\n    //           el.click(); \n    //           this.medicineStatus2(this.serialNo);\n    //         });\n    //       }\n    //       else {\n    //         alert('Request Rejected');\n    //         let el: HTMLElement = this.completeModal.nativeElement;\n    //          el.click(); \n    //       }\n    //     } else {\n\n    //       that.http1.get(this.http.batchUrl +\"/batch_statuses?\" + this.blockchain.id + \"&wait\").subscribe((val) => {\n    //         this.blockchain2 = val\n    //         if (that.http.IsJsonString(this.blockchain2.body)) {\n    //           this.status = JSON.parse(this.blockchain2.body);              \n    //           this.statusValue = this.status.data[0].status;\n    //           this.itemId = this.status.data[0].id;\n    //           if (this.statusValue == 'COMMITTED') {\n    //             this.mStatus = new Medicine2(serial, me, br, location, we, md, ed, mid, ro, this.now, this.mypublickey, this.updateStatus);\n    //             this.base = this.http.createmedicine2(this.mStatus);\n    //             this.call = this.base.subscribe(data => {\n    //               alert('Status Updated');\n    //               let el: HTMLElement = this.completeModal.nativeElement;\n    //               el.click(); \n    //               this.medicineStatus2(this.serialNo);\n    //             });\n    //           }\n    //           else {\n    //             alert('Request Rejected');\n    //             let el: HTMLElement = this.completeModal.nativeElement;\n    //             el.click(); \n    //           }\n    //         }\n    //       })\n    //     }        \n    //   });\n  }\n}\n","module.exports = \".form-control {\\n    margin-top: 10px;\\n    margin-left: 8%;\\n    margin-right: 15%;\\n    display: block;\\n    width: 87%;\\n}\\n\\ntable {\\n    width: 100%;\\n    background-color: white;   \\n  }\\n\\ntd {\\n  background: none;\\n  border-bottom-color: #b5b3b3;\\n  border-color: #454d55 !important;\\n}\\n\\nth{\\n  border: none !important;\\n  background-color: #3d6d79; \\n  color:White;\\n  font-family: Muli,Helvetica Neue,Arial,sans-serif;\\n  font-weight: 600;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vbWVkaWNpbmUvbWVkaWNpbmUtZGV0YWlscy1kYXNoYm9hcmQvbWVkaWNpbmUtZGV0YWlscy1kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdCQUFnQjtJQUNoQixlQUFlO0lBQ2YsaUJBQWlCO0lBQ2pCLGNBQWM7SUFDZCxVQUFVO0FBQ2Q7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsdUJBQXVCO0VBQ3pCOztBQUdGO0VBQ0UsZ0JBQWdCO0VBQ2hCLDRCQUE0QjtFQUM1QixnQ0FBZ0M7QUFDbEM7O0FBR0E7RUFDRSx1QkFBdUI7RUFDdkIseUJBQXlCO0VBQ3pCLFdBQVc7RUFDWCxpREFBaUQ7RUFDakQsZ0JBQWdCO0FBQ2xCIiwiZmlsZSI6InNyYy9hcHAvYWRtaW4vbWVkaWNpbmUvbWVkaWNpbmUtZGV0YWlscy1kYXNoYm9hcmQvbWVkaWNpbmUtZGV0YWlscy1kYXNoYm9hcmQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mb3JtLWNvbnRyb2wge1xuICAgIG1hcmdpbi10b3A6IDEwcHg7XG4gICAgbWFyZ2luLWxlZnQ6IDglO1xuICAgIG1hcmdpbi1yaWdodDogMTUlO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHdpZHRoOiA4NyU7XG59XG5cbnRhYmxlIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsgICBcbiAgfSBcblxuXG50ZCB7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG4gIGJvcmRlci1ib3R0b20tY29sb3I6ICNiNWIzYjM7XG4gIGJvcmRlci1jb2xvcjogIzQ1NGQ1NSAhaW1wb3J0YW50O1xufVxuXG4gIFxudGh7XG4gIGJvcmRlcjogbm9uZSAhaW1wb3J0YW50O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjM2Q2ZDc5OyBcbiAgY29sb3I6V2hpdGU7XG4gIGZvbnQtZmFtaWx5OiBNdWxpLEhlbHZldGljYSBOZXVlLEFyaWFsLHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG59Il19 */\"","module.exports = \"<app-dashboard></app-dashboard>\\n<br>\\n<div class=\\\"container\\\">\\n<div class=\\\"row\\\" *ngFor=\\\"let distdata  of list\\\"> \\n  <div class=\\\"col\\\">\\n    <div class=\\\"table-responsive\\\">\\n      <table class=\\\"table table-striped table-hover\\\">\\n        <tr>\\n          <th>{{serial}}</th>\\n        </tr>\\n        <tr>\\n          <td>\\n            <p><b>Medicine Id: </b><span>{{list[0].MedicineId}}</span></p>\\n            <p><b>Serial No: </b> {{distdata.serial}}</p>\\n            <p><b>Location: </b> {{distdata.location}}</p>\\n            <p><b>Temperature: </b> {{distdata.barcode}}<sup>o</sup>C</p>\\n            <p><th style=\\\"border-radius: 5px;\\\">Medicine Description</th></p>\\n            <p><b>Medicine Name: </b> {{distdata.medicine}}</p>\\n            <p><b>Weight(Kg): </b> {{distdata.weight}}</p>\\n            <p><b>Manufacture: </b> {{distdata.Mdate}}</p>\\n            <p><b>Manufacture: </b> {{distdata.Mdate}}</p>\\n            <p><b>Expiry: </b> {{distdata.Edate}}</p>\\n          </td>\\n        </tr>\\n        <tr>\\n          <th style=\\\"padding: 5px;\\\">Medicine Owner :: <span>{{distdata.status}}</span></th>\\n        </tr>\\n      </table>\\n    </div>\\n   \\n   \\n   \\n    <!-- <div class=\\\"card\\\" style=\\\"padding:18px; border: 1px solid;\\\">\\n\\t\\t</div> -->\\n    </div>\\n  </div>  \\n  </div>\\n  \\n\\n <!-- <p style=\\\"text-align:center\\\"><b>Medicine Id: </b> {{list[0].MedicineId}}</p>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\"  style=\\\"margin-left:8%;\\\"><b>Serial No: </b> {{distdata.serial}}</div>\\n      <div class=\\\"col\\\"><b>Location: </b> {{distdata.location}}</div>\\n      <div class=\\\"col\\\"><b>Temperature: </b> {{distdata.barcode}}<sup>o</sup>C</div>\\n    </div><br>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col col-4\\\"></div>\\n        <div class=\\\"col col-5\\\"><b>Medicine Description</b></div>\\n        <div class=\\\"col col-3\\\"></div>\\n      </div><br>\\n\\t  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\"><b>Medicine Name: </b> {{distdata.medicine}}</div>\\n\\t  <div class=\\\"col\\\"><b>Weight(Kg): </b> {{distdata.weight}}</div>\\n\\t  <div class=\\\"col\\\"><b>Manufacture: </b> {{distdata.Mdate}}</div>\\n\\t  <div class=\\\"col\\\"><b>Expiry: </b> {{distdata.Edate}}</div>\\n    </div><br>\\n \\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\"  style=\\\"margin-left:25%; text-align: left\\\">\\n        <b style=\\\"color:blue\\\">Medicine Owner </b>\\n        <span id=\\\"styleStatus\\\">{{distdata.status}}</span>\\n      </div>\\n    </div> \\n\\t  <div class=\\\"row\\\">\\n\\t\\t<div class=\\\"col\\\" style=\\\"text-align:center;\\\">\\n    </div> -->\\n    \\n\\n<!-- ===================================================================================================== -->\\n\\n   <!-- <button class=\\\"form-control btn-defult\\\" *ngIf=\\\"myrole>1\\\" (click)=\\\"editMedicine(distdata._id)\\\" data-toggle=\\\"modal\\\" data-target=\\\"#exampleModalCenter\\\"> <b>Update Status</b> </button> -->\\n  <!-- part 2 for medicine status -->\\n  <!-- <div class=\\\"row\\\" *ngFor=\\\"let distdata  of list2\\\"> \\n  <div class=\\\"col\\\">\\n    <div class=\\\"card\\\" style=\\\"padding:18px;\\\">\\n     <p style=\\\"text-align:center\\\"><b>Medicne Id:</b> {{distdata.MedicineId}}</p> \\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\" style=\\\"margin-left:8%; text-align: left\\\">\\n        <b>Date:</b>{{distdata.time | date:'dd/MM/yyyy'}}\\n      </div>\\n      <div class=\\\"col\\\"></div>\\n      <div class=\\\"col\\\" >\\n        <b>Time:</b>{{distdata.time | date:'hh:mm:ss'}}\\n      </div>\\n    </div>\\n      <div class=\\\"row\\\">\\n\\t  <div class=\\\"col\\\"  style=\\\"margin-left:8%;\\\"><b>Serial No: </b> {{distdata.serial}} </div>\\n\\t  <div class=\\\"col\\\"><b>Location: </b> {{distdata.location}}</div>\\n\\t  <div class=\\\"col\\\"><b>Temperature: </b> {{distdata.barcode}}<sup>o</sup>C</div>\\n\\t  </div>\\n\\t  <div class=\\\"row\\\">\\n\\t  <div class=\\\"col\\\"   style=\\\"margin-left:8%;\\\"><b>Weight: </b> {{distdata.weight}}</div>\\n\\t  <div class=\\\"col\\\"><b>Manufacture: </b> {{distdata.Mdate}}</div>\\n\\t  <div class=\\\"col\\\"><b>Expiry: </b> {{distdata.Edate}}</div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\" style=\\\"margin-left:8%; text-align: left;\\\">\\n        <b>Medicine Status: </b>\\n        <span id='styleStatus'>{{distdata.status}}</span>\\n      </div>\\n    </div>\\t   \\n    </div>\\n  </div>  \\n  </div>\\n  \\n  \\n  \\n  \\n  \\n  \\n  </div>\\n   -->\\n  \\n  <!-- Modal -->\\n<div class=\\\"modal fade\\\" id=\\\"exampleModalCenter\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalCenterTitle\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLongTitle\\\">Status Update</h5>\\n        \\n      </div>\\n      <form [formGroup]=\\\"registerForm1\\\" (ngSubmit)=\\\"medicineUpdate(editlist.serial,editlist.medicine,temperature.value,location.value,editlist.weight,editlist.Mdate,editlist.Edate,editlist.MedicineId,editlist.role,now)\\\">\\n      <div class=\\\"modal-body\\\">\\n\\t  \\n\\t        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n              <label style=\\\"margin-left: 35px\\\">Temperature</label>\\n              <input #temperature  formControlName=\\\"temperature011\\\" type=\\\"number\\\" class=\\\"form-control required\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f1.temperature011.errors }\\\" placeholder=\\\" Enter Current Temperature\\\" maxlength=\\\"5\\\">\\n              <div *ngIf=\\\"submitted && f1.temperature011.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"f1.temperature011.errors.required\\\" style=\\\"margin-left: 35px\\\">Temperature required </div>\\n              </div>\\n            </div></div>           \\n            </div>   \\n         <div class=\\\"row\\\">          \\n              <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n                <label style=\\\"margin-left: 35px\\\">Location</label>\\n                <input  type=\\\"text\\\" #location formControlName=\\\"location011\\\" class=\\\"form-control required\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f1.location011.errors }\\\" placeholder=\\\"Enter Current Location\\\" maxlength=\\\"30\\\">\\n                <div *ngIf=\\\"submitted && f1.location011.errors\\\" class=\\\"invalid-feedback\\\">\\n                    <div *ngIf=\\\"f1.location011.errors.required\\\" style=\\\"margin-left: 35px\\\">Location required </div>\\n                  </div>\\n                \\n              </div></div>\\n          </div>       \\t\\n\\n          \\n       </div>\\n        <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" #completeModal  data-dismiss=\\\"modal\\\">Close</button>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save changes</button>\\n         </div>\\n        </form>\\n      \\n    </div>\\n  </div>\\n</div>\\n\\n\\n\\n  \\n  \\n  \"","import { Component, OnInit,ElementRef,ViewChild  } from '@angular/core';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { Router } from '@angular/router';\nimport { Medicine2 } from './../medicine-create/addmedicine2';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-medicine-details-dashboard',\n  templateUrl: './medicine-details-dashboard.component.html',\n  styleUrls: ['./medicine-details-dashboard.component.css']\n})\nexport class MedicineDetailsDashboardComponent implements OnInit {\n\n  registerForm1: FormGroup;\n  submitted = false;\n\n  public now: any = new Date();\n\n  base;\n  call;\n  serialvalue;\n  serial:any;\n  serialNo: any;\n  mStatus: any = Medicine2;\n  updateStatus;\n  list: any = [];\n  list2: any = [];\n  editlist: any = [];\n  blockchain: any = [];\n  blockchain2: any = [];\n  status: any = [];\n  myrole: any = [];\n  statusValue: any;\n  itemId: any = [];\n  mypublickey: any;\n  privateKey: any;\n  myrole1;\n  firstname;\n  lastname;\n  a;\n\n  @ViewChild('completeModal')completeModal: ElementRef;\n  blockchainUrl: any = this.http.blockchainUrl;\n  constructor(private route: ActivatedRoute, private router: Router, private http: AuthService, private http1: HttpClient, private formBuilder: FormBuilder) { }\n\n\n  ngOnInit() {\n    this.route.params.subscribe(param => {\n      this.serial = param.id;\n      \n    })\n    this.myrole = localStorage.getItem(\"role\");\n    this.myrole1 = localStorage.getItem(\"email\");\n    console.log(\"Email\", this.myrole1);\n    this.firstname=localStorage.getItem(\"firstName\");\n    this.lastname=localStorage.getItem(\"lastName\");\n    console.log(\"User name\", this.firstname,this.lastname);\n\n\n    console.log(\"User Role \" +this.myrole);\n\n    switch (this.myrole) {\n\n      case \"1\": {\n        this.updateStatus = \"User is Admin\";\n        break;\n      }\n\n      case \"2\": {\n        this.updateStatus = \"Status Updated by\"+ \" \" + this.firstname + \" \" + this.lastname + \" \" + \"[Manufacturer]\";\n        break;\n      }\n      case \"3\": {\n        this.updateStatus = \"Status Updated by\"+ \" \" + this.firstname + \" \" + this.lastname + \" \" + \"[Wholesaler]\";\n        break;\n      }\n      case \"4\": {\n        this.updateStatus = \"Status Updated by\"+ \" \" + this.firstname + \" \" + this.lastname + \" \" + \"[Distributor]\";\n        break;\n      }\n      case \"5\": {\n        this.updateStatus = \"Status Updated by\"+ \" \" + this.firstname + \" \" + this.lastname + \" \" + \"[Pharma]\";\n        break;\n      }\n      case \"7\": {\n        this.updateStatus = \"Status Updated by\"+ \" \" + this.firstname + \" \" + this.lastname + \" \" + \"[Transporter]\";\n        break;\n      }\n      default: {\n       console.log(\"User role not define\");\n        break;\n      }\n    }\n    \n    this.serialNo = this.route.snapshot.params['id'];\n    this.medicineStatus(this.serialNo);\n    this.medicineStatus2(this.serialNo);\n  \n    this.mypublickey = localStorage.getItem(\"publicKey\");\n    this.privateKey = localStorage.getItem(\"privateKey\");\n    \n\n    this.registerForm1 = this.formBuilder.group({\n      temperature011: ['', Validators.required],\n      location011: ['', Validators.required],\n     \n    });\n  }\n\n\n  medicineStatus(id) {\n    return this.http.getMedicineStatus(id).subscribe((data) =>{  \n      this.list = data;\n      console.log(this.list);\n    })\n  }\n\n  medicineStatus2(id) {\n    return this.http.getMedicineStatus2(id).subscribe((data) => {\n      this.list2 = data;     \n    })\n  }\n\n  editMedicine(id) {\n    this.http.editMedicineStatus(id).subscribe(res => {\n      this.editlist = res;\n    \n      \n    });\n  }\n\n  get f1() { return this.registerForm1.controls; }\n\n  medicineUpdate(serial: string, me: string, br: string, location: string, we: string, \n    md: string, ed: string, mid: string, ro: string, time: string, mypublickey: string, updateStatus: string) {\n\n      console.log(\"Data\",this.myrole);\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.registerForm1.invalid) {\n      return;\n    }\n\n    let that = this;\n    this.mStatus = new Medicine2(serial, me, br, location, we, md, ed, mid, ro, this.now, this.mypublickey, this.updateStatus);\n   \n    this.base = this.http.createmedicine2(this.mStatus);\n            this.call = this.base.subscribe(data => {\n              alert('Status Updated');\n              let el: HTMLElement = this.completeModal.nativeElement;\n              el.click(); \n              this.medicineStatus2(this.serialNo);\n            });\n    //Register User on Blockchain ==>> if \"COMMITED\" :: register in db else Mail (ERROR Message)\t\n\n    // const Metadata = {\n    //   \"action\": \"medicineStatusUpdate\",\n    //   \"payloaddata\": {\n    //     \"serialNumber\": serial,\n       \n        \n\n    //     \"physicalState\": {\n    //       \"timestamp\": this.now,\n    //       \"location\": {\n    //         \"type\": 1,\n    //         \"body\": {\n    //           \"address\": location\n    //         }\n    //       },\n    //       \"temprature\": 12,\n          \n\n    //     },\n    //     \"userRole\" :this.myrole,\n    //   },\n    //   \"private\": this.privateKey,\n    //   \"public\": this.mypublickey\n    // }\n\n    // const httpOptions = {\n    //   headers: new HttpHeaders({\n    //     'Content-Type': 'application/json'\n    //   })\n    // };\n\n    // var x = this.http1.post(this.blockchainUrl, Metadata, httpOptions).subscribe(\n    //   (val) => {\n    //     console.log(\"POST call successful value returned in body\", val);\n    //     this.blockchain = val;\n    //     if (that.http.IsJsonString(this.blockchain.response.body)) {\n    //       JSON.parse(this.blockchain.response.body).hasOwnProperty(\"data\");\n\n    //       this.status = JSON.parse(this.blockchain.response.body);\n    //       this.statusValue = this.status.data[0].status;\n    //       this.itemId = this.status.data[0].id;\n    //       if (this.statusValue == 'COMMITTED') {\n\n    //         this.mStatus = new Medicine2(serial, me, br, location, we, md, ed, mid, ro, this.now, this.mypublickey, this.updateStatus);\n    //         this.base = this.http.createmedicine2(this.mStatus);\n    //         this.call = this.base.subscribe(data => {\n    //           alert('Status Updated');\n    //           let el: HTMLElement = this.completeModal.nativeElement;\n    //           el.click(); \n    //           this.medicineStatus2(this.serialNo);\n    //         });\n    //       }\n    //       else {\n    //         alert('Request Rejected');\n    //         let el: HTMLElement = this.completeModal.nativeElement;\n    //          el.click(); \n    //       }\n    //     } else {\n\n    //       that.http1.get(this.http.batchUrl +\"/batch_statuses?\" + this.blockchain.id + \"&wait\").subscribe((val) => {\n    //         this.blockchain2 = val\n    //         if (that.http.IsJsonString(this.blockchain2.body)) {\n    //           this.status = JSON.parse(this.blockchain2.body);              \n    //           this.statusValue = this.status.data[0].status;\n    //           this.itemId = this.status.data[0].id;\n    //           if (this.statusValue == 'COMMITTED') {\n    //             this.mStatus = new Medicine2(serial, me, br, location, we, md, ed, mid, ro, this.now, this.mypublickey, this.updateStatus);\n    //             this.base = this.http.createmedicine2(this.mStatus);\n    //             this.call = this.base.subscribe(data => {\n    //               alert('Status Updated');\n    //               let el: HTMLElement = this.completeModal.nativeElement;\n    //               el.click(); \n    //               this.medicineStatus2(this.serialNo);\n    //             });\n    //           }\n    //           else {\n    //             alert('Request Rejected');\n    //             let el: HTMLElement = this.completeModal.nativeElement;\n    //             el.click(); \n    //           }\n    //         }\n    //       })\n    //     }        \n    //   });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL21lZGljaW5lL21lZGljaW5lLWVkaXQvbWVkaWNpbmUtZWRpdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\n  medicine-edit works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-medicine-edit',\n  templateUrl: './medicine-edit.component.html',\n  styleUrls: ['./medicine-edit.component.css']\n})\nexport class MedicineEditComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"table {\\n    width: 100%;\\n    background-color: white;   \\n  }\\n\\n \\n\\n\\n  td {\\n    background: none;\\n    border-bottom-color: #b5b3b3;\\n    border-color: #454d55 !important;\\n  }\\n\\n \\n\\n\\n  th{\\n    border: none !important;\\n    background-color: #3d6d79; \\n    color:White;\\n    font-family: Muli,Helvetica Neue,Arial,sans-serif;\\n    font-weight: 600;\\n  }\\n\\n \\n\\n\\n  button:hover{\\n    border: 1px #454d55;\\n    \\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vbWVkaWNpbmUvbWVkaWNpbmUtbGlzdC9tZWRpY2luZS1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0lBQ1gsdUJBQXVCO0VBQ3pCOzs7OztFQUtBO0lBQ0UsZ0JBQWdCO0lBQ2hCLDRCQUE0QjtJQUM1QixnQ0FBZ0M7RUFDbEM7Ozs7O0VBR0E7SUFDRSx1QkFBdUI7SUFDdkIseUJBQXlCO0lBQ3pCLFdBQVc7SUFDWCxpREFBaUQ7SUFDakQsZ0JBQWdCO0VBQ2xCOzs7OztFQUVBO0lBQ0UsbUJBQW1COztFQUVyQiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL21lZGljaW5lL21lZGljaW5lLWxpc3QvbWVkaWNpbmUtbGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlOyAgIFxuICB9XG5cbiBcblxuXG4gIHRkIHtcbiAgICBiYWNrZ3JvdW5kOiBub25lO1xuICAgIGJvcmRlci1ib3R0b20tY29sb3I6ICNiNWIzYjM7XG4gICAgYm9yZGVyLWNvbG9yOiAjNDU0ZDU1ICFpbXBvcnRhbnQ7XG4gIH1cbiAgXG4gICBcbiAgdGh7XG4gICAgYm9yZGVyOiBub25lICFpbXBvcnRhbnQ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzNkNmQ3OTsgXG4gICAgY29sb3I6V2hpdGU7XG4gICAgZm9udC1mYW1pbHk6IE11bGksSGVsdmV0aWNhIE5ldWUsQXJpYWwsc2Fucy1zZXJpZjtcbiAgICBmb250LXdlaWdodDogNjAwO1xuICB9XG4gIFxuICBidXR0b246aG92ZXJ7XG4gICAgYm9yZGVyOiAxcHggIzQ1NGQ1NTtcbiAgICBcbiAgfSJdfQ== */\"","module.exports = \"<app-dashboard></app-dashboard>\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"table-responsive\\\">\\n    <br>\\n    <table class=\\\"table table-striped table-hover text-center\\\">\\n      <thead>\\n        <tr>\\n          <th>Serial Number</th>\\n          <th>Medicine Name</th>\\n          <th>Manufactured Date</th>\\n          <th>Location</th>\\n          <th>Weight (Kg)</th>\\n          <th>Action</th>\\n          <th></th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <ng-container *ngIf=\\\" list && list.length===0\\\">\\n          <tr>\\n            <td colspan=\\\"7\\\"> \\n              Data not found\\n            </td>\\n          </tr>\\n        </ng-container>\\n        <ng-container *ngIf=\\\" list && list.length > 0\\\">\\n        <tr *ngFor=\\\"let x of list; let i = index\\\">\\n\\t\\t      <ng-container *ngIf=\\\"((x.parent==0 || !x.parent) && x.serial)\\\">\\n            <td><a [routerLink]=\\\"['/medicine/details',x.serial]\\\" style=\\\"color:blue\\\">{{x.serial}}</a></td>\\n            <td>{{x.medicine}}</td>\\n            <td>{{x.Mdate}}</td>\\n            <td>{{x.location}}</td>\\n            <td>{{x.weight}}</td>\\n            <td><button type=\\\"button\\\" *ngIf=\\\"myrole>1\\\" (click)=\\\"deleteMedicine(x._id)\\\" class=\\\"btn btn-danger\\\">Delete</button></td>\\n            <td><button type=\\\"button\\\" (click)=\\\"serialId(x.serial)\\\" class=\\\"btn btn-info\\\" data-toggle=\\\"modal\\\"\\n              data-target=\\\"#exampleModalCenter\\\" *ngIf=\\\"myrole>1\\\">Send to Wholesaler</button></td>\\n\\t\\t      </ng-container>\\n        </tr>\\n        </ng-container>\\n      </tbody>\\n      <tfoot >\\n        <tr>\\n          <th></th>\\n          <th></th>\\n          <th></th>\\n          <th></th>\\n          <th></th>\\n          <th></th>\\n          <th></th>\\n        </tr>\\n      </tfoot>\\n    </table>\\n  </div>\\n</div>\\n\\n\\n<!-- Modal -->\\n<div class=\\\"modal fade\\\" id=\\\"exampleModalCenter\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalCenterTitle\\\"\\n  aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLongTitle\\\">Medicine Transportation</h5>\\n\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Serial</label>\\n              <input #serial type=\\\"text\\\" [(ngModel)]=\\\"serialvalue\\\" class=\\\"form-control required\\\">\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Wholesaler</label>\\n              <select [(ngModel)]=\\\"wId1\\\" class=\\\"form-control\\\">\\n                <option *ngFor=\\\"let wid of wlist\\\" [value]=\\\"wid.publicKey\\\">{{wid.firstName}}</option>\\n              </select>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Transporter</label>\\n              <select [(ngModel)]=\\\"tId1\\\" class=\\\"form-control\\\">\\n                <option *ngFor=\\\"let wid of tlist\\\" [value]=\\\"wid.userId\\\">{{wid.firstName}}</option>\\n              </select>\\n            </div>\\n          </div>\\n        </div>\\n\\n\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" #completeModal data-dismiss=\\\"modal\\\">Close</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"mTransection(serial.value,wId1,tId1)\\\">Send</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport { AuthService } from 'src/app/service/auth.service';\n// import { Medicine } from '../medicine-create/addmedicine';\nimport { Transection } from './transection';\nimport { Router } from '@angular/router';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\n@Component({\n  selector: 'app-medicine-list',\n  templateUrl: './medicine-list.component.html',\n  styleUrls: ['./medicine-list.component.css']\n})\nexport class MedicineListComponent implements OnInit {\n\n  selectedWId: string = '';\n  selectedTId: string = '';\n  base;\n  call;\n  serialvalue: any = \" \";\n  wlist: any = [];\n  tlist: any = [];\n  wid1: any = '';\n  tid1: any = '';\n  list: any = [];\n  transection: any = Transection;\n  \n  blockchain: any = [];\n  blockchain2: any = [];\n  status: any = [];\n  statusValue: any;\n  itemId: any = [];\n  mypublickey: any;\n  privateKey: any;\n  myrole;\n  userId;\n  \n  \n  \n  @ViewChild('completeModal') completeModal: ElementRef;\n  blockchainUrl: any = this.http.blockchainUrl;\n  constructor(private http: AuthService, private http1: HttpClient, private router: Router) { }\n\n  ngOnInit() {\n    this.medicinelist();\n    this.allWholesaler();\n    this.allTransporter();\n    this.mypublickey = localStorage.getItem(\"publicKey\");\n\n    this.privateKey = localStorage.getItem(\"privateKey\");\n    this.myrole= localStorage.getItem(\"role\");\n    this.userId = localStorage.getItem(\"userId\");\n    console.log(\"User Idhhhhhhh\", this.userId);\n    \n    console.log(this.myrole);\n  }\n\n  selectChangeHandler1(event: any) {\n    //update the ui\n    this.selectedWId = event.target.value;\n\n  }\n\n  selectChangeHandler2(event: any) {\n    //update the ui\n    this.selectedTId = event.target.value;\n  }\n\n  serialId(serialId) {\n    this.serialvalue = serialId;\n  }\n\n \n\n  medicinelist() {\n    this.myrole= localStorage.getItem(\"role\");\n   \n    if(this.myrole == 1){      \n      return this.http.getMedicineList().subscribe((data) => {\n        this.list = data;\n        console.log(\"All Medicine\",this.list);\n      });\n\n    }else{\n      return this.http.getMedicineUserId().subscribe((data) => {\n        console.log(data);\n        this.list = data;\n        console.log(\"user Medicine\",this.list);\n      });\n\n    }\n    \n  }\n\n  deleteMedicine(id) {\n    if (confirm('Are you sure to delete')) {\n      this.http.deleteMedicine(id).subscribe(res => {\n\n        this.medicinelist();\n\n      });\n    }\n  }\n\n  allWholesaler() {\n    return this.http.getallWholesalerUser().subscribe(data => {\n      this.wlist = data;\n      console.log(this.wlist);\n    });\n  }\n\n  allTransporter() {\n    return this.http.getallTransporterUser().subscribe(data => {\n      this.tlist = data;\n      console.log(this.tlist);\n    });\n  }\n\n\n\n\n  mTransection(serial: string, wholesalerId: string, transpoterId: string) {\n    let that = this;\n    console.log(serial, wholesalerId, transpoterId);\n    //Register User on Blockchain ==>> if \"COMMITED\" :: register in db else Mail (ERROR Message)\t\n    this.transection = new Transection(serial, wholesalerId, transpoterId);\n            this.base = this.http.medicineTransection(this.transection);\n            this.call = this.base.subscribe(\n              data => {\n                alert('Request Accepted');\n                let el: HTMLElement = this.completeModal.nativeElement;\n                el.click();\n\n              });\n    // const Metadata = {\n    //   \"action\": \"sendToWholesaler\",\n    //   \"payloaddata\": {\n    //     \"serialNumber\": serial,\n    //     \"wholesaler\": {\n    //       \"address\": wholesalerId,\n    //       \"comment\": \"In Transaction\"\n    //     },\n    //     \"transporterid\": transpoterId\n    //   },\n    //   \"private\": this.privateKey,\n    //   \"public\": this.mypublickey\n    // }\n\n    // const httpOptions = {\n    //   headers: new HttpHeaders({\n    //     'Content-Type': 'application/json'\n    //   })\n    // };\n\n    // var x = this.http1.post(this.blockchainUrl, Metadata, httpOptions).subscribe(\n    //   (val) => {\n    //     console.log(\"POST call successful value returned in body\", val);\n    //     this.blockchain = val;\n    //     if (that.http.IsJsonString(this.blockchain.response.body)) {\n    //       JSON.parse(this.blockchain.response.body).hasOwnProperty(\"data\");\n    //       JSON.parse(this.blockchain.response.body).hasOwnProperty(\"data\");\n    //       console.log(JSON.parse);\n    //       this.status = JSON.parse(this.blockchain.response.body);\n    //       this.statusValue = this.status.data[0].status;\n    //       this.itemId = this.status.data[0].id;\n    //       if (this.statusValue == 'COMMITTED') {\n\n    //         this.transection = new Transection(serial, wholesalerId, transpoterId);\n    //         this.base = this.http.medicineTransection(this.transection);\n    //         this.call = this.base.subscribe(\n    //           data => {\n    //             alert('Request Accepted');\n    //             let el: HTMLElement = this.completeModal.nativeElement;\n    //             el.click();\n\n    //           });\n    //       }\n    //       else {\n    //         alert('Request Rejected');\n    //         let el: HTMLElement = this.completeModal.nativeElement;\n    //         el.click();\n    //       }\n    //     } else {\n\n    //       that.http1.get(this.blockchainUrl + \"/batch_statuses?\" + this.blockchain.id + \"&wait\").subscribe((val) => {\n    //         this.blockchain2 = val\n    //         if (that.http.IsJsonString(this.blockchain2.body)) {\n    //           this.status = JSON.parse(this.blockchain2.body);\n    //           console.log('json value2', this.status.data[0].status);\n    //           this.statusValue = this.status.data[0].status;\n    //           this.itemId = this.status.data[0].id;\n    //           if (this.statusValue == 'COMMITTED') {\n\t\t// \t\t   this.transection = new Transection(serial, wholesalerId, transpoterId);\n    //             this.base = this.http.medicineTransection(this.transection);\n    //             this.call = this.base.subscribe(\n    //               data => {\n\n    //                 alert('Request Accepted');\n    //                 let el: HTMLElement = this.completeModal.nativeElement;\n    //                 el.click();\n\n    //               });\n    //           }\n    //           else {\n    //             alert('Request Rejected');\n    //             let el: HTMLElement = this.completeModal.nativeElement;\n    //             el.click();\n    //           }\n    //         }\n    //       })\n    //     }\n    //     // }).catch(function (err) {\n    //     //   console.log(err.message);\n    //   });\n  }\n}\n","export class Transection {\n    serial: string;\t\n    wholesalerId:string;\n    transporterId:string;   \n\tsenderId:string;\n\tconstructor(   \n         serial: string,\n        wholesalerId:string,\n        transporterId:string,\n       )\n        {\n\t\t\t\n            this.serial\t\t\t=\tserial;\n            this.wholesalerId\t=\twholesalerId;\n            this.transporterId\t=\ttransporterId; \n\t\t\tthis.senderId\t\t=\tlocalStorage.getItem(\"userId\");\t\t\t\n\t\n    \t}\n}\n","module.exports = \"table {\\n    width: 100%;\\n    \\n  }\\n\\n \\n#heading{\\n    background-color: rgb(18, 50, 190); \\n    color:white;\\n}\\n\\n \\n.pd{\\n  background: navy;\\n}\\n\\n \\ntd a {\\n  display:block;\\n  width:100%;\\n  background-clip: padding-box; \\n  border-radius: 5px;\\n  background-color: blue;\\n  color: white;\\n  border: 2px solid green;\\n}\\n\\n \\na {\\n  text-decoration: none !important;\\n}\\n\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vbWVkaWNpbmUvbWVkaWNpbmUtcmVwb3J0L21lZGljaW5lLXJlcG9ydC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksV0FBVzs7RUFFYjs7O0FBR0Y7SUFDSSxrQ0FBa0M7SUFDbEMsV0FBVztBQUNmOzs7QUFDQTtFQUNFLGdCQUFnQjtBQUNsQjs7O0FBQ0E7RUFDRSxhQUFhO0VBQ2IsVUFBVTtFQUNWLDRCQUE0QjtFQUM1QixrQkFBa0I7RUFDbEIsc0JBQXNCO0VBQ3RCLFlBQVk7RUFDWix1QkFBdUI7QUFDekI7OztBQUNBO0VBQ0UsZ0NBQWdDO0FBQ2xDIiwiZmlsZSI6InNyYy9hcHAvYWRtaW4vbWVkaWNpbmUvbWVkaWNpbmUtcmVwb3J0L21lZGljaW5lLXJlcG9ydC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIFxuICB9XG5cbiBcbiNoZWFkaW5ne1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigxOCwgNTAsIDE5MCk7IFxuICAgIGNvbG9yOndoaXRlO1xufVxuLnBke1xuICBiYWNrZ3JvdW5kOiBuYXZ5O1xufVxudGQgYSB7XG4gIGRpc3BsYXk6YmxvY2s7XG4gIHdpZHRoOjEwMCU7XG4gIGJhY2tncm91bmQtY2xpcDogcGFkZGluZy1ib3g7IFxuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIGJhY2tncm91bmQtY29sb3I6IGJsdWU7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgYm9yZGVyOiAycHggc29saWQgZ3JlZW47XG59XG5hIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lICFpbXBvcnRhbnQ7XG59XG5cblxuIl19 */\"","module.exports = \"<app-dashboard></app-dashboard>\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"table-responsive\\\">\\n    <br>\\n    <table class=\\\"table table-striped table-dark table-hover text-center\\\">\\n\\n      <thead class=\\\"theme-table\\\">\\n\\t\\t<tr>\\n\\t\\t<th colspan=\\\"4\\\"></th>\\n\\t\\t<th><button type=\\\"button\\\"   (click)=\\\"exporttocsv()\\\"  class=\\\"btn btn-primary\\\" >Export as CSV</button></th>\\n\\t\\t</tr>\\n        <tr>\\n          <th> Serial Number</th>\\n          <th>Medicine code</th>\\n          <th>Manufactured Date</th>\\n          <th>Location</th>\\n          <th>Weight</th> \\n        </tr>\\n\\t\\t\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let x of list; let i = index\\\">\\n          <td><a [routerLink]=\\\"['/medicinedetailsdashboard',x.serial]\\\" style=\\\"color:blue\\\">{{x.serial}}</a></td>\\n          <td>{{x.medicine}}</td>\\n          <td>{{x.Mdate}}</td>\\n          <td>{{x.location}}</td>\\n          <td>{{x.weight}}</td>\\n          <!-- <td><button type=\\\"button\\\" *ngIf=\\\"myrole>1\\\" (click)=\\\"deleteMedicine(x._id)\\\" class=\\\"btn btn-danger\\\">Delete</button></td>\\n          <td><button type=\\\"button\\\" (click)=\\\"serialId(x.serial)\\\" class=\\\"btn btn-info\\\" data-toggle=\\\"modal\\\"\\n              data-target=\\\"#exampleModalCenter\\\" *ngIf=\\\"myrole>1\\\">Send to Wholesaler</button></td> -->\\n        </tr>\\n\\n      </tbody>\\n      <tfoot class=\\\"theme-table\\\">\\n        <tr>\\n          <th colspan=\\\"4\\\"></th>\\n\\t\\t  <th><button type=\\\"button\\\"   (click)=\\\"exporttocsv()\\\"  class=\\\"btn btn-primary\\\" >Export As CSV</button></th>\\n          <!-- <th></th>\\n          <th></th>\\n          <th></th>\\n          <th></th>\\n          <th></th>\\n          <th></th> -->\\n        </tr>\\n      </tfoot>\\n    </table>\\n  </div>\\n</div>\\n\\n\\n<!-- Modal -->\\n<div class=\\\"modal fade\\\" id=\\\"exampleModalCenter\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalCenterTitle\\\"\\n  aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLongTitle\\\">Medicine Transportation</h5>\\n\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Serial</label>\\n              <input #serial type=\\\"text\\\" [(ngModel)]=\\\"serialvalue\\\" class=\\\"form-control required\\\">\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Wholesailer</label>\\n              <select [(ngModel)]=\\\"wId1\\\" class=\\\"form-control\\\">\\n                <option *ngFor=\\\"let wid of wlist\\\" [value]=\\\"wid.publicKey\\\">{{wid.firstName}}</option>\\n              </select>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Transporter</label>\\n              <select [(ngModel)]=\\\"tId1\\\" class=\\\"form-control\\\">\\n                <option *ngFor=\\\"let wid of tlist\\\" [value]=\\\"wid.userId\\\">{{wid.firstName}}</option>\\n              </select>\\n            </div>\\n          </div>\\n        </div>\\n\\n\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" #completeModal data-dismiss=\\\"modal\\\">Close</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"mTransection(serial.value,wId1,tId1)\\\">Send</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport { AuthService } from 'src/app/service/auth.service';\n// import { Medicine } from '../medicine-create/addmedicine';\nimport { Transection } from './transection';\nimport { Router } from '@angular/router';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Angular5Csv } from 'angular5-csv/dist/Angular5-csv';\n\n@Component({\n  selector: 'app-medicine-report',\n  templateUrl: './medicine-report.component.html',\n  styleUrls: ['./medicine-report.component.css']\n})\nexport class MedicineReportComponent implements OnInit {\n\n  \n  selectedWId: string = '';\n  selectedTId: string = '';\n  base;\n  call;\n  serialvalue: any = \" \";\n  wlist: any = [];\n  tlist: any = [];\n  wid1: any = '';\n  tid1: any = '';\n  list: any = [];\n  meds = [];\n  transection: any = Transection;\n  \n  blockchain: any = [];\n  blockchain2: any = [];\n  status: any = [];\n  statusValue: any;\n  itemId: any = [];\n  mypublickey: any;\n  privateKey: any;\n  myrole;\n  userId;\n  \n  \n  \n  @ViewChild('completeModal') completeModal: ElementRef;\n  blockchainUrl: any = this.http.blockchainUrl;\n  constructor(private http: AuthService, private http1: HttpClient, private router: Router) { }\n\n  ngOnInit() {\n    this.medicinelist();\n    this.allWholesaler();\n    this.allTransporter();\n    this.mypublickey = localStorage.getItem(\"publicKey\");\n\n    this.privateKey = localStorage.getItem(\"privateKey\");\n    this.myrole= localStorage.getItem(\"role\");\n    this.userId = localStorage.getItem(\"userId\");\n    console.log(\"User Idhhhhhhh\", this.userId);\n    \n    console.log(this.myrole);\n  }\n\n  selectChangeHandler1(event: any) {\n    //update the ui\n    this.selectedWId = event.target.value;\n\n  }\n\n  selectChangeHandler2(event: any) {\n    //update the ui\n    this.selectedTId = event.target.value;\n  }\n\n  serialId(serialId) {\n    this.serialvalue = serialId;\n  }\n\n \n\n  medicinelist() {\n    this.myrole= localStorage.getItem(\"role\");\n   \n    if(this.myrole == 1){      \n      return this.http.getMedicineList().subscribe((data) => {\n        this.list = data;\n\t\t//this.meds = data;\n        console.log(\"All Medicine\",this.list);\n      });\n\n    }else{\n      return this.http.getMedicineUserId().subscribe((data) => {\n        console.log(data);\n        this.list = data;\n\t\t//this.meds = data;\n        console.log(\"user Medicine\",this.list);\n      });\n\n    }\n    \n  }\n\n  deleteMedicine(id) {\n    if (confirm('Are you sure to delete')) {\n      this.http.deleteMedicine(id).subscribe(res => {\n\n        this.medicinelist();\n\n      });\n    }\n  }\n\n  allWholesaler() {\n    return this.http.getallWholesalerUser().subscribe(data => {\n      this.wlist = data;\n      console.log(this.wlist);\n    });\n  }\n\n  allTransporter() {\n    return this.http.getallTransporterUser().subscribe(data => {\n      this.tlist = data;\n      console.log(this.tlist);\n    });\n  }\n  \n  exporttocsv()\n  {\n\t  var data = [];\n\t  var  datarow = {};\n\t\n\tif(Array.isArray(this.list))\n\t\t\tthis.meds = this.list;\n\t\telse\n\t\t\tthis.meds = this.list.split(',');\n\t\t\n\t  for(var i=0;i<=this.meds.length;i++)\n\t  {\n\t\t  console.log(\"meds==\" + this.meds[i]);\n\t\t  if(typeof this.meds[i] != \"undefined\")\n\t\t  {\n\t\t\tdatarow = {\n\t\t\tserial:this.meds[i].serial,\n\t\t\tmedicine: this.meds[i].medicine,\n\t\t\tmanufactured: this.meds[i].Mdate,\n\t\t\tlocation: this.meds[i].location,\n\t\t\tweight: this.meds[i].weight\n\t\t\t};\n\t\t\tdata.push(datarow);\n\t\t  }\n\t  }\n\n\t\tvar options = {\n\t\tfieldSeparator: ',',\n\t\tquoteStrings: '\"',\n\t\tdecimalseparator: '.',\n\t\tshowLabels: true,\n\t\tshowTitle: true,\n\t\theaders: [\"Serial Number\", \"Medicine code\", \"Manufactured Date\",\"Location\",\"Weight\"]\n\t\t};\n\n\t\tnew Angular5Csv(data, 'Report1',options);\n\n\t\treturn true;\n  }\n\n\n\n\n  mTransection(serial: string, wholesalerId: string, transpoterId: string) {\n    let that = this;\n    console.log(serial, wholesalerId, transpoterId);\n    //Register User on Blockchain ==>> if \"COMMITED\" :: register in db else Mail (ERROR Message)\t\n          this.transection = new Transection(serial, wholesalerId, transpoterId);\n            this.base = this.http.medicineTransection(this.transection);\n            this.call = this.base.subscribe(\n              data => {\n                alert('Request Accepted');\n                let el: HTMLElement = this.completeModal.nativeElement;\n                el.click();\n\n              });\n    // const Metadata = {\n    //   \"action\": \"sendToWholesaler\",\n    //   \"payloaddata\": {\n    //     \"serialNumber\": serial,\n    //     \"wholesaler\": {\n    //       \"address\": wholesalerId,\n    //       \"comment\": \"In Transaction\"\n    //     },\n    //     \"transporterid\": transpoterId\n    //   },\n    //   \"private\": this.privateKey,\n    //   \"public\": this.mypublickey\n    // }\n\n    // const httpOptions = {\n    //   headers: new HttpHeaders({\n    //     'Content-Type': 'application/json'\n    //   })\n    // };\n\n    // var x = this.http1.post(this.blockchainUrl, Metadata, httpOptions).subscribe(\n    //   (val) => {\n    //     console.log(\"POST call successful value returned in body\", val);\n    //     this.blockchain = val;\n    //     if (that.http.IsJsonString(this.blockchain.response.body)) {\n    //       JSON.parse(this.blockchain.response.body).hasOwnProperty(\"data\");\n    //       JSON.parse(this.blockchain.response.body).hasOwnProperty(\"data\");\n    //       console.log(JSON.parse);\n    //       this.status = JSON.parse(this.blockchain.response.body);\n    //       this.statusValue = this.status.data[0].status;\n    //       this.itemId = this.status.data[0].id;\n    //       if (this.statusValue == 'COMMITTED') {\n\n    //         this.transection = new Transection(serial, wholesalerId, transpoterId);\n    //         this.base = this.http.medicineTransection(this.transection);\n    //         this.call = this.base.subscribe(\n    //           data => {\n    //             alert('Request Accepted');\n    //             let el: HTMLElement = this.completeModal.nativeElement;\n    //             el.click();\n\n    //           });\n    //       }\n    //       else {\n    //         alert('Request Rejected');\n    //         let el: HTMLElement = this.completeModal.nativeElement;\n    //         el.click();\n    //       }\n    //     } else {\n\n    //       that.http1.get(this.blockchainUrl+\"/batch_statuses?\" + this.blockchain.id + \"&wait\").subscribe((val) => {\n    //         this.blockchain2 = val\n    //         if (that.http.IsJsonString(this.blockchain2.body)) {\n    //           this.status = JSON.parse(this.blockchain2.body);\n    //           console.log('json value2', this.status.data[0].status);\n    //           this.statusValue = this.status.data[0].status;\n    //           this.itemId = this.status.data[0].id;\n    //           if (this.statusValue == 'COMMITTED') {\n    //             this.base = this.http.medicineTransection(this.transection);\n    //             this.call = this.base.subscribe(\n    //               data => {\n\n    //                 alert('Request Accepted');\n    //                 let el: HTMLElement = this.completeModal.nativeElement;\n    //                 el.click();\n\n    //               });\n    //           }\n    //           else {\n    //             alert('Request Rejected');\n    //             let el: HTMLElement = this.completeModal.nativeElement;\n    //             el.click();\n    //           }\n    //         }\n    //       })\n    //     }\n    //     // }).catch(function (err) {\n    //     //   console.log(err.message);\n    //   });\n  }\n}\n","export class Transection {\n    serial: string;\t\n    wholesalerId:string;\n    transporterId:string;   \n\n\tconstructor(   \n         serial: string,\n        wholesalerId:string,\n        transporterId:string,\n       )\n        {\n            this.serial=serial;\n            this.wholesalerId=wholesalerId;\n            this.transporterId=transporterId;           \n\t\n    \t}\n}\n","export class Package {\n    serial: string;\t\n    medicines:string;\n    packages:string;\n    location: string;\n    level:string;\n\t userId:string;\n\n\tconstructor(   \n         serial: string,\n\t\t level:string,\n        medicines:[],\n        packages:string,\n        location: string,\n\tuserId:string\n\t\n       )\n        {\n            this.serial=serial;\n            this.level=level;\n            this.medicines = Array.isArray(medicines)?medicines.join(','):medicines;\n            this.location=location;\n            this.packages=Array.isArray(packages)?packages.join(','):packages;\n            this.userId=userId;\n\t\n    \t}\n}\n","export class Package2 {\n    serial: string;\t\n    medicines:string;\n    barcode:string;\n    location: string;\n    level:string;\n    packages:string;\n    PackageId:string;\n\trole: string;\n    time:string;\n    publickey:string;\n    status:string;\n   \n\n\n\n\tconstructor(   \n\t\t\tserial: string,\n\t\t\tmedicines:string,\n\t\t\tbarcode:string,\n\t\t\tlocation: string,\n\t\t\tlevel:string,\n\t\t\tpackages:string,\n\t\t\tPackageId:string,\n\t\t\trole: string,\n\t\t\ttime:string,\n\t\t\tpublickey:string,\n\t\t\tstatus:string,\n\t)\n        {\n            this.serial=serial;\n            this.medicines=medicines;\n            this.barcode=barcode;\n            this.location=location;\n            this.level=level;\n            this.packages=packages;\n            this.PackageId=PackageId;\n            this.role=role;\n            this.time=time;\n            this.publickey=publickey;\n            this.status=status;\n\t    \n    \t}\n}\n","module.exports = \".container{\\n    margin-top:50px;\\n    color: navy;\\n}\\n\\nh4{\\ncolor: navy;\\n    margin-left: 20px;\\n}\\n\\nbody{\\n    color: navy;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vbWVkaWNpbmUvcGFja2FnZS1jcmVhdGUvcGFja2FnZS1jcmVhdGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGVBQWU7SUFDZixXQUFXO0FBQ2Y7O0FBRUE7QUFDQSxXQUFXO0lBQ1AsaUJBQWlCO0FBQ3JCOztBQUNBO0lBQ0ksV0FBVztBQUNmIiwiZmlsZSI6InNyYy9hcHAvYWRtaW4vbWVkaWNpbmUvcGFja2FnZS1jcmVhdGUvcGFja2FnZS1jcmVhdGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXJ7XG4gICAgbWFyZ2luLXRvcDo1MHB4O1xuICAgIGNvbG9yOiBuYXZ5O1xufVxuXG5oNHtcbmNvbG9yOiBuYXZ5O1xuICAgIG1hcmdpbi1sZWZ0OiAyMHB4O1xufVxuYm9keXtcbiAgICBjb2xvcjogbmF2eTtcbn1cbiJdfQ== */\"","module.exports = \"<app-dashboard></app-dashboard>\\n\\n<div class=\\\"container\\\"> \\n    <h4>Track New <span>Package</span></h4>\\n    \\n  <form [formGroup]=\\\"registerForm\\\"\\n    (ngSubmit)=\\\"onSubmit()\\\" style=\\\"background-color: rgb(235,235,235); padding: 20px;\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n                <label>Serial Number</label>\\n                <input type=\\\"text\\\" formControlName=\\\"SerialNumber\\\" [(ngModel)]=\\\"serialnum\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.SerialNumber.errors }\\\" class=\\\"form-control required\\\" maxlength=\\\"30\\\" >\\n                <div *ngIf=\\\"submitted && f.SerialNumber.errors\\\" class=\\\"invalid-feedback\\\">\\n                  <div *ngIf=\\\"f.SerialNumber.errors.required\\\">Serial Number required </div>\\n                </div>\\n              </div></div>\\n          <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n            <label>Level</label>\\t\\t\\t  \\n            <input type=\\\"number\\\" formControlName=\\\"Level\\\"  [(ngModel)]=\\\"level\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.Level.errors }\\\" class=\\\"form-control required\\\"/>\\n            <div *ngIf=\\\"submitted && f.Level.errors\\\" class=\\\"invalid-feedback\\\">\\n              <div *ngIf=\\\"f.Level.errors.required\\\">Level required </div>\\n              </div>\\n          </div>\\n        </div>\\n       </div> \\n      <div class=\\\"row\\\">\\n         <div class=\\\"col\\\" *ngIf=\\\"(level<1)\\\"><div class=\\\"form-group\\\">\\n            <label>Medicines</label>\\n            <select  formControlName=\\\"Medicines\\\" [(ngModel)]=\\\"medicines\\\" class=\\\"form-control required\\\" multiple>\\n\\t\\t\\t<ng-container *ngFor=\\\"let x of list\\\" >\\n\\t\\t\\t<option [value]=\\\"x._id\\\" *ngIf=\\\"(x.parent=='0' || !x.parent)\\\">{{x.serial}}</option> \\n\\t\\t\\t\\n\\t\\t\\t</ng-container>\\n\\t\\t\\t</select>\\n\\t\\t\\t \\n            </div>\\n          </div>\\n   \\n\\t\\t\\n      \\n\\t\\t<div class=\\\"col\\\" *ngIf=\\\"(level>=1)\\\">\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t<label>Packages</label>\\n\\t\\t\\t\\t<select name=\\\"packages[]\\\" formControlName=\\\"Packages\\\"   [(ngModel)]=\\\"packages\\\" class=\\\"form-control required\\\" multiple>\\n\\t\\t\\t\\t<ng-container *ngFor=\\\"let x of allpackage\\\" >\\n\\t\\t\\t\\t\\t<option [value]=\\\"x._id\\\" *ngIf=\\\"(x.level == (level-1) &&  (x.parent == '0' || !x.parent))\\\">{{x.serial}}</option> \\n\\t\\t\\t\\n\\t\\t\\t</ng-container>\\n\\t\\t\\t\\t</select>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t<div class=\\\"col\\\">\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n              <label>Location</label>\\n              <input type=\\\"text\\\" formControlName=\\\"Location\\\"  [(ngModel)]=\\\"location\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.Location.errors }\\\" class=\\\"form-control required\\\" maxlength=\\\"30\\\">\\n              <div *ngIf=\\\"submitted && f.Location.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"f.Location.errors.required\\\">Location required </div>\\n                </div>\\n            </div>\\n          </div>\\n\\t</div>\\n            <div class=\\\"row text-right\\\">\\n                <div class=\\\"col\\\">\\n                  <div class=\\\"form-group\\\">\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Create Records</button>\\n                  <!-- <button type=\\\"reset\\\" class=\\\"btn btn-primary\\\" style=\\\"margin-left: 5px\\\">Reset From</button> -->\\n                  </div></div>\\n\\t\\t\\t\\t\\t\\t\\t <!-- Button to Open the Modal -->\\n\\t\\t\\t  <div class=\\\"row text-left\\\">\\n\\t\\t\\t\\t<div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n\\t\\t\\t\\t<button type=\\\"button\\\"  #completeModal style=\\\" margin: 0px; display: none\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\">\\n\\t\\t\\t\\t  Generate QR Code\\n\\t\\t\\t\\t</button>\\n  \\n                      </div></div>\\n                </div>\\n              </div>\\n\\t\\t\\n     \\n   </form>\\n   <!-- The Modal -->\\n   <div class=\\\"modal fade\\\" id=\\\"myModal\\\">\\n    <div class=\\\"modal-dialog\\\">\\n      <div class=\\\"modal-content\\\"> \\n      \\n        <!-- Modal Header QR Code Generator Start -->\\n        <div class=\\\"modal-header\\\">\\n         \\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n        </div>\\n        \\n        <!-- Modal body -->\\n        <div class=\\\"modal-body\\\" style=\\\"margin-left:125px\\\">\\n          <div>\\n         <h3>Package Qr Code Image</h3>\\n\\t\\t\\t\\t<qrcode #parent [qrdata]=\\\"packageid\\\" [size]=\\\"256\\\" [level]=\\\"'M'\\\"></qrcode>\\n        </div>\\n\\n          <br>\\n          \\n          <div class=\\\"text\\\">           \\n            \\n          <button (click)=\\\"saveAsImage(parent)\\\">Download QR Code Image</button>\\n          </div>\\n        </div>\\n        \\n        <!-- Modal footer  QR Code Generator End-->\\n        <div class=\\\"modal-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\">Close</button>\\n        </div>\\n        \\n      </div>\\n    </div>\\n  </div>\\n  \\n  </div>\\n\"","import { Component, VERSION, OnInit,ElementRef,ViewChild,OnDestroy } from '@angular/core';\nimport { Package } from './addpackage';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { QrCodeReader } from 'src/app/qr-code-reader.service';\nimport { Subscription } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-package-create',\n  templateUrl: './package-create.component.html',\n  styleUrls: ['./package-create.component.css']\n})\nexport class PackageCreateComponent implements OnInit, OnDestroy {\n\n  registerForm: FormGroup;\n  submitted = false;\n\n\n\n  qrdata: string = null;\n  barcodevalue: any;\n  subscription: Subscription;\n  createpackage;\n  base;\n  call;\n  itemId: any = [];\n  itemId1: any = [];\n  status: any = [];\n  transId: any = [];\n  statusValue: any;\n  level:any = '';\n  location:any = '';\n  serialnum:any = '';\n  medicines:any = '';\n  packages:any = [];\n  packageid: any = [];\n  packageserial: any;\n  blockchain: any = [];\n  blockchain2: any = [];\n  mypublickey: any;\n  privateKey: any;\n  medicineStatus:any;\n  list: any = [];\n  allpackage: any = [];\n  userId;\n  myrole;\n  myrole1;\n  firstname;\n  lastname;\n  blockchainUrl: any = this.httpuser.blockchainUrl;\n  @ViewChild('completeModal')completeModal: ElementRef;\n\n  constructor(private httpuser: AuthService, private qrReader: QrCodeReader, private http: HttpClient, private formBuilder: FormBuilder) {\n    console.log('AppComponent running');\n    this.qrdata = ' ';\n  }\n  changeValue(newValue: string): void {\n    this.qrdata = newValue;\n  }\n\n\n  ngOnInit() {\n    this.medicineStatus=\"Package Created by Manufacturer\";\n    this.userId = localStorage.getItem(\"userId\");\n    console.log(\"User ID\", this.userId);\n    this.myrole = localStorage.getItem(\"role\");\n    this.myrole1 = localStorage.getItem(\"email\");\n\t\n    console.log(\"User Role\", this.myrole1);\n    console.log(\"User Role\", this.myrole);\n\t this.mypublickey = localStorage.getItem(\"publicKey\");\n\n    this.privateKey = localStorage.getItem(\"privateKey\");\n    this.firstname=localStorage.getItem(\"firstName\");\n    this.lastname=localStorage.getItem(\"lastName\");\n    console.log(\"User name\", this.firstname,this.lastname);\n    //this.medicineid = '92516006ba3253876aed6bc22d4a6ff53d8406c6ad864195ed144ab5c87621b6c233b5';\n    this.registerForm = this.formBuilder.group({\n      SerialNumber: ['', Validators.required],\n      Level: ['', Validators.required],\n\t  Location: ['', Validators.required],\n\t  Medicines:[''],\n\t  Packages:['']\n     // AuthorizeReporters: ['', Validators.required],\n     // Selectfield: ['', Validators.required],\n\n    });\n\tthis.medicinelist();\n    this.packagelist();\n\n  }\n  \n  medicinelist() {\n    this.myrole= localStorage.getItem(\"role\");\n   \n    if(this.myrole == 1){      \n      return this.httpuser.getMedicineList().subscribe((data) => {\n        this.list = data;\n        console.log(\"All Medicine\",this.list);\n      });\n\n    }else{\n      return this.httpuser.getPkgMedicineUserId().subscribe((data) => {\n        console.log(data);\n        this.list = data;\n        console.log(\"user Medicine\",this.list);\n      });\n\n    }\n\tfor(var i=0;i<=this.list.length;i++)\n\t{\n\t\tthis.list[i].id = this.list[i]._id.toString();\n\t}\n\t\n    \n  }\n  \n    packagelist() {\n    this.myrole= localStorage.getItem(\"role\");\n   \n    if(this.myrole == 1){      \n      return this.httpuser.getPackageList().subscribe((data) => {\n        this.allpackage = data;\n        console.log(\"All Medicine\",this.list);\n      });\n\n    }else{\n      return this.httpuser.getPackageUserId().subscribe((data) => {\n        console.log(data);\n        this.allpackage = data;\n        console.log(\"user Medicine\",this.list);\n      });\n\n    }\n    \n  }\n\n  onFileChange(event) {\n    const file = event.target.files[0];\n    this.subscription = this.qrReader.decode(file)\n      .subscribe(decodedString => {\n        this.barcodevalue = decodedString;\n        console.log(decodedString)\n      });\n  }\n   \n  \n\n  //saving image file of Qr code \n\n // qrdata2 = this.packageid;\n\n  saveAsImage(parent) {\n    // fetches base 64 date from image\n    const parentElement = parent.el.nativeElement.querySelector(\"img\").src;\n\n    // converts base 64 encoded image to blobData\n    let blobData = this.convertBase64ToBlob(parentElement);\n\n    // saves as image\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) { //IE\n      window.navigator.msSaveOrOpenBlob(blobData, 'Qrcode');\n    } else { // chrome\n      const blob = new Blob([blobData], { type: \"image/png\" });\n      const url = window.URL.createObjectURL(blob);\n      // window.open(url);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = this.packageserial;\n      link.click();\n    }\n\n  }\n\n  private convertBase64ToBlob(Base64Image: any) {\n    // SPLIT INTO TWO PARTS\n    const parts = Base64Image.split(';base64,');\n    // HOLD THE CONTENT TYPE\n    const imageType = parts[0].split(':')[1];\n    // DECODE BASE64 STRING\n    const decodedData = window.atob(parts[1]);\n    // CREATE UNIT8ARRAY OF SIZE SAME AS ROW DATA LENGTH\n    const uInt8Array = new Uint8Array(decodedData.length);\n    // INSERT ALL CHARACTER CODE INTO UINT8ARRAY\n    for (let i = 0; i < decodedData.length; ++i) {\n      uInt8Array[i] = decodedData.charCodeAt(i);\n    }\n    // RETURN BLOB IMAGE AFTER CONVERSION\n    return new Blob([uInt8Array], { type: imageType });\n  }\n\n\n\n  ngOnDestroy(): void {\n\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.registerForm.controls; }\n\n  onSubmit() {\n\t // alert(this.medicines); return true;\n\t \n\tif(this.medicines.length<=0 && this.level <=0)\n\t{\n\t\talert(\"Kindly select medicines for bundle\");\n\t\treturn false;\n\t}\n\telse if(this.packages.length<=0 && this.level >0)\n\t{\n\t\talert(\"Kindly select packages for bundle\");\n\t\treturn false;\n\t}\n\t\n\t\n\t \n    let that = this;\n    this.submitted = true;\n    \n\n    console.log(\"User ID\", this.userId);\n\t\n\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n      return;\n    }\n    console.log(this.serialnum, this.level, this.medicines, this.packages, this.location,this.userId);\n    //CREATE MEDICINE CODE\n    this.medicineStatus=this.firstname + \" \" +this.lastname + \" \" + \"[Manufacturer]\";\n    console.log(this.medicineStatus);\n    this.mypublickey = localStorage.getItem(\"publicKey\");\n    console.log(\"MedicineStatus\", this.mypublickey);\n    this.privateKey = localStorage.getItem(\"privateKey\");\n    console.log(\"Private Key\", this.privateKey );\n    \n   \n    this.createpackage = new Package(this.serialnum, this.level, this.medicines, this.packages, this.location,this.userId);\n    console.log('console of data',this.createpackage);\n    this.base = this.httpuser.createpackage(this.createpackage);\n              this.call = this.base.subscribe((data) => {\n    \t\t\tconsole.log(\"AT = \"+ JSON.stringify(data));\n                this.packageid = data.PackageId;\n                this.packageserial = data.serial; \n                 alert('Request Accepted');\n                 let el: HTMLElement = this.completeModal.nativeElement;\n                 el.click(); \n                 //this.registerForm.reset();\n              });\n    //blockcahin\n\t// if(this.level > 0)\n\t// \tvar inbounds = this.medicines;\n\t// else\n\t// \tvar inbounds = this.packages;\n\t\n  //   const Metadata = {\n\n  //     \"action\": \"createPackages\", \n  //     \"payloaddata\": {\n  //       \"serialNumber\": this.serialnum,\n  //       \"description\": this.serialnum+ this.level,\n  //       \"location\": {\n  //         \"type\": 1,\n  //         \"body\": {\n  //           \"address\": this.location\n  //         }\n  //       },\n  //       \"level\": this.level,\n\t// \t\"inbounds\":inbounds\n  //     },\n  //     \"private\": this.privateKey,\n  //     \"public\": this.mypublickey\n  //   };\n\n  //   const httpOptions = {\n  //     headers: new HttpHeaders({\n  //       'Content-Type': 'application/json'\n  //     })\n  //   };\n\n  //   var x = this.http.post(this.blockchainUrl, Metadata, httpOptions).subscribe(\n  //     (val) => {\n  //       console.log(\"POST call successful value returned in body\", val);\n  //       this.blockchain = val;\n  //       if (that.httpuser.IsJsonString(this.blockchain.response.body)) {\n  //         JSON.parse(this.blockchain.response.body).hasOwnProperty(\"data\");\n\n  //         this.status = JSON.parse(this.blockchain.response.body);            \n  //         this.statusValue = this.status.data[0].status;\n  //         this.itemId = this.status.data[0].id;\n  //         if (this.statusValue == 'COMMITTED') {\n  //       this.base = this.httpuser.createpackage(this.createpackage);\n  //       this.call = this.base.subscribe((data) => {     \n\t\t\n\t// \t\tconsole.log(JSON.stringify(data));\n  //         this.packageid = data.PackageId;\n  //         this.packageserial = data.serial;\n  //         alert('Request Accepted');\n  //         let el: HTMLElement = this.completeModal.nativeElement;\n  //         el.click(); \n  //         //this.registerForm.reset();\n  //       });\n  //     }\n  //     else {\n  //       alert('Request Rejected');\n  //     }\n  //   } else {\n\n  //     that.http.get(this.blockchainUrl+\"/batch_statuses?\"+ this.blockchain.id + \"&wait\").subscribe((val) => {\n  //       this.blockchain2 =val\n  //       if (that.httpuser.IsJsonString(this.blockchain2.body)) {\n  //         this.status = JSON.parse(this.blockchain2.body);\n  //         console.log('json value2', this.status.data[0].status);\n  //         this.statusValue = this.status.data[0].status;\n  //         this.itemId = this.status.data[0].id;\n  //         if (this.statusValue == 'COMMITTED') {\n  //           this.base = this.httpuser.createpackage(this.createpackage);\n  //           this.call = this.base.subscribe((data) => {\n\t// \t\t\tconsole.log(\"AT = \"+ JSON.stringify(data));\n  //             this.packageid = data.PackageId;\n  //             this.packageserial = data.serial; \n  //              alert('Request Accepted');\n  //              //this.registerForm.reset();\n  //           });\n  //         }\n  //         else {\n  //           alert('Request Rejected');\n  //         }\n  //       }\n  //     })\n  //   }\n  // // }).catch(function (err) {\n  // //   console.log(err.message);\n  // });\n}\n}\n\n\n\n\n\n\n      \n","module.exports = \".form-control {\\n    /* margin-top: 10px;\\n    margin-left: 8%;\\n    margin-right: 15%;\\n    display: block;\\n    width: 87%; */\\n    background: #f4a018;\\n    color: white;\\n    width: 200px;\\n}\\n\\n#styleStatus{\\n    color: white;\\n    background-color: #4a858b;\\n    border-radius: 8px;\\n    padding-left: 10px;\\n    padding-right: 10px;\\n    padding-top: 4px;\\n    padding-bottom: 4px;\\n    height: 30px;\\n    display: inline-block;\\n    justify-content: center;\\n    align-items: center;\\n}\\n\\n.package-id{\\n    text-align: center;\\n    border-bottom: 1px solid gainsboro;\\n    padding-bottom: 8px;\\n    margin-bottom: 0;\\n}\\n\\n.custom-row{\\n    border-bottom: 1px solid gainsboro;\\n    padding: 8px;\\n    margin-left: 0;\\n    margin-right: 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vbWVkaWNpbmUvcGFja2FnZS1kZXRhaWwvcGFja2FnZS1kZXRhaWwuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJOzs7O2lCQUlhO0lBQ2IsbUJBQW1CO0lBQ25CLFlBQVk7SUFDWixZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksWUFBWTtJQUNaLHlCQUF5QjtJQUN6QixrQkFBa0I7SUFDbEIsa0JBQWtCO0lBQ2xCLG1CQUFtQjtJQUNuQixnQkFBZ0I7SUFDaEIsbUJBQW1CO0lBQ25CLFlBQVk7SUFDWixxQkFBcUI7SUFDckIsdUJBQXVCO0lBQ3ZCLG1CQUFtQjtBQUN2Qjs7QUFDQTtJQUNJLGtCQUFrQjtJQUNsQixrQ0FBa0M7SUFDbEMsbUJBQW1CO0lBQ25CLGdCQUFnQjtBQUNwQjs7QUFDQTtJQUNJLGtDQUFrQztJQUNsQyxZQUFZO0lBQ1osY0FBYztJQUNkLGVBQWU7QUFDbkIiLCJmaWxlIjoic3JjL2FwcC9hZG1pbi9tZWRpY2luZS9wYWNrYWdlLWRldGFpbC9wYWNrYWdlLWRldGFpbC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZvcm0tY29udHJvbCB7XG4gICAgLyogbWFyZ2luLXRvcDogMTBweDtcbiAgICBtYXJnaW4tbGVmdDogOCU7XG4gICAgbWFyZ2luLXJpZ2h0OiAxNSU7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgd2lkdGg6IDg3JTsgKi9cbiAgICBiYWNrZ3JvdW5kOiAjZjRhMDE4O1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICB3aWR0aDogMjAwcHg7XG59XG5cbiNzdHlsZVN0YXR1c3tcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzRhODU4YjtcbiAgICBib3JkZXItcmFkaXVzOiA4cHg7XG4gICAgcGFkZGluZy1sZWZ0OiAxMHB4O1xuICAgIHBhZGRpbmctcmlnaHQ6IDEwcHg7XG4gICAgcGFkZGluZy10b3A6IDRweDtcbiAgICBwYWRkaW5nLWJvdHRvbTogNHB4O1xuICAgIGhlaWdodDogMzBweDtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cbi5wYWNrYWdlLWlke1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgZ2FpbnNib3JvO1xuICAgIHBhZGRpbmctYm90dG9tOiA4cHg7XG4gICAgbWFyZ2luLWJvdHRvbTogMDtcbn1cbi5jdXN0b20tcm93e1xuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCBnYWluc2Jvcm87XG4gICAgcGFkZGluZzogOHB4O1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIG1hcmdpbi1yaWdodDogMDtcbn0iXX0= */\"","module.exports = \"<app-dashboard></app-dashboard>\\n<br>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\" *ngFor=\\\"let distdata  of list\\\">\\n    <div class=\\\"col\\\">\\n      <div class=\\\"card custom-card\\\" style=\\\"padding:18px;\\\">\\n        <p style=\\\"text-align:center\\\" class=\\\"package-id\\\"><b>Package Id: </b> {{list[0].PackageId}}</p>\\n        <div class=\\\"row custom-row\\\">\\n          <div class=\\\"col\\\" style=\\\"margin-left:8%;\\\"><b>Serial No: </b> {{distdata.serial}}</div>\\n          <div class=\\\"col\\\"><b>Location: </b> {{distdata.location}}</div>\\n          <div class=\\\"col\\\"><b>Level: </b> {{distdata.level}}</div>\\n        </div><br>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col col-5\\\"><b>Package Description</b></div>\\n          <div class=\\\"col col-3\\\"></div>\\n          <div class=\\\"col col-4\\\"></div>\\n        </div><br>\\n        <div class=\\\"row mb-3\\\">\\n          <div class=\\\"col-6\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col\\\" *ngIf=\\\"packagedetails.length\\\">\\n                <p class=\\\"mb-1\\\">\\n                  <b>Packages: </b>\\n                </p>\\n                <p *ngFor=\\\"let md of packagedetails; let i = index\\\">\\n                  <span *ngFor=\\\"let mdd of md\\\">\\n                    <a [routerLink]=\\\"['/package/details',mdd.serial]\\\" target=\\\"_blank\\\">{{mdd.serial}} </a>\\n                  </span>\\n                </p>\\n              </div>\\n              <div class=\\\"col\\\" *ngIf=\\\"medicinedetails.length\\\"><b>Medicine: </b>\\n                <p class=\\\"mb-0\\\" *ngFor=\\\"let md of medicinedetails; let i = index\\\">\\n                  <span *ngFor=\\\"let mdd of md\\\">\\n                    <a [routerLink]=\\\"['/medicinedetailsdashboard',mdd.serial]\\\">{{mdd.serial}} </a>\\n                  </span>\\n                </p>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-6\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col\\\">\\n                <p class=\\\"mb-1\\\">\\n                  <b>Package Owner </b>\\n                </p>\\n                <div id=\\\"styleStatus\\\">{{owner}}</div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\" style=\\\"text-align:center;\\\">\\n            <button class=\\\"form-control btn-defult m-auto\\\" *ngIf=\\\"myrole>1\\\" (click)=\\\"editPackage(distdata._id)\\\"\\n              data-toggle=\\\"modal\\\" data-target=\\\"#exampleModalCenter\\\"> <b>Update Status</b> </button>\\n\\n\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- part 2 for medicine status -->\\n    <div class=\\\"row\\\" *ngFor=\\\"let distdata  of list2\\\">\\n      <div class=\\\"col\\\">\\n        <div class=\\\"card\\\" style=\\\"padding:18px;\\\">\\n          <!--  <p style=\\\"text-align:center\\\"><b>Medicne Id:</b> {{distdata.MedicineId}}</p> -->\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col\\\" style=\\\"margin-left:8%; text-align: left\\\">\\n              <b>Date:</b>{{distdata.time | date:'dd/MM/yyyy'}}\\n            </div>\\n            <div class=\\\"col\\\"></div>\\n            <div class=\\\"col\\\">\\n              <b>Time:</b>{{distdata.time | date:'hh:mm:ss'}}\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col\\\" style=\\\"margin-left:8%;\\\"><b>Serial No: </b> {{distdata.serial}} </div>\\n            <div class=\\\"col\\\"><b>Location: </b> {{distdata.location}}</div>\\n            <div class=\\\"col\\\"><b>Level: </b> {{distdata.level}}</div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col\\\" style=\\\"margin-left:8%; text-align: left;\\\">\\n              <b>Package Status: </b>\\n              <span id='styleStatus'>{{distdata.status}}</span>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n\\n\\n\\n\\n\\n  </div>\\n\\n\\n  <!-- Modal -->\\n  <div class=\\\"modal fade\\\" id=\\\"exampleModalCenter\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalCenterTitle\\\"\\n    aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLongTitle\\\">Status Update</h5>\\n\\n        </div>\\n        <form [formGroup]=\\\"registerForm1\\\"\\n          (ngSubmit)=\\\"medicineUpdate(editlist.serial,editlist.medicines,12,location.value,editlist.level,editlist.packages,editlist.PackageId,editlist.role,now)\\\">\\n          <div class=\\\"modal-body\\\">\\n\\n\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label style=\\\"margin-left: 35px\\\">Location</label>\\n                  <input type=\\\"text\\\" #location formControlName=\\\"location011\\\" class=\\\"form-control required\\\"\\n                    [ngClass]=\\\"{ 'is-invalid': submitted && f1.location011.errors }\\\"\\n                    placeholder=\\\"Enter Current Location\\\" maxlength=\\\"30\\\">\\n                  <div *ngIf=\\\"submitted && f1.location011.errors\\\" class=\\\"invalid-feedback\\\">\\n                    <div *ngIf=\\\"f1.location011.errors.required\\\" style=\\\"margin-left: 35px\\\">Location required </div>\\n                  </div>\\n\\n                </div>\\n              </div>\\n            </div>\\n\\n\\n          </div>\\n          <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" #completeModal data-dismiss=\\\"modal\\\">Close</button>\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save changes</button>\\n          </div>\\n        </form>\\n\\n      </div>\\n    </div>\\n  </div>\"","import { Component, OnInit,ElementRef,ViewChild  } from '@angular/core';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { Router } from '@angular/router';\nimport { Package2 } from './../package-create/addpackage2';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-package-detail',\n  templateUrl: './package-detail.component.html',\n  styleUrls: ['./package-detail.component.css']\n})\nexport class PackageDetailComponent implements OnInit {\n\n\n  registerForm1: FormGroup;\n  submitted = false;\n\n  public now: any = new Date();\n\n  base;\n  call;\n  serialvalue;\n  serialNo: any;\n  mStatus: any = Package2;\n  updateStatus;\n  list: any = [];\n  owner: any;\n  list2: any = [];\n  packagedetails: any = [];\n  medicinedetails: any = [];\n  editlist: any = [];\n  blockchain: any = [];\n  blockchain2: any = [];\n  status: any = [];\n  myrole: any = [];\n  statusValue: any;\n  itemId: any = [];\n  mypublickey: any;\n  privateKey: any;\n  myrole1;\n  firstname;\n  lastname;\n \n  @ViewChild('completeModal')completeModal: ElementRef;\n  blockchainUrl: any = this.http.blockchainUrl;\n  constructor(private route: ActivatedRoute, private router: Router, private http: AuthService, private http1: HttpClient, private formBuilder: FormBuilder) { }\n\n\n  ngOnInit() {\n    this.myrole = localStorage.getItem(\"role\");\n    this.myrole1 = localStorage.getItem(\"email\");\n    console.log(\"Email\", this.myrole1);\n    this.firstname=localStorage.getItem(\"firstName\");\n    this.lastname=localStorage.getItem(\"lastName\");\n    console.log(\"User name\", this.firstname,this.lastname);\n\n\n    console.log(\"User Role \" +this.myrole);\n\n    switch (this.myrole) {\n\n      case \"1\": {\n        this.updateStatus = \"User is Admin\";\n        break;\n      }\n\n      case \"2\": {\n        this.updateStatus = \"Status Updated by\"+ \" \" + this.firstname + \" \" + this.lastname + \" \" + \"[Manufacturer]\";\n        break;\n      }\n      case \"3\": {\n        this.updateStatus = \"Status Updated by\"+ \" \" + this.firstname + \" \" + this.lastname + \" \" + \"[Wholesaler]\";\n        break;\n      }\n      case \"4\": {\n        this.updateStatus = \"Status Updated by\"+ \" \" + this.firstname + \" \" + this.lastname + \" \" + \"[Distributor]\";\n        break;\n      }\n      case \"5\": {\n        this.updateStatus = \"Status Updated by\"+ \" \" + this.firstname + \" \" + this.lastname + \" \" + \"[Pharma]\";\n        break;\n      }\n      case \"7\": {\n        this.updateStatus = \"Status Updated by\"+ \" \" + this.firstname + \" \" + this.lastname + \" \" + \"[Transporter]\";\n        break;\n      }\n      default: {\n       console.log(\"User role not define\");\n        break;\n      }\n    }\n    \n    this.serialNo = this.route.snapshot.params['id'];\n    this.packageStatus(this.serialNo);\n    this.packageStatus2(this.serialNo);\n  \n    this.mypublickey = localStorage.getItem(\"publicKey\");\n    this.privateKey = localStorage.getItem(\"privateKey\");\n    \n\n    this.registerForm1 = this.formBuilder.group({\n      location011: ['', Validators.required],\n     \n    });\n  }\n\n\n  packageStatus(id) {\n    return this.http.getPackageStatus(id).subscribe((data) =>{  \n      this.list = data;\n      console.log(this.list);\n\t  for(var i=0;i<this.list.length;i++)\n\t  {\n\t\t  if(Array.isArray(this.list[i].packages))\n\t\t\t\tvar meds = this.list[i].packages;\n\t\t\telse\n\t\t\t\tvar meds = this.list[i].packages.split(',');\n\t\t\t\n\t\t\tif(meds.length>0)\n\t\t\t{\n\t\t\t\tfor(var j=0;j < meds.length; j++)\n\t\t\t\t{\n\t\t\t\t\tthis.http.getPackageStatus3(meds[j]).subscribe((pdata) =>{\n\t\t\t\t\t\t\n\t\t\t\t\t\tthis.packagedetails.push(pdata);\n\t\t\t\t\t\t\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(Array.isArray(this.list[i].medicines))\n\t\t\t\tvar meds = this.list[i].medicines;\n\t\t\telse\n\t\t\t\tvar meds = this.list[i].medicines.split(',');\n\t\t\t\n\t\t\tif(meds.length>0)\n\t\t\t{\n\t\t\t\tfor(var j=0;j < meds.length; j++)\n\t\t\t\t{\n\t\t\t\t\tthis.http.getMedicineStatus3(meds[j]).subscribe((mdata) =>{\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\tthis.medicinedetails.push(mdata);\n\t\t\t\t\t\t\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis.http.getUser(this.list[i].userId).subscribe((udata) =>{\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tconsole.log(udata);\n\t\t\t\t\t\n\t\t\t\t\t\t\tthis.owner = udata[0].firstName+\" \"+udata[0].lastName;\n\t\t\t\t\t\t\n\t\t\t\t\t});\n\t  }\n    })\n  }\n\n  packageStatus2(id) {\n     return this.http.getPackageStatus2(id).subscribe((data) => {\n      this.list2 = data;     \n    })\n  }\n\n  editPackage(id) {\n    this.http.editPackageStatus(id).subscribe(res => {\n      this.editlist = res;\n    \n      \n    });\n  }\n\n  get f1() { return this.registerForm1.controls; }\n\n  medicineUpdate(serial: string, me: string, br: string, location: string, level: string, \n    packages: string, pid: string, ro: string, time: string, mypublickey: string, updateStatus: string) {\n\n      console.log(\"Data\",this.myrole);\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.registerForm1.invalid) {\n      return;\n    }\n\n    let that = this;\n\n            this.mStatus = new Package2(serial, me, br, location, level, packages, pid, ro, this.now, this.mypublickey, this.updateStatus);\n            this.base = this.http.createpackage2(this.mStatus);\n            this.call = this.base.subscribe(data => {\n              alert('Status Updated');\n              let el: HTMLElement = this.completeModal.nativeElement;\n              el.click(); \n              this.packageStatus2(this.serialNo);\n            });\n    //Register User on Blockchain ==>> if \"COMMITED\" :: register in db else Mail (ERROR Message)\t\n\n    // const Metadata = {\n    //   \"action\": \"medicineStatusUpdate\",\n    //   \"payloaddata\": {\n    //     \"serialNumber\": serial,\n       \n        \n\n    //     \"physicalState\": {\n    //       \"timestamp\": this.now,\n    //       \"location\": {\n    //         \"type\": 1,\n    //         \"body\": {\n    //           \"address\": location\n    //         }\n    //       },\n    //       \"temprature\": 12,\n          \n\n    //     },\n    //     \"userRole\" :this.myrole,\n\t\t// \"level\":level\n    //   },\n    //   \"private\": this.privateKey,\n    //   \"public\": this.mypublickey\n    // }\n\n    // const httpOptions = {\n    //   headers: new HttpHeaders({\n    //     'Content-Type': 'application/json'\n    //   })\n    // };\n\n    // var x = this.http1.post(this.blockchainUrl, Metadata, httpOptions).subscribe(\n    //   (val) => {\n    //     console.log(\"POST call successful value returned in body\", val);\n    //     this.blockchain = val;\n    //     if (that.http.IsJsonString(this.blockchain.response.body)) {\n    //       JSON.parse(this.blockchain.response.body).hasOwnProperty(\"data\");\n\n    //       this.status = JSON.parse(this.blockchain.response.body);\n    //       this.statusValue = this.status.data[0].status;\n    //       this.itemId = this.status.data[0].id;\n    //       if (this.statusValue == 'COMMITTED') {\n\n    //         this.mStatus = new Package2(serial, me, br, location, level, packages, pid, ro, this.now, this.mypublickey, this.updateStatus);\n    //         this.base = this.http.createpackage2(this.mStatus);\n    //         this.call = this.base.subscribe(data => {\n    //           alert('Status Updated');\n    //           let el: HTMLElement = this.completeModal.nativeElement;\n    //           el.click(); \n    //           this.packageStatus2(this.serialNo);\n    //         });\n    //       }\n    //       else {\n    //         alert('Request Rejected');\n    //         let el: HTMLElement = this.completeModal.nativeElement;\n    //          el.click(); \n    //       }\n    //     } else {\n\n    //       that.http1.get(this.http.batchUrl +\"/batch_statuses?\" + this.blockchain.id + \"&wait\").subscribe((val) => {\n    //         this.blockchain2 = val\n    //         if (that.http.IsJsonString(this.blockchain2.body)) {\n    //           this.status = JSON.parse(this.blockchain2.body);              \n    //           this.statusValue = this.status.data[0].status;\n    //           this.itemId = this.status.data[0].id;\n    //           if (this.statusValue == 'COMMITTED') {\n    //             this.mStatus = new Package2(serial, me, br, location, level, packages, pid, ro, this.now, this.mypublickey, this.updateStatus);\n    //             this.base = this.http.createpackage2(this.mStatus);\n    //             this.call = this.base.subscribe(data => {\n    //               alert('Status Updated');\n    //               let el: HTMLElement = this.completeModal.nativeElement;\n    //               el.click(); \n    //               this.packageStatus2(this.serialNo);\n    //             });\n    //           }\n    //           else {\n    //             alert('Request Rejected');\n    //             let el: HTMLElement = this.completeModal.nativeElement;\n    //             el.click(); \n    //           }\n    //         }\n    //       })\n    //     }        \n    //   });\n  }\n}\n","module.exports = \"table {\\n    width: 100%;\\n    \\n  }\\n\\n \\n#heading{\\n    background-color: rgb(18, 50,190); \\n    color:white;\\n}\\n\\n \\n.pd{\\n  background: navy;\\n}\\n\\n \\ntd a {\\n  display:block;\\n  width:100%;\\n  background-clip: padding-box; \\n  border-radius: 5px;\\n  background-color: blue;\\n  color: white;\\n  border: 2px solid green;\\n}\\n\\n \\na {\\n  text-decoration: none !important;\\n}\\n\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vbWVkaWNpbmUvcGFja2FnZS1saXN0L3BhY2thZ2UtbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksV0FBVzs7RUFFYjs7O0FBR0Y7SUFDSSxpQ0FBaUM7SUFDakMsV0FBVztBQUNmOzs7QUFDQTtFQUNFLGdCQUFnQjtBQUNsQjs7O0FBQ0E7RUFDRSxhQUFhO0VBQ2IsVUFBVTtFQUNWLDRCQUE0QjtFQUM1QixrQkFBa0I7RUFDbEIsc0JBQXNCO0VBQ3RCLFlBQVk7RUFDWix1QkFBdUI7QUFDekI7OztBQUNBO0VBQ0UsZ0NBQWdDO0FBQ2xDIiwiZmlsZSI6InNyYy9hcHAvYWRtaW4vbWVkaWNpbmUvcGFja2FnZS1saXN0L3BhY2thZ2UtbGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIFxuICB9XG5cbiBcbiNoZWFkaW5ne1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigxOCwgNTAsMTkwKTsgXG4gICAgY29sb3I6d2hpdGU7XG59XG4ucGR7XG4gIGJhY2tncm91bmQ6IG5hdnk7XG59XG50ZCBhIHtcbiAgZGlzcGxheTpibG9jaztcbiAgd2lkdGg6MTAwJTtcbiAgYmFja2dyb3VuZC1jbGlwOiBwYWRkaW5nLWJveDsgXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogYmx1ZTtcbiAgY29sb3I6IHdoaXRlO1xuICBib3JkZXI6IDJweCBzb2xpZCBncmVlbjtcbn1cbmEge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmUgIWltcG9ydGFudDtcbn1cblxuXG4iXX0= */\"","module.exports = \"<app-dashboard></app-dashboard>\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"table-responsive\\\">\\n    <br>\\n    <table class=\\\"table table-striped table-dark table-hover text-center\\\">\\n\\n      <thead class=\\\"theme-table\\\">\\n        <tr>\\n          <th> Serial Number</th>\\n          <th>Location</th>\\n          <th>Level</th>\\n         \\n        \\n          <th>Action</th>\\n          <th></th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let x of list; let i = index\\\">\\n\\t\\t<ng-container *ngIf=\\\"(x.parent==0 || !x.parent)\\\">\\n          <td><a [routerLink]=\\\"['/package/details',x.serial]\\\" style=\\\"color:blue\\\">{{x.serial}}</a></td>\\n          <td>{{x.location}}</td>\\n          <td>{{x.level}}</td>\\n          <td><button type=\\\"button\\\" *ngIf=\\\"myrole>1\\\" (click)=\\\"deletePackage(x._id)\\\" class=\\\"btn btn-danger\\\">Delete</button></td>\\n          <td><button type=\\\"button\\\" (click)=\\\"serialId(x.serial,x.level)\\\" class=\\\"btn btn-info\\\" data-toggle=\\\"modal\\\"\\n              data-target=\\\"#exampleModalCenter\\\" *ngIf=\\\"myrole>1\\\">Send to Wholesaler</button></td>\\n\\t\\t</ng-container>\\n        </tr>\\n\\n      </tbody>\\n      <tfoot class=\\\"theme-table\\\">\\n        <tr>\\n          <th></th>\\n          <th></th>\\n          <th></th>\\n          <th></th>\\n          <th></th>\\n          <!-- <th></th> -->\\n          <!-- <th></th> -->\\n        </tr>\\n      </tfoot>\\n    </table>\\n  </div>\\n</div>\\n\\n\\n<!-- Modal -->\\n<div class=\\\"modal fade\\\" id=\\\"exampleModalCenter\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalCenterTitle\\\"\\n  aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLongTitle\\\">Package Transportation</h5>\\n\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Serial</label>\\n              <input #serial type=\\\"text\\\" [(ngModel)]=\\\"serialvalue\\\" class=\\\"form-control required\\\">\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Wholesaler</label>\\n              <select [(ngModel)]=\\\"wId1\\\" class=\\\"form-control\\\">\\n                <option *ngFor=\\\"let wid of wlist\\\" [value]=\\\"wid.publicKey\\\">{{wid.firstName}}</option>\\n              </select>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Transporter</label>\\n              <select [(ngModel)]=\\\"tId1\\\" class=\\\"form-control\\\">\\n                <option *ngFor=\\\"let wid of tlist\\\" [value]=\\\"wid.userId\\\">{{wid.firstName}}</option>\\n              </select>\\n            </div>\\n          </div>\\n        </div>\\n\\n\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" #completeModal data-dismiss=\\\"modal\\\">Close</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"mTransection(serial.value,wId1,tId1)\\\">Send</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport { AuthService } from 'src/app/service/auth.service';\n// import { Medicine } from '../medicine-create/addmedicine';\nimport { Transection } from './transection';\nimport { Router } from '@angular/router';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\n@Component({\n  selector: 'app-package-list',\n  templateUrl: './package-list.component.html',\n  styleUrls: ['./package-list.component.css']\n})\nexport class PackageListComponent implements OnInit {\n\n  selectedWId: string = '';\n  selectedTId: string = '';\n  base;\n  call;\n  serialvalue: any = \" \";\n  levelvalue: any = \"\";\n  wlist: any = [];\n  tlist: any = [];\n  wid1: any = '';\n  tid1: any = '';\n  list: any = [];\n  transection: any = Transection;\n  \n  blockchain: any = [];\n  blockchain2: any = [];\n  status: any = [];\n  statusValue: any;\n  itemId: any = [];\n  mypublickey: any;\n  privateKey: any;\n  myrole;\n  userId;\n  \n  \n  \n  @ViewChild('completeModal') completeModal: ElementRef;\n  blockchainUrl: any = this.http.blockchainUrl;\n  constructor(private http: AuthService, private http1: HttpClient, private router: Router) { }\n\n  ngOnInit() {\n    this.packagelist();\n    this.allWholesaler();\n    this.allTransporter();\n    this.mypublickey = localStorage.getItem(\"publicKey\");\n\n    this.privateKey = localStorage.getItem(\"privateKey\");\n    this.myrole= localStorage.getItem(\"role\");\n    this.userId = localStorage.getItem(\"userId\");\n    console.log(\"User Idhhhhhhh\", this.userId);\n    \n    console.log(this.myrole);\n  }\n\n  selectChangeHandler1(event: any) {\n    //update the ui\n    this.selectedWId = event.target.value;\n\n  }\n\n  selectChangeHandler2(event: any) {\n    //update the ui\n    this.selectedTId = event.target.value;\n  }\n\n  serialId(serialId,level) {\n    this.serialvalue = serialId;\n\tthis.levelvalue = level;\n  }\n\n \n\n  packagelist() {\n    this.myrole= localStorage.getItem(\"role\");\n   \n    if(this.myrole == 1){      \n      return this.http.getPackageList().subscribe((data) => {\n        this.list = data;\n        console.log(\"All Package\",this.list);\n      });\n\n    }else{\n      return this.http.getPackageUserId().subscribe((data) => {\n        console.log(data);\n        this.list = data;\n        console.log(\"user Package\",this.list);\n      });\n\n    }\n    \n  }\n\n  deletePackage(id) {\n    if (confirm('Are you sure to delete')) {\n      this.http.deletePackage(id).subscribe(res => {\n\n        this.packagelist(); \n\n      });\n    }\n  }\n\n  allWholesaler() {\n    return this.http.getallWholesalerUser().subscribe(data => {\n      this.wlist = data;\n      console.log(this.wlist);\n    });\n  }\n\n  allTransporter() {\n    return this.http.getallTransporterUser().subscribe(data => {\n      this.tlist = data;\n      console.log(this.tlist);\n    });\n  }\n\n\n\n\n  mTransection(serial: string, wholesalerId: string, transpoterId: string) {\n    let that = this;\n    console.log(serial, wholesalerId, transpoterId);\n    //Register User on Blockchain ==>> if \"COMMITED\" :: register in db else Mail (ERROR Message)\t\n    this.transection = new Transection(serial, wholesalerId, transpoterId);\n    this.base = this.http.medicineTransection(this.transection);\n                this.call = this.base.subscribe(\n                  data => {\n\n                    alert('Request Accepted');\n                    let el: HTMLElement = this.completeModal.nativeElement;\n                    el.click();\n\n                  });\n    // const Metadata = {\n    //   \"action\": \"sendToWholesaler\",\n    //   \"payloaddata\": {\n    //     \"serialNumber\": serial,\n    //     \"wholesaler\": {\n    //       \"address\": wholesalerId,\n    //       \"comment\": \"In Transaction\"\n    //     },\n    //     \"transporterid\": transpoterId,\n\t\t// \"level\":this.levelvalue\n    //   },\n\t  \n    //   \"private\": this.privateKey,\n    //   \"public\": this.mypublickey\n    // }\n\n    // const httpOptions = {\n    //   headers: new HttpHeaders({\n    //     'Content-Type': 'application/json'\n    //   })\n    // };\n\n    // var x = this.http1.post(this.blockchainUrl, Metadata, httpOptions).subscribe(\n    //   (val) => {\n    //     console.log(\"POST call successful value returned in body\", val);\n    //     this.blockchain = val;\n    //     if (that.http.IsJsonString(this.blockchain.response.body)) {\n    //       JSON.parse(this.blockchain.response.body).hasOwnProperty(\"data\");\n    //       JSON.parse(this.blockchain.response.body).hasOwnProperty(\"data\");\n    //       console.log(JSON.parse);\n    //       this.status = JSON.parse(this.blockchain.response.body);\n    //       this.statusValue = this.status.data[0].status;\n    //       this.itemId = this.status.data[0].id;\n    //       if (this.statusValue == 'COMMITTED') {\n\n    //         this.transection = new Transection(serial, wholesalerId, transpoterId);\n    //         this.base = this.http.medicineTransection(this.transection);\n    //         this.call = this.base.subscribe(\n    //           data => {\n    //             alert('Request Accepted');\n    //             let el: HTMLElement = this.completeModal.nativeElement;\n    //             el.click();\n\n    //           });\n    //       }\n    //       else {\n    //         alert('Request Rejected');\n    //         let el: HTMLElement = this.completeModal.nativeElement;\n    //         el.click();\n    //       }\n    //     } else {\n\n    //       that.http1.get(this.blockchainUrl+\"/batch_statuses?\" + this.blockchain.id + \"&wait\").subscribe((val) => {\n    //         this.blockchain2 = val\n    //         if (that.http.IsJsonString(this.blockchain2.body)) {\n    //           this.status = JSON.parse(this.blockchain2.body);\n    //           console.log('json value2', this.status.data[0].status);\n    //           this.statusValue = this.status.data[0].status;\n    //           this.itemId = this.status.data[0].id;\n    //           if (this.statusValue == 'COMMITTED') {\n    //             this.base = this.http.medicineTransection(this.transection);\n    //             this.call = this.base.subscribe(\n    //               data => {\n\n    //                 alert('Request Accepted');\n    //                 let el: HTMLElement = this.completeModal.nativeElement;\n    //                 el.click();\n\n    //               });\n    //           }\n    //           else {\n    //             alert('Request Rejected');\n    //             let el: HTMLElement = this.completeModal.nativeElement;\n    //             el.click();\n    //           }\n    //         }\n    //       })\n    //     }\n    //     // }).catch(function (err) {\n    //     //   console.log(err.message);\n    //   });\n  }\n}\n","export class Transection {\n    serial: string;\t\n    wholesalerId:string;\n    transporterId:string;   \n\n\tconstructor(   \n         serial: string,\n        wholesalerId:string,\n        transporterId:string,\n       )\n        {\n            this.serial=serial;\n            this.wholesalerId=wholesalerId;\n            this.transporterId=transporterId;           \n\t\n    \t}\n}\n","module.exports = \"table {\\n    width: 100%;\\n    \\n  }\\n\\n \\n#heading{\\n    background-color: rgb(18, 50,190); \\n    color:white;\\n}\\n\\n \\n.pd{\\n  background: navy;\\n}\\n\\n \\ntd a {\\n  display:block;\\n  width:100%;\\n  background-clip: padding-box; \\n  border-radius: 5px;\\n  background-color: blue;\\n  color: white;\\n  border: 2px solid green;\\n}\\n\\n \\na {\\n  text-decoration: none !important;\\n}\\n\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vbWVkaWNpbmUvcGFja2FnZS1yZXBvcnQvcGFja2FnZS1yZXBvcnQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7O0VBRWI7OztBQUdGO0lBQ0ksaUNBQWlDO0lBQ2pDLFdBQVc7QUFDZjs7O0FBQ0E7RUFDRSxnQkFBZ0I7QUFDbEI7OztBQUNBO0VBQ0UsYUFBYTtFQUNiLFVBQVU7RUFDViw0QkFBNEI7RUFDNUIsa0JBQWtCO0VBQ2xCLHNCQUFzQjtFQUN0QixZQUFZO0VBQ1osdUJBQXVCO0FBQ3pCOzs7QUFDQTtFQUNFLGdDQUFnQztBQUNsQyIsImZpbGUiOiJzcmMvYXBwL2FkbWluL21lZGljaW5lL3BhY2thZ2UtcmVwb3J0L3BhY2thZ2UtcmVwb3J0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgXG4gIH1cblxuIFxuI2hlYWRpbmd7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDE4LCA1MCwxOTApOyBcbiAgICBjb2xvcjp3aGl0ZTtcbn1cbi5wZHtcbiAgYmFja2dyb3VuZDogbmF2eTtcbn1cbnRkIGEge1xuICBkaXNwbGF5OmJsb2NrO1xuICB3aWR0aDoxMDAlO1xuICBiYWNrZ3JvdW5kLWNsaXA6IHBhZGRpbmctYm94OyBcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBibHVlO1xuICBjb2xvcjogd2hpdGU7XG4gIGJvcmRlcjogMnB4IHNvbGlkIGdyZWVuO1xufVxuYSB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZSAhaW1wb3J0YW50O1xufVxuXG5cbiJdfQ== */\"","module.exports = \"<app-dashboard></app-dashboard>\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"table-responsive\\\">\\n    <br>\\n    <table class=\\\"table table-striped table-dark table-hover text-center\\\">\\n\\n      <thead class=\\\"theme-table\\\">\\n\\t\\t<tr>\\n\\t\\t<th colspan=\\\"3\\\"></th>\\n\\t\\t<th><button type=\\\"button\\\"   (click)=\\\"exporttocsv()\\\"  class=\\\"btn btn-primary\\\" >Export as CSV</button></th>\\n\\t\\t</tr>\\n        <tr>\\n          <th> Serial Number</th>\\n          <th>Location</th>\\n          <th>Level</th>\\n          <th>Time</th>\\n          \\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let x of list; let i = index\\\">\\n          <td><a [routerLink]=\\\"['/package/details',x.serial]\\\" style=\\\"color:blue\\\">{{x.serial}}</a></td>\\n          <td>{{x.location}}</td>\\n          <td>{{x.level}}</td>\\n          <td>{{x.time | date: 'dd/MM/yyyy h:mm:ss a'}}</td>\\n        </tr>\\n\\n      </tbody>\\n      <tfoot class=\\\"theme-table\\\">\\n        \\t\\t<tr>\\n\\t\\t<th colspan=\\\"3\\\"></th>\\n\\t\\t<th><button type=\\\"button\\\"   (click)=\\\"exporttocsv()\\\"  class=\\\"btn btn-primary\\\" >Export as CSV</button></th>\\n\\t\\t</tr>\\n\\n      </tfoot>\\n    </table>\\n  </div>\\n</div>\\n\\n\\n<!-- Modal -->\\n<div class=\\\"modal fade\\\" id=\\\"exampleModalCenter\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalCenterTitle\\\"\\n  aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLongTitle\\\">Package Transportation</h5>\\n\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Serial</label>\\n              <input #serial type=\\\"text\\\" [(ngModel)]=\\\"serialvalue\\\" class=\\\"form-control required\\\">\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Wholesailer</label>\\n              <select [(ngModel)]=\\\"wId1\\\" class=\\\"form-control\\\">\\n                <option *ngFor=\\\"let wid of wlist\\\" [value]=\\\"wid.publicKey\\\">{{wid.firstName}}</option>\\n              </select>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Transporter</label>\\n              <select [(ngModel)]=\\\"tId1\\\" class=\\\"form-control\\\">\\n                <option *ngFor=\\\"let wid of tlist\\\" [value]=\\\"wid.userId\\\">{{wid.firstName}}</option>\\n              </select>\\n            </div>\\n          </div>\\n        </div>\\n\\n\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" #completeModal data-dismiss=\\\"modal\\\">Close</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"mTransection(serial.value,wId1,tId1)\\\">Send</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport { AuthService } from 'src/app/service/auth.service';\n// import { Medicine } from '../medicine-create/addmedicine';\nimport { Transection } from './transection';\nimport { Router } from '@angular/router';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Angular5Csv } from 'angular5-csv/dist/Angular5-csv';\n@Component({\n  selector: 'app-package-report',\n  templateUrl: './package-report.component.html',\n  styleUrls: ['./package-report.component.css']\n})\nexport class PackageReportComponent implements OnInit {\n\n  selectedWId: string = '';\n  selectedTId: string = '';\n  base;\n  call;\n  serialvalue: any = \" \";\n  levelvalue: any = \"\";\n  wlist: any = [];\n  tlist: any = [];\n  wid1: any = '';\n  tid1: any = '';\n  list: any = [];\n  meds: any = [];\n  transection: any = Transection;\n  \n  blockchain: any = [];\n  blockchain2: any = [];\n  status: any = [];\n  statusValue: any;\n  itemId: any = [];\n  mypublickey: any;\n  privateKey: any;\n  myrole;\n  userId;\n  \n  \n  \n  @ViewChild('completeModal') completeModal: ElementRef;\n  blockchainUrl: any = this.http.blockchainUrl;\n  constructor(private http: AuthService, private http1: HttpClient, private router: Router) { }\n\n  ngOnInit() {\n    this.packagelist();\n    this.allWholesaler();\n    this.allTransporter();\n    this.mypublickey = localStorage.getItem(\"publicKey\");\n\n    this.privateKey = localStorage.getItem(\"privateKey\");\n    this.myrole= localStorage.getItem(\"role\");\n    this.userId = localStorage.getItem(\"userId\");\n    console.log(\"User Idhhhhhhh\", this.userId);\n    \n    console.log(this.myrole);\n  }\n\n  selectChangeHandler1(event: any) {\n    //update the ui\n    this.selectedWId = event.target.value;\n\n  }\n\n  selectChangeHandler2(event: any) {\n    //update the ui\n    this.selectedTId = event.target.value;\n  }\n\n  serialId(serialId,level) {\n    this.serialvalue = serialId;\n\tthis.levelvalue = level;\n  }\n\n \n\n  packagelist() {\n    this.myrole= localStorage.getItem(\"role\");\n   \n    if(this.myrole == 1){      \n      return this.http.getPackageList().subscribe((data) => {\n        this.list = data;\n        console.log(\"All Package\",this.list);\n      });\n\n    }else{\n      return this.http.getPackageUserId().subscribe((data) => {\n        console.log(data);\n        this.list = data;\n        console.log(\"user Package\",this.list);\n      });\n\n    }\n    \n  }\n\n  deletePackage(id) {\n    if (confirm('Are you sure to delete')) {\n      this.http.deletePackage(id).subscribe(res => {\n\n        this.packagelist(); \n\n      });\n    }\n  }\n\n  allWholesaler() {\n    return this.http.getallWholesalerUser().subscribe(data => {\n      this.wlist = data;\n      console.log(this.wlist);\n    });\n  }\n\n  allTransporter() {\n    return this.http.getallTransporterUser().subscribe(data => {\n      this.tlist = data;\n      console.log(this.tlist);\n    });\n  }\n\n  \n  \n  exporttocsv()\n  {\n\t  var data = [];\n\t  var  datarow = {};\n\t\n\tif(Array.isArray(this.list))\n\t\t\tthis.meds = this.list;\n\t\telse\n\t\t\tthis.meds = this.list.split(',');\n\t\t\n\t  for(var i=0;i<=this.meds.length;i++)\n\t  {\n\t\t  console.log(\"meds==\" + this.meds[i]);\n\t\t  if(typeof this.meds[i] != \"undefined\")\n\t\t  {\n\t\t\tdatarow = {\n\t\t\tserial:this.meds[i].serial,\n\t\t\tlocation: this.meds[i].location,\n\t\t\tlevel: this.meds[i].level,\n\t\t\ttime: this.meds[i].time,\n\t\t\t};\n\t\t\tdata.push(datarow);\n\t\t  }\n\t  }\n\n\t\tvar options = {\n\t\tfieldSeparator: ',',\n\t\tquoteStrings: '\"',\n\t\tdecimalseparator: '.',\n\t\tshowLabels: true,\n\t\tshowTitle: true,\n\t\theaders: [\"Serial Number\",\"Location\",\"Level\", \"Date/Time\"]\n\t\t};\n\n\t\tnew Angular5Csv(data, 'Report1',options);\n\n\t\treturn true;\n  }\n\n\n\n  mTransection(serial: string, wholesalerId: string, transpoterId: string) {\n    let that = this;\n    console.log(serial, wholesalerId, transpoterId);\n    //Register User on Blockchain ==>> if \"COMMITED\" :: register in db else Mail (ERROR Message)\t\n    this.transection = new Transection(serial, wholesalerId, transpoterId);\n    this.base = this.http.medicineTransection(this.transection);\n                this.call = this.base.subscribe(\n                  data => {\n\n                    alert('Request Accepted');\n                    let el: HTMLElement = this.completeModal.nativeElement;\n                    el.click();\n\n                  });\n    // const Metadata = {\n    //   \"action\": \"sendToWholesaler\",\n    //   \"payloaddata\": {\n    //     \"serialNumber\": serial,\n    //     \"wholesaler\": {\n    //       \"address\": wholesalerId,\n    //       \"comment\": \"In Transaction\"\n    //     },\n    //     \"transporterid\": transpoterId,\n\t\t// \"level\":this.levelvalue\n    //   },\n\t  \n    //   \"private\": this.privateKey,\n    //   \"public\": this.mypublickey\n    // }\n\n    // const httpOptions = {\n    //   headers: new HttpHeaders({\n    //     'Content-Type': 'application/json'\n    //   })\n    // };\n\n    // var x = this.http1.post(this.blockchainUrl, Metadata, httpOptions).subscribe(\n    //   (val) => {\n    //     console.log(\"POST call successful value returned in body\", val);\n    //     this.blockchain = val;\n    //     if (that.http.IsJsonString(this.blockchain.response.body)) {\n    //       JSON.parse(this.blockchain.response.body).hasOwnProperty(\"data\");\n    //       JSON.parse(this.blockchain.response.body).hasOwnProperty(\"data\");\n    //       console.log(JSON.parse);\n    //       this.status = JSON.parse(this.blockchain.response.body);\n    //       this.statusValue = this.status.data[0].status;\n    //       this.itemId = this.status.data[0].id;\n    //       if (this.statusValue == 'COMMITTED') {\n\n    //         this.transection = new Transection(serial, wholesalerId, transpoterId);\n    //         this.base = this.http.medicineTransection(this.transection);\n    //         this.call = this.base.subscribe(\n    //           data => {\n    //             alert('Request Accepted');\n    //             let el: HTMLElement = this.completeModal.nativeElement;\n    //             el.click();\n\n    //           });\n    //       }\n    //       else {\n    //         alert('Request Rejected');\n    //         let el: HTMLElement = this.completeModal.nativeElement;\n    //         el.click();\n    //       }\n    //     } else {\n\n    //       that.http1.get(this.blockchainUrl+\"/batch_statuses?\" + this.blockchain.id + \"&wait\").subscribe((val) => {\n    //         this.blockchain2 = val\n    //         if (that.http.IsJsonString(this.blockchain2.body)) {\n    //           this.status = JSON.parse(this.blockchain2.body);\n    //           console.log('json value2', this.status.data[0].status);\n    //           this.statusValue = this.status.data[0].status;\n    //           this.itemId = this.status.data[0].id;\n    //           if (this.statusValue == 'COMMITTED') {\n    //             this.base = this.http.medicineTransection(this.transection);\n    //             this.call = this.base.subscribe(\n    //               data => {\n\n    //                 alert('Request Accepted');\n    //                 let el: HTMLElement = this.completeModal.nativeElement;\n    //                 el.click();\n\n    //               });\n    //           }\n    //           else {\n    //             alert('Request Rejected');\n    //             let el: HTMLElement = this.completeModal.nativeElement;\n    //             el.click();\n    //           }\n    //         }\n    //       })\n    //     }\n    //     // }).catch(function (err) {\n    //     //   console.log(err.message);\n    //   });\n  }\n}\n","export class Transection {\n    serial: string;\t\n    wholesalerId:string;\n    transporterId:string;   \n\n\tconstructor(   \n         serial: string,\n        wholesalerId:string,\n        transporterId:string,\n       )\n        {\n            this.serial=serial;\n            this.wholesalerId=wholesalerId;\n            this.transporterId=transporterId;           \n\t\n    \t}\n}\n","module.exports = \"table {\\n    width: 100%;\\n    background-color: white;\\n\\n  }\\n\\n \\n#heading{\\n    background-color: rgb(18, 50,190); \\n    color:white;\\n}\\n\\n \\ntd {\\n  background: none;\\n  border-bottom-color: #b5b3b3;\\n  border-color: #454d55 !important;\\n  \\n}\\n\\n \\nth{\\n  border: none !important;\\n  background-color: #3d6d79; \\n  color:White;\\n  font-family: Muli,Helvetica Neue,Arial,sans-serif;\\n  font-weight: 600;\\n}\\n\\n \\nbutton:hover{\\n  border: 1px #454d55;\\n  \\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vbm90aWZpY2F0aW9uL25vdGlmaWNhdGlvbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksV0FBVztJQUNYLHVCQUF1Qjs7RUFFekI7OztBQUdGO0lBQ0ksaUNBQWlDO0lBQ2pDLFdBQVc7QUFDZjs7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsNEJBQTRCO0VBQzVCLGdDQUFnQzs7QUFFbEM7OztBQUdBO0VBQ0UsdUJBQXVCO0VBQ3ZCLHlCQUF5QjtFQUN6QixXQUFXO0VBQ1gsaURBQWlEO0VBQ2pELGdCQUFnQjtBQUNsQjs7O0FBRUE7RUFDRSxtQkFBbUI7O0FBRXJCIiwiZmlsZSI6InNyYy9hcHAvYWRtaW4vbm90aWZpY2F0aW9uL25vdGlmaWNhdGlvbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuXG4gIH1cblxuIFxuI2hlYWRpbmd7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDE4LCA1MCwxOTApOyBcbiAgICBjb2xvcjp3aGl0ZTtcbn1cblxudGQge1xuICBiYWNrZ3JvdW5kOiBub25lO1xuICBib3JkZXItYm90dG9tLWNvbG9yOiAjYjViM2IzO1xuICBib3JkZXItY29sb3I6ICM0NTRkNTUgIWltcG9ydGFudDtcbiAgXG59XG5cbiBcbnRoe1xuICBib3JkZXI6IG5vbmUgIWltcG9ydGFudDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzNkNmQ3OTsgXG4gIGNvbG9yOldoaXRlO1xuICBmb250LWZhbWlseTogTXVsaSxIZWx2ZXRpY2EgTmV1ZSxBcmlhbCxzYW5zLXNlcmlmO1xuICBmb250LXdlaWdodDogNjAwO1xufVxuXG5idXR0b246aG92ZXJ7XG4gIGJvcmRlcjogMXB4ICM0NTRkNTU7XG4gIFxufSJdfQ== */\"","module.exports = \"<app-dashboard></app-dashboard>\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"table-responsive\\\">\\n    <br>\\n    <table class=\\\"table table-striped table-hover text-center\\\">\\n      <thead class=\\\"\\\">\\n        <tr>\\n          <th>Notification</th>\\n          <th>Date</th>\\n          <th>Action</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <ng-container *ngIf=\\\"!loading && list && list.length===0\\\">\\n          <tr>\\n            <td colspan=\\\"3\\\"> \\n              Notification not found\\n            </td>\\n          </tr>\\n        </ng-container>\\n        <ng-container *ngIf=\\\"!loading && list && list.length > 0\\\">\\n          <tr *ngFor=\\\"let x of list; let i = index\\\">\\n            <td style=\\\"width: 60%;\\\"><span>{{x.notification}}</span></td>\\n            <td><span>{{x.edate | date: 'dd/MM/yyyy h:mm:ss a'}}</span></td>\\n            <td><button type=\\\"button\\\" (click)=\\\"deleteNotification(x._id)\\\" class=\\\"btn btn-danger\\\">Delete</button></td>\\n          </tr>\\n        </ng-container>\\n      </tbody>\\n      <tfoot class=\\\"\\\">\\n        <tr>\\n          <th></th>\\n          <th></th>\\n          <th></th>\\n        </tr>\\n      </tfoot>\\n    </table>\\n  </div>\\n</div>\"","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { Router } from '@angular/router';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\n@Component({\n  selector: 'app-notification-list',\n  templateUrl: './notification.component.html',\n  styleUrls: ['./notification.component.css']\n})\nexport class NotificationComponent implements OnInit {\n\n  selectedWId: string = '';\n  selectedTId: string = '';\n  base;\n  call;\n  serialvalue: any = \" \";\n  wlist: any = [];\n  tlist: any = [];\n  wid1: any = '';\n  tid1: any = '';\n  list: any = [];\n\n  blockchain: any = [];\n  blockchain2: any = [];\n  status: any = [];\n  statusValue: any;\n  itemId: any = [];\n  mypublickey: any;\n  privateKey: any;\n  myrole;\n  userId;\n  user: any = [];\n\n\n  @ViewChild('completeModal') completeModal: ElementRef;\n  loading:boolean;\n  constructor(private http: AuthService, private http1: HttpClient, private router: Router) { }\n\n  ngOnInit() {\n    this.notification();\n\n    this.mypublickey = localStorage.getItem(\"publicKey\");\n\n    this.privateKey = localStorage.getItem(\"privateKey\");\n    this.myrole = localStorage.getItem(\"role\");\n    this.userId = localStorage.getItem(\"userId\");\n    console.log(\"User Idhhhhhhh\", this.userId);\n\n    console.log(this.myrole);\n  }\n\n  selectChangeHandler1(event: any) {\n    //update the ui\n    this.selectedWId = event.target.value;\n\n  }\n\n  selectChangeHandler2(event: any) {\n    //update the ui\n    this.selectedTId = event.target.value;\n  }\n\n  serialId(serialId) {\n    this.serialvalue = serialId;\n  }\n\n\n\n  notification() {\n    this.myrole = localStorage.getItem(\"role\");\n    this.loading = true;\n    if (this.myrole == 1) {\n      this.loading = false;\n      this.http.getvalidUser().subscribe((data) => {\n        this.user = data;\n      });\n      return this.http.getNotification().subscribe((data) => {\n        this.list = data;\n        console.log(\"All Notification\", this.list);\n      });\n\n\n\n    } else {\n      this.loading = false;\n      return this.http.getNotificationUserId().subscribe((data) => {\n        console.log(data);\n        this.list = data;\n        console.log(\"user Notification\", this.list);\n      });\n\n    }\n\n  }\n\n  deleteNotification(id) {\n    if (confirm('Are you sure to delete')) {\n      this.http.deleteNotification(id).subscribe(res => {\n\n        this.notification();\n\n      });\n    }\n  }\n\n}\n","module.exports = \"table {\\n    width: 100%;\\n    background-color: white;\\n  }\\n\\n  \\n\\ntd {\\n  background: none;\\n  border-bottom-color: #b5b3b3;\\n  border-color: #454d55 !important;\\n}\\n\\n  \\n\\nth{\\n  border: none !important;\\n  background-color: #3d6d79; \\n  color:White;\\n  font-family: Muli,Helvetica Neue,Arial,sans-serif;\\n  font-weight: 600;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vdXNlcnJvbGUvZGlzdHJpYnV0b3JkYXNoYm9hcmQvZGlzdHJpYnV0b3JkYXNoYm9hcmQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7SUFDWCx1QkFBdUI7RUFDekI7Ozs7QUFJRjtFQUNFLGdCQUFnQjtFQUNoQiw0QkFBNEI7RUFDNUIsZ0NBQWdDO0FBQ2xDOzs7O0FBR0E7RUFDRSx1QkFBdUI7RUFDdkIseUJBQXlCO0VBQ3pCLFdBQVc7RUFDWCxpREFBaUQ7RUFDakQsZ0JBQWdCO0FBQ2xCIiwiZmlsZSI6InNyYy9hcHAvYWRtaW4vdXNlcnJvbGUvZGlzdHJpYnV0b3JkYXNoYm9hcmQvZGlzdHJpYnV0b3JkYXNoYm9hcmQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgfVxuXG4gIFxuXG50ZCB7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG4gIGJvcmRlci1ib3R0b20tY29sb3I6ICNiNWIzYjM7XG4gIGJvcmRlci1jb2xvcjogIzQ1NGQ1NSAhaW1wb3J0YW50O1xufVxuXG4gXG50aHtcbiAgYm9yZGVyOiBub25lICFpbXBvcnRhbnQ7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzZDZkNzk7IFxuICBjb2xvcjpXaGl0ZTtcbiAgZm9udC1mYW1pbHk6IE11bGksSGVsdmV0aWNhIE5ldWUsQXJpYWwsc2Fucy1zZXJpZjtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbn0iXX0= */\"","module.exports = \"<app-dashboard></app-dashboard>\\n<div class=\\\"container\\\"> \\n  <h2 class=\\\"text-center\\\">List of Distributors</h2>\\n  <div class=\\\"table-responsive\\\">\\n  <table  class=\\\"table table-striped table-hover text-center\\\">\\n  \\t<thead class=\\\"theme-table\\\">\\n      \\n          <tr>\\n              <th>User Name</th>\\n              <th>Mobile No.</th>\\n              <th>Email</th>\\n              <th>Role</th>\\n\\t\\t\\t  \\n              \\n              \\n          </tr>\\n     </thead> \\n  \\t <tbody>\\n  \\t \\t<tr *ngFor=\\\"let distdata of dlist\\\" >\\n    \\t\\n        <td>{{distdata.firstName}} {{distdata.lastName}}</td>\\n        <td>{{distdata.mobileNo}}</td>\\n        <td>{{distdata.email}}</td>\\n        <td>{{distdata.role}}</td>       \\n        \\n   \\t\\t </tr>\\n\\n   \\t\\t\\n\\n    \\n  </tbody>\\n   <tfoot class=\\\"theme-table\\\"><tr><th></th><th></th><th></th><th></th></tr></tfoot>\\n </table>\\n</div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/service/auth.service';\n\n@Component({\n  selector: 'app-distributordashboard',\n  templateUrl: './distributordashboard.component.html',\n  styleUrls: ['./distributordashboard.component.css']\n})\nexport class DistributordashboardComponent implements OnInit {\n  dlist:any=[];\n\n  constructor(private httpuser: AuthService) { }\n\n  ngOnInit() {\n    this.allDistributer();\n  }\n  allDistributer() {\n    return this.httpuser.getallDistributerUser().subscribe(data => {\n      this.dlist = data; \n  console.log(this.dlist);\t  \n    });\n  }\n\n}\n","module.exports = \"table {\\n    width: 100%;\\n    background-color: white;\\n  }\\n\\n  \\n\\ntd {\\n  background: none;\\n  border-bottom-color: #b5b3b3;\\n  border-color: #454d55 !important;\\n}\\n\\n  \\n\\nth{\\n  border: none !important;\\n  background-color: #3d6d79; \\n  color:White;\\n  font-family: Muli,Helvetica Neue,Arial,sans-serif;\\n  font-weight: 600;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vdXNlcnJvbGUvbWFudWZhY3R1cmVkYXNoYm9hcmQvbWFudWZhY3R1cmVkYXNoYm9hcmQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7SUFDWCx1QkFBdUI7RUFDekI7Ozs7QUFJRjtFQUNFLGdCQUFnQjtFQUNoQiw0QkFBNEI7RUFDNUIsZ0NBQWdDO0FBQ2xDOzs7O0FBR0E7RUFDRSx1QkFBdUI7RUFDdkIseUJBQXlCO0VBQ3pCLFdBQVc7RUFDWCxpREFBaUQ7RUFDakQsZ0JBQWdCO0FBQ2xCIiwiZmlsZSI6InNyYy9hcHAvYWRtaW4vdXNlcnJvbGUvbWFudWZhY3R1cmVkYXNoYm9hcmQvbWFudWZhY3R1cmVkYXNoYm9hcmQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgfVxuXG4gIFxuXG50ZCB7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG4gIGJvcmRlci1ib3R0b20tY29sb3I6ICNiNWIzYjM7XG4gIGJvcmRlci1jb2xvcjogIzQ1NGQ1NSAhaW1wb3J0YW50O1xufVxuXG4gXG50aHtcbiAgYm9yZGVyOiBub25lICFpbXBvcnRhbnQ7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzZDZkNzk7IFxuICBjb2xvcjpXaGl0ZTtcbiAgZm9udC1mYW1pbHk6IE11bGksSGVsdmV0aWNhIE5ldWUsQXJpYWwsc2Fucy1zZXJpZjtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbn0iXX0= */\"","module.exports = \"<app-dashboard></app-dashboard>\\n\\n<div class=\\\"container\\\"> \\n    <h2 class=\\\"text-center\\\">List of Manufactures</h2>\\n    <div class=\\\"table-responsive\\\">\\n    <table  class=\\\"table table-striped table-hover text-center\\\">\\n        <thead class=\\\"theme-table\\\">\\n            <tr>\\n                <th>User Name</th>\\n                <th>Mobile No.</th>\\n                <th>Email</th>\\n                <th>Role</th>\\n            </tr>\\n       </thead> \\n         <tbody>\\n             <tr *ngFor=\\\"let distdata of mlist\\\" >\\n                <td>{{distdata.firstName}} {{distdata.lastName}}</td>\\n                <td>{{distdata.mobileNo}}</td>\\n                <td>{{distdata.email}}</td>\\n                <td>{{distdata.role}}</td>       \\n              </tr>\\n    </tbody>\\n     <tfoot class=\\\"theme-table\\\"><tr><th></th><th></th><th></th><th></th></tr></tfoot>\\n   </table>\\n  </div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/service/auth.service';\n\n@Component({\n  selector: 'app-manufacturedashboard',\n  templateUrl: './manufacturedashboard.component.html',\n  styleUrls: ['./manufacturedashboard.component.css']\n})\nexport class ManufacturedashboardComponent implements OnInit {\n\n  mlist:any = [];\n\n  constructor(private httpuser: AuthService) { }\n\n  ngOnInit() {\n    this.allManufacture();\n    \n  }\n \n  allManufacture() {\n    return this.httpuser.getallManufactureUser().subscribe(data => {\n      this.mlist = data;\n      console.log(this.mlist);\n    });\n  }\n\n\n}\n","module.exports = \"table {\\n    width: 100%;\\n    background-color: white;\\n  }\\n\\n  \\n\\ntd {\\n  background: none;\\n  border-bottom-color: #b5b3b3;\\n  border-color: #454d55 !important;\\n}\\n\\n  \\n\\nth{\\n  border: none !important;\\n  background-color: #3d6d79; \\n  color:White;\\n  font-family: Muli,Helvetica Neue,Arial,sans-serif;\\n  font-weight: 600;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vdXNlcnJvbGUvcGhhcm1hZGFzaGJvYXJkL3BoYXJtYWRhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksV0FBVztJQUNYLHVCQUF1QjtFQUN6Qjs7OztBQUlGO0VBQ0UsZ0JBQWdCO0VBQ2hCLDRCQUE0QjtFQUM1QixnQ0FBZ0M7QUFDbEM7Ozs7QUFHQTtFQUNFLHVCQUF1QjtFQUN2Qix5QkFBeUI7RUFDekIsV0FBVztFQUNYLGlEQUFpRDtFQUNqRCxnQkFBZ0I7QUFDbEIiLCJmaWxlIjoic3JjL2FwcC9hZG1pbi91c2Vycm9sZS9waGFybWFkYXNoYm9hcmQvcGhhcm1hZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gIH1cblxuICBcblxudGQge1xuICBiYWNrZ3JvdW5kOiBub25lO1xuICBib3JkZXItYm90dG9tLWNvbG9yOiAjYjViM2IzO1xuICBib3JkZXItY29sb3I6ICM0NTRkNTUgIWltcG9ydGFudDtcbn1cblxuIFxudGh7XG4gIGJvcmRlcjogbm9uZSAhaW1wb3J0YW50O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjM2Q2ZDc5OyBcbiAgY29sb3I6V2hpdGU7XG4gIGZvbnQtZmFtaWx5OiBNdWxpLEhlbHZldGljYSBOZXVlLEFyaWFsLHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG59Il19 */\"","module.exports = \"<app-dashboard></app-dashboard>\\n\\n<div class=\\\"container\\\"> \\n  <h2 class=\\\"text-center\\\">List of Pharmas</h2>\\n  <div class=\\\"table-responsive\\\">\\n  <table  class=\\\"table table-striped table-hover text-center\\\">\\n  \\t<thead class=\\\"bg-success\\\">\\n      \\n          <tr>\\n              <th>User Name</th>\\n              <th>Mobile No.</th>\\n              <th>Email</th>\\n              <th>Role</th>\\n\\t\\t\\t  \\n              \\n              \\n          </tr>\\n     </thead> \\n  \\t <tbody>\\n  \\t \\t<tr *ngFor=\\\"let distdata of dlist\\\" >\\n    \\t\\n        <td>{{distdata.firstName}} {{distdata.lastName}}</td>\\n        <td>{{distdata.mobileNo}}</td>\\n        <td>{{distdata.email}}</td>\\n        <td>{{distdata.role}}</td>       \\n          \\n   \\t\\t </tr>\\n\\n   \\t\\t\\n\\n    \\n  </tbody>\\n   <tfoot class=\\\"bg-success\\\"><tr><th></th><th></th><th></th><th></th></tr></tfoot>\\n </table>\\n</div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/service/auth.service';\n\n@Component({\n  selector: 'app-pharmadashboard',\n  templateUrl: './pharmadashboard.component.html',\n  styleUrls: ['./pharmadashboard.component.css']\n})\nexport class PharmadashboardComponent implements OnInit {\n  dlist: any = [];\n\n  constructor(private httpuser: AuthService) { }\n\n  ngOnInit() {\n    this.allPharma();\n  }\n\n  allPharma() {\n    return this.httpuser.getallPharmaUser().subscribe(data => {\n      this.dlist = data;\n      console.log(this.dlist);\n    });\n  }\n\n\n}\n","module.exports = \"table {\\n    width: 100%;\\n    background-color: white;\\n  }\\n\\n  \\n\\ntd {\\n  background: none;\\n  border-bottom-color: #b5b3b3;\\n  border-color: #454d55 !important;\\n}\\n\\n  \\n\\nth{\\n  border: none !important;\\n  background-color: #3d6d79; \\n  color:White;\\n  font-family: Muli,Helvetica Neue,Arial,sans-serif;\\n  font-weight: 600;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vdXNlcnJvbGUvdHJhbnNwb3J0ZXJkYXNoYm9hcmQvdHJhbnNwb3J0ZXJkYXNoYm9hcmQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7SUFDWCx1QkFBdUI7RUFDekI7Ozs7QUFJRjtFQUNFLGdCQUFnQjtFQUNoQiw0QkFBNEI7RUFDNUIsZ0NBQWdDO0FBQ2xDOzs7O0FBR0E7RUFDRSx1QkFBdUI7RUFDdkIseUJBQXlCO0VBQ3pCLFdBQVc7RUFDWCxpREFBaUQ7RUFDakQsZ0JBQWdCO0FBQ2xCIiwiZmlsZSI6InNyYy9hcHAvYWRtaW4vdXNlcnJvbGUvdHJhbnNwb3J0ZXJkYXNoYm9hcmQvdHJhbnNwb3J0ZXJkYXNoYm9hcmQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgfVxuXG4gIFxuXG50ZCB7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG4gIGJvcmRlci1ib3R0b20tY29sb3I6ICNiNWIzYjM7XG4gIGJvcmRlci1jb2xvcjogIzQ1NGQ1NSAhaW1wb3J0YW50O1xufVxuXG4gXG50aHtcbiAgYm9yZGVyOiBub25lICFpbXBvcnRhbnQ7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzZDZkNzk7IFxuICBjb2xvcjpXaGl0ZTtcbiAgZm9udC1mYW1pbHk6IE11bGksSGVsdmV0aWNhIE5ldWUsQXJpYWwsc2Fucy1zZXJpZjtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbn0iXX0= */\"","module.exports = \"<app-dashboard></app-dashboard>\\n<div class=\\\"container\\\"> \\n  <h2 class=\\\"text-center\\\">List of Transporters</h2>\\n  <div class=\\\"table-responsive\\\">\\n  <table  class=\\\"table table-striped table-hover text-center\\\">\\n  \\t<thead class=\\\"theme-table\\\">\\n      \\n          <tr>\\n              <th>User Name</th>\\n              <th>Mobile No.</th>\\n              <th>Email</th>\\n              <th>Role</th>\\n\\t\\t\\t  \\n              \\n              \\n          </tr>\\n     </thead> \\n  \\t <tbody>\\n  \\t \\t<tr *ngFor=\\\"let distdata of tlist\\\" >\\n    \\t\\n        <td>{{distdata.firstName}} {{distdata.lastName}}</td>\\n        <td>{{distdata.mobileNo}}</td>\\n        <td>{{distdata.email}}</td>\\n        <td>{{distdata.role}}</td>       \\n        \\n   \\t\\t </tr>\\n\\n   \\t\\t\\n\\n    \\n  </tbody>\\n   <tfoot class=\\\"theme-table\\\"><tr><th></th><th></th><th></th><th></th></tr></tfoot>\\n </table>\\n</div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/service/auth.service';\n\n@Component({\n  selector: 'app-transporterdashboard',\n  templateUrl: './transporterdashboard.component.html',\n  styleUrls: ['./transporterdashboard.component.css']\n})\nexport class TransporterdashboardComponent implements OnInit {\n\n  tlist:any = [];\n\n\n\n  constructor(private httpuser: AuthService) { }\n\n  ngOnInit() {\n    this.allTransporter();\n  }\n  allTransporter() {\n    return this.httpuser.getallTransporterUser().subscribe(data => {\n      this.tlist = data;\n      console.log(this.tlist);\n    });\n  }\n\n}\n","module.exports = \"table {\\n    width: 100%;\\n    background-color: white;\\n  }\\n\\n  \\n\\ntd {\\n  background: none;\\n  border-bottom-color: #b5b3b3;\\n  border-color: #454d55 !important;\\n  /* color: #3d6d79; */\\n}\\n\\n  \\n\\nth{\\n  border: none !important;\\n  background-color: #3d6d79; \\n  color:White;\\n  font-family: Muli,Helvetica Neue,Arial,sans-serif;\\n  font-weight: 600;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vdXNlcnJvbGUvd2hvbGVzYWxlcmRhc2hib2FyZC93aG9sZXNhbGVyZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0lBQ1gsdUJBQXVCO0VBQ3pCOzs7O0FBSUY7RUFDRSxnQkFBZ0I7RUFDaEIsNEJBQTRCO0VBQzVCLGdDQUFnQztFQUNoQyxvQkFBb0I7QUFDdEI7Ozs7QUFHQTtFQUNFLHVCQUF1QjtFQUN2Qix5QkFBeUI7RUFDekIsV0FBVztFQUNYLGlEQUFpRDtFQUNqRCxnQkFBZ0I7QUFDbEIiLCJmaWxlIjoic3JjL2FwcC9hZG1pbi91c2Vycm9sZS93aG9sZXNhbGVyZGFzaGJvYXJkL3dob2xlc2FsZXJkYXNoYm9hcmQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgfVxuXG4gIFxuXG50ZCB7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG4gIGJvcmRlci1ib3R0b20tY29sb3I6ICNiNWIzYjM7XG4gIGJvcmRlci1jb2xvcjogIzQ1NGQ1NSAhaW1wb3J0YW50O1xuICAvKiBjb2xvcjogIzNkNmQ3OTsgKi9cbn1cblxuIFxudGh7XG4gIGJvcmRlcjogbm9uZSAhaW1wb3J0YW50O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjM2Q2ZDc5OyBcbiAgY29sb3I6V2hpdGU7XG4gIGZvbnQtZmFtaWx5OiBNdWxpLEhlbHZldGljYSBOZXVlLEFyaWFsLHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG59Il19 */\"","module.exports = \"<app-dashboard></app-dashboard>\\n\\n<div class=\\\"container\\\"> \\n  <h2 class=\\\"text-center\\\">List of Wholesalers</h2>\\n  <div class=\\\"table-responsive\\\">\\n  <table  class=\\\"table table-striped table-hover text-center\\\">\\n  \\t<thead class=\\\"theme-table\\\">\\n      \\n          <tr>\\n              <th>User Name</th>\\n              <th>Mobile No.</th>\\n              <th>Email</th>\\n              <th>Role</th>\\n\\t\\t\\t  \\n              \\n              \\n          </tr>\\n     </thead> \\n  \\t <tbody>\\n  \\t \\t<tr *ngFor=\\\"let distdata of wlist\\\" >\\n    \\t\\n        <td>{{distdata.firstName}} {{distdata.lastName}}</td>\\n        <td>{{distdata.mobileNo}}</td>\\n        <td>{{distdata.email}}</td>\\n        <td>{{distdata.role}}</td>       \\n          \\n   \\t\\t </tr>\\n\\n   \\t\\t\\n\\n    \\n  </tbody>\\n   <tfoot class=\\\"theme-table\\\"><tr><th></th><th></th><th></th><th></th></tr></tfoot>\\n </table>\\n</div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/service/auth.service';\n\n@Component({\n  selector: 'app-wholesalerdashboard',\n  templateUrl: './wholesalerdashboard.component.html',\n  styleUrls: ['./wholesalerdashboard.component.css']\n})\nexport class WholesalerdashboardComponent implements OnInit {\n\n  wlist:any = [];\n\n  constructor(private httpuser: AuthService) { }\n\n  ngOnInit() {\n    this.allWholesaler();\n  }\n  allWholesaler() {\n    return this.httpuser.getallWholesalerUser().subscribe(data => {\n      this.wlist = data;\n      console.log(this.wlist);\n    });\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { MyloginComponent } from './user/mylogin/mylogin.component';\nimport { SignupComponent } from './user/signup/signup.component';\nimport { ActivationComponent } from './user/signup/activation.component';\nimport { DashboardComponent } from './admin/dashboard/dashboard.component';\nimport { MedicineDetailComponent } from './admin/medicine/medicine-detail/medicine-detail.component';\nimport { PackageDetailComponent } from './admin/medicine/package-detail/package-detail.component';\nimport { MedicineDashboardComponent } from './admin/medicine/medicine-dashboard/medicine-dashboard.component';\nimport { MedicineReportComponent } from './admin/medicine/medicine-report/medicine-report.component';\nimport { AgentCreateComponent } from './admin/agent/agent-create/agent-create.component';\nimport { MedicineListComponent } from './admin/medicine/medicine-list/medicine-list.component';\nimport { PackageListComponent } from './admin/medicine/package-list/package-list.component';\nimport { PackageReportComponent } from './admin/medicine/package-report/package-report.component';\n\nimport { NotificationComponent } from './admin/notification/notification.component';\nimport { MedicineCreateComponent } from './admin/medicine/medicine-create/medicine-create.component';\nimport { PackageCreateComponent } from './admin/medicine/package-create/package-create.component';\nimport { MedicineEditComponent } from './admin/medicine/medicine-edit/medicine-edit.component';\nimport { AgentListComponent } from './admin/agent/agent-list/agent-list.component';\nimport { AgentDetailComponent } from './admin/agent/agent-detail/agent-detail.component';\nimport { AgentEditComponent } from './admin/agent/agent-edit/agent-edit.component';\nimport { ProfileComponent } from './user/profile/profile.component';\nimport { PharmaComponent } from './admin/dashboard/pharma/pharma.component';\nimport { DistrubuterComponent } from './admin/dashboard/distrubuter/distrubuter.component';\nimport { WholesalerComponent } from './admin/dashboard/wholesaler/wholesaler.component';\nimport { ManufacturerComponent } from './admin/dashboard/manufacturer/manufacturer.component';\nimport { CreateUserComponent } from './admin/dashboard/create-user/create-user.component';\nimport { PackagetransporterComponent } from './admin/dashboard/packagetransporter/packagetransporter.component';\nimport { TransporterComponent } from './admin/dashboard/transporter/transporter.component';\nimport { SendwholesalerComponent } from './send/sendwholesaler/sendwholesaler.component';\nimport { SendwholesalerreportComponent } from './send/sendwholesalerreport/sendwholesalerreport.component';\nimport { SenddistributorComponent } from './send/senddistributor/senddistributor.component';\nimport { SenddistributorreportComponent } from './send/senddistributorreport/senddistributorreport.component';\nimport { RecievepackagedistributorComponent } from './send/recievepackagedistributor/recievepackagedistributor.component';\nimport { RecievepackagedistributorreportComponent } from './send/recievepackagedistributorreport/recievepackagedistributorreport.component';\nimport { RecievepackagewholesalerComponent } from './send/recievepackagewholesaler/recievepackagewholesaler.component';\nimport { RecievepackagewholesalerreportComponent } from './send/recievepackagewholesalerreport/recievepackagewholesalerreport.component';\nimport { RecievepackagepharmaComponent } from './send/recievepackagepharma/recievepackagepharma.component';\nimport { RecievepackagepharmareportComponent } from './send/recievepackagepharmareport/recievepackagepharmareport.component';\n\nimport { SendpharmaComponent } from './send/sendpharma/sendpharma.component';\nimport { SendpharmareportComponent } from './send/sendpharmareport/sendpharmareport.component';\nimport { PharmaqrComponent } from './admin/dashboard/qrcodescanner/pharmaqr/pharmaqr.component';\nimport { DistributorqrComponent } from './admin/dashboard/qrcodescanner/distributorqr/distributorqr.component';\nimport { WholesalerqrComponent } from './admin/dashboard/qrcodescanner/wholesalerqr/wholesalerqr.component';\nimport { TransporterqrComponent } from './admin/dashboard/qrcodescanner/transporterqr/transporterqr.component';\nimport { DistributordashboardComponent } from './admin/userrole/distributordashboard/distributordashboard.component';\nimport { ManufacturedashboardComponent } from './admin/userrole/manufacturedashboard/manufacturedashboard.component';\nimport { PharmadashboardComponent } from './admin/userrole/pharmadashboard/pharmadashboard.component';\nimport { TransporterdashboardComponent } from './admin/userrole/transporterdashboard/transporterdashboard.component';\nimport { WholesalerdashboardComponent } from './admin/userrole/wholesalerdashboard/wholesalerdashboard.component';\nimport { MedicineDetailsDashboardComponent } from './admin/medicine/medicine-details-dashboard/medicine-details-dashboard.component';\nimport { SendwholesalerdashboardComponent } from './send/sendwholesalerdashboard/sendwholesalerdashboard.component';\nimport { SenddistributordashboardComponent } from './send/senddistributordashboard/senddistributordashboard.component';\n\nconst routes: Routes = [\n    { path: '', redirectTo: '/home', pathMatch: 'full' },\n    {\n        path: 'home',\n        loadChildren: './home/home.module#HomeModule'\n    },\n    {\n        path: 'login',\n        loadChildren: './user/mylogin/mylogin.module#MyloginModule'\n\n    },\n    {\n        path: 'signup',\n        loadChildren: './user/signup/signup.module#SignupModule'\n    },\n    {\n        path: 'emailverification/:id',\n        component: ActivationComponent\n    },\n    {\n        path: 'profile',\n        component: ProfileComponent\n    },\n    {\n        path: 'dashboard',\n        component: DashboardComponent\n    },\n    { path: 'createuser', component: CreateUserComponent },\n    { path: 'manufacture', component: ManufacturerComponent },\n    { path: 'wholesaler', component: WholesalerComponent },\n    { path: 'distrubuter', component: DistrubuterComponent },\n    { path: 'pharma', component: PharmaComponent },\n    { path: 'agent/request', component: AgentCreateComponent },\n    { path: 'agent/list', component: AgentListComponent },\n    { path: 'agent/detail', component: AgentDetailComponent },\n    { path: 'agent/edit', component: AgentEditComponent },\n    { path: 'medicine/details/:id', component: MedicineDetailComponent },\n    { path: 'package/details/:id', component: PackageDetailComponent },\n    { path: 'medicine/list', component: MedicineListComponent },\n    { path: 'medicine/add', component: MedicineCreateComponent },\n    { path: 'package/add', component: PackageCreateComponent },\n    { path: 'package/list', component: PackageListComponent },\n    { path: 'package/report', component: PackageReportComponent },\n    { path: 'medicine/edit', component: MedicineEditComponent },\n    { path: 'transporter', component: TransporterComponent },\n    { path: 'packagetransporter', component: PackagetransporterComponent },\n    { path: 'notification', component: NotificationComponent },\n    { path: 'sendwholesaler', component: SendwholesalerComponent },\n    { path: 'sendwholesalerreport', component: SendwholesalerreportComponent },\n    { path: 'recievepackagewholesaler', component: RecievepackagewholesalerComponent },\n    { path: 'recievepackagewholesalerreport', component: RecievepackagewholesalerreportComponent },\n    { path: 'senddistributor', component: SenddistributorComponent },\n    { path: 'senddistributorreport', component: SenddistributorreportComponent },\n    { path: 'recievepackage', component: RecievepackagedistributorComponent },\n    { path: 'recievepackagereport', component: RecievepackagedistributorreportComponent },\n    { path: 'sendpharma', component: SendpharmaComponent },\n    { path: 'sendpharmareport', component: SendpharmareportComponent },\n    { path: 'recievepackagepharma', component: RecievepackagepharmaComponent },\n    { path: 'recievepackagepharmareport', component: RecievepackagepharmareportComponent },\n    { path: 'pharmaqr', component: PharmaqrComponent },\n    {\n        path: 'distributorqr',\n        loadChildren: './admin/dashboard/qrcodescanner/distributorqr/distributorqr.module#DistributorqrModule'\n    },\n    { path: 'wholesalerqr/:id', component: WholesalerqrComponent },\n    { path: 'transporterqr', component: TransporterqrComponent },\n    { path: 'distributordashboard', component: DistributordashboardComponent },\n    { path: 'manufacturedashboard', component: ManufacturedashboardComponent },\n    { path: 'pharmadashboard', component: PharmadashboardComponent },\n    { path: 'transporterdashboard', component: TransporterdashboardComponent },\n    { path: 'wholesalerdashboard', component: WholesalerdashboardComponent },\n    { path: 'medicinedashboard', component: MedicineDashboardComponent },\n    { path: 'medicinereport', component: MedicineReportComponent },\n    { path: 'medicinedetailsdashboard/:id', component: MedicineDetailsDashboardComponent },\n    { path: 'wholesalerdashboard1', component: SendwholesalerdashboardComponent },\n    { path: 'distributordashboard1', component: SenddistributordashboardComponent }\n\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { onSameUrlNavigation: 'reload' })],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'erc1155-wallet';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ActivationComponent } from './user/signup/activation.component';\nimport { DashboardComponent } from './admin/dashboard/dashboard.component';\nimport { MedicineDetailComponent } from './admin/medicine/medicine-detail/medicine-detail.component';\nimport { PackageDetailComponent } from './admin/medicine/package-detail/package-detail.component';\nimport { HeaderComponent } from './header/header.component';\nimport { AgentCreateComponent } from './admin/agent/agent-create/agent-create.component';\nimport { MedicineListComponent } from './admin/medicine/medicine-list/medicine-list.component';\nimport { PackageListComponent } from './admin/medicine/package-list/package-list.component';\nimport { PackageReportComponent } from './admin/medicine/package-report/package-report.component';\n\nimport { NotificationComponent } from './admin/notification/notification.component';\nimport { MedicineCreateComponent } from './admin/medicine/medicine-create/medicine-create.component';\nimport { PackageCreateComponent } from './admin/medicine/package-create/package-create.component';\nimport { MedicineEditComponent } from './admin/medicine/medicine-edit/medicine-edit.component';\nimport { AgentEditComponent } from './admin/agent/agent-edit/agent-edit.component';\nimport { AgentListComponent } from './admin/agent/agent-list/agent-list.component';\nimport { AgentDetailComponent } from './admin/agent/agent-detail/agent-detail.component';\nimport { MedicineDashboardComponent } from './admin/medicine/medicine-dashboard/medicine-dashboard.component';\nimport { MedicineReportComponent } from './admin/medicine/medicine-report/medicine-report.component';\n\nimport { MedicineDetailsDashboardComponent } from './admin/medicine/medicine-details-dashboard/medicine-details-dashboard.component';\nimport { ProfileComponent } from './user/profile/profile.component';\n\nimport { ManufacturerComponent } from './admin/dashboard/manufacturer/manufacturer.component';\nimport { WholesalerComponent } from './admin/dashboard/wholesaler/wholesaler.component';\nimport { DistrubuterComponent } from './admin/dashboard/distrubuter/distrubuter.component';\nimport { PharmaComponent } from './admin/dashboard/pharma/pharma.component';\nimport { PackagetransporterComponent } from './admin/dashboard/packagetransporter/packagetransporter.component';\nimport { TransporterComponent } from './admin/dashboard/transporter/transporter.component';\nimport { CreateUserComponent } from './admin/dashboard/create-user/create-user.component';\nimport { QRCodeModule } from 'angularx-qrcode';\n\nimport { QrCodeReader } from './qr-code-reader.service';\nimport { SendwholesalerComponent } from './send/sendwholesaler/sendwholesaler.component';\nimport { SendwholesalerreportComponent } from './send/sendwholesalerreport/sendwholesalerreport.component';\n\n\nimport { SenddistributorComponent } from './send/senddistributor/senddistributor.component';\nimport { SenddistributorreportComponent } from './send/senddistributorreport/senddistributorreport.component';\nimport { RecievepackagedistributorComponent } from './send/recievepackagedistributor/recievepackagedistributor.component';\nimport { RecievepackagedistributorreportComponent } from './send/recievepackagedistributorreport/recievepackagedistributorreport.component';\nimport { RecievepackagewholesalerComponent } from './send/recievepackagewholesaler/recievepackagewholesaler.component';\nimport { RecievepackagewholesalerreportComponent } from './send/recievepackagewholesalerreport/recievepackagewholesalerreport.component';\nimport { RecievepackagepharmaComponent } from './send/recievepackagepharma/recievepackagepharma.component';\nimport { RecievepackagepharmareportComponent } from './send/recievepackagepharmareport/recievepackagepharmareport.component';\nimport { SendpharmaComponent } from './send/sendpharma/sendpharma.component';\nimport { SendpharmareportComponent } from './send/sendpharmareport/sendpharmareport.component';\nimport { PharmaqrComponent } from './admin/dashboard/qrcodescanner/pharmaqr/pharmaqr.component';\nimport { WholesalerqrComponent } from './admin/dashboard/qrcodescanner/wholesalerqr/wholesalerqr.component';\nimport { TransporterqrComponent } from './admin/dashboard/qrcodescanner/transporterqr/transporterqr.component';\nimport { DistributordashboardComponent } from './admin/userrole/distributordashboard/distributordashboard.component';\nimport { ManufacturedashboardComponent } from './admin/userrole/manufacturedashboard/manufacturedashboard.component';\nimport { PharmadashboardComponent } from './admin/userrole/pharmadashboard/pharmadashboard.component';\nimport { TransporterdashboardComponent } from './admin/userrole/transporterdashboard/transporterdashboard.component';\nimport { WholesalerdashboardComponent } from './admin/userrole/wholesalerdashboard/wholesalerdashboard.component';\nimport { SendwholesalerdashboardComponent } from './send/sendwholesalerdashboard/sendwholesalerdashboard.component';\nimport { SenddistributordashboardComponent } from './send/senddistributordashboard/senddistributordashboard.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { SendpharmadashboardComponent } from './send/sendpharmadashboard/sendpharmadashboard.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatStepperModule } from '@angular/material/stepper';\n\n//import { ZXingScannerModule } from './admin/dashboard/modules/zxing-scanner/zxing-scanner.module';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        ActivationComponent,\n        ProfileComponent,\n        DashboardComponent,\n        CreateUserComponent,\n        ManufacturerComponent,\n        WholesalerComponent,\n        DistrubuterComponent,\n        PharmaComponent,\n        HeaderComponent,\n        AgentCreateComponent,\n        AgentEditComponent,\n        AgentListComponent,\n        AgentDetailComponent,\n        MedicineListComponent,\n        PackageListComponent,\n        PackageReportComponent,\n        NotificationComponent,\n        MedicineCreateComponent,\n        PackageCreateComponent,\n        MedicineEditComponent,\n        MedicineDetailComponent,\n        PackageDetailComponent,\n        ProfileComponent,\n        TransporterComponent,\n        PackagetransporterComponent,\n        SendwholesalerComponent,\n        SendwholesalerreportComponent,\n        SenddistributorComponent,\n        SenddistributorreportComponent,\n        RecievepackagedistributorComponent,\n        RecievepackagedistributorreportComponent,\n        RecievepackagewholesalerComponent,\n        RecievepackagewholesalerreportComponent,\n        RecievepackagepharmaComponent,\n        RecievepackagepharmareportComponent,\n        SendpharmaComponent,\n        SendpharmareportComponent,\n        PharmaqrComponent,\n        WholesalerqrComponent,\n        TransporterqrComponent,\n        DistributordashboardComponent,\n        ManufacturedashboardComponent,\n        PharmadashboardComponent,\n        TransporterdashboardComponent,\n        WholesalerdashboardComponent,\n        MedicineDashboardComponent,\n        MedicineReportComponent,\n        MedicineDetailsDashboardComponent,\n        SendwholesalerdashboardComponent,\n        SenddistributordashboardComponent,\n        FooterComponent,\n        NotFoundComponent,\n        SendpharmadashboardComponent\n\n    ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        FormsModule,\n        HttpClientModule,\n        ReactiveFormsModule.withConfig({ warnOnNgModelWithFormControl: 'never' }),\n        QRCodeModule,\n        BrowserAnimationsModule,\n        MatStepperModule\n        //ZXingScannerModule.forRoot()\n\n    ],\n    exports: [\n\n    ],\n    providers: [QrCodeReader],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvb3Rlci9mb290ZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\n  footer works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Medicine</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/medicine\\\" routerLinkActive=\\\"active\\\" >View Medicine</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/agents\\\" routerLinkActive=\\\"active\\\">View Agents</a>\\n      </li>\\n    </ul>\\n    <form class=\\\"form-inline my-2 my-lg-0\\\">\\n      <button routerLink=\\\"/login\\\" class=\\\"btn btn-outline-primary my-2 my-sm-0\\\" type=\\\"submit\\\">Login/Signup</button>\\n    </form>\\n  </div>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25vdC1mb3VuZC9ub3QtZm91bmQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\n  not-found works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\ndeclare const qrcode: any;\n\n@Injectable()\nexport class QrCodeReader {\n\n  decode(file: any): Observable<string> {\n\n    return new Observable(observer => {\n\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = (e: any) => {\n        const data = e.target.result;\n        qrcode.callback = (res) => {\n          observer.next(res);\n          observer.complete();\n        };\n        qrcode.decode(data);\n      };\n\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlbmQvcmVjaWV2ZXBhY2thZ2VkaXN0cmlidXRvci9yZWNpZXZlcGFja2FnZWRpc3RyaWJ1dG9yLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-dashboard></app-dashboard>\\n<div class=\\\"container\\\">\\n\\t<br>\\n\\t<br>\\n\\n\\t<form>\\n\\t\\n        <div class=\\\"row\\\"> \\n          <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n            <label>Packing Barcode</label>\\n\\t\\t\\t<input type=\\\"file\\\" style=\\\"margin-left:20px;\\\" accept=\\\"image/*\\\" (change)=\\\"onFileChange($event)\\\">\\n            <input #br type=\\\"text\\\" value=\\\"{{barcodevalue}}\\\" class=\\\"form-control required\\\" >\\n          </div>\\n        </div>\\n        \\n            \\n          </div>\\n            <div class=\\\"row text-right\\\">\\n             \\t\\t<div class=\\\"col\\\">\\n             \\t\\t\\t<div class=\\\"form-group\\\">\\n                  \\t\\t\\t<button type=\\\"button\\\" (click)=\\\"getByPackageId(br.value,4)\\\" class=\\\"btn btn-primary\\\">Accept</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t&nbsp; &nbsp; &nbsp; &nbsp;\\n                        <button type=\\\"button\\\" (click)=\\\"getByPackageId(br.value,5)\\\" class=\\\"btn btn-secondary\\\">Reject</button>\\n                        &nbsp; &nbsp; &nbsp; &nbsp;\\n                        <button type=\\\"reset\\\" (click)=\\\"getdetails(br.value,5)\\\" class=\\\"btn btn-primary\\\">Get Details</button>\\n                \\t\\t</div>\\n                </div>\\n             </div>\\n\\t</form>\\n\\n\\n  <div *ngIf=\\\"displayTable\\\" class=\\\"table-responsive\\\">\\n    <br>\\n    <table class=\\\"table table-striped table-dark table-hover text-center\\\">\\n      \\n        <thead class=\\\"theme-table\\\">\\n            <tr>            \\n              <th>Serial Number</th>\\n              <th>Level</th>\\n              <th>Location</th>   \\n            </tr>\\n        </thead>\\n        <tbody>\\n          <tr>\\n            <td><a [routerLink]=\\\"['/package/details',mlist[0].serial]\\\">{{mlist[0].serial}}</a></td>\\n            <td>{{mlist[0].level}}</td>\\n            <td>{{mlist[0].location}}</td>      \\n          </tr>\\n         \\n        </tbody>\\n        <tfoot class=\\\"theme-table\\\"><tr><th></th><th></th><th></th><th></th><th></th></tr></tfoot>\\n      </table>\\n    </div>\\n\\n    <div  class=\\\"table-responsive\\\">\\n      <br>\\n      <table class=\\\"table table-striped table-dark table-hover text-center\\\">\\n        \\n          <thead class=\\\"theme-table\\\">\\n              <tr>            \\n                  <th>Serial Number</th>\\n                   <th>Level</th>\\n\\t\\t\\t\\t\\t<th>Location</th>  \\n                  <th></th>             \\n              </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let list of TMlist\\\">\\n              <td><a [routerLink]=\\\"['/package/details',list.serial]\\\">{{list.serial}}</a></td>\\n              <td>{{list.level}}</td>\\n              <td>{{list.location}}</td>\\n              <td><button type=\\\"button\\\"   (click)=\\\"serialId(list.serial,list.level)\\\"  class=\\\"btn btn-success\\\" data-toggle=\\\"modal\\\" data-target=\\\"#exampleModalCenter\\\">Send to Pharma</button> &nbsp; &nbsp; &nbsp;  <button type=\\\"button\\\"   (click)=\\\"openpackage(list.PackageId,list.level)\\\"  class=\\\"btn btn-primary\\\" >Open Package</button></td>\\n              </tr>\\n           \\n          </tbody>\\n          <tfoot class=\\\"theme-table\\\"><tr><th></th>\\n            <th></th>\\n            <th></th>\\n            <th></th>\\n            <!-- <th></th>\\n            <th></th> -->\\n          </tr></tfoot>\\n        </table>\\n      </div>\\n\\n</div>\\n\\n\\n   <!-- Modal -->\\n   <div class=\\\"modal fade\\\" id=\\\"exampleModalCenter\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalCenterTitle\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLongTitle\\\">Medicine Transportation</h5>\\n          \\n        </div>\\n        <div class=\\\"modal-body\\\">\\n      \\n      <div class=\\\"row\\\">\\n            <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n                <label>Serial</label>\\n                <input #serial   type=\\\"text\\\" [(ngModel)]=\\\"serialvalue\\\" class=\\\"form-control required\\\">\\n              </div></div>           \\n          </div>   \\n           <div class=\\\"row\\\">          \\n                <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n                  <label>DistributerId</label>\\n           <select [(ngModel)]=\\\"wId1\\\" class=\\\"form-control\\\" >\\n                <option    *ngFor=\\\"let wid of dlist\\\" [value]=\\\"wid.publicKey\\\">{{wid.firstName}}</option>\\n                            </select>   \\n                </div></div>\\n            </div>       \\n    <div class=\\\"row\\\">\\n            <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n                <label>TransporterId</label>\\n          <select [(ngModel)]=\\\"tId1\\\" class=\\\"form-control\\\">\\n                <option  *ngFor=\\\"let wid of tlist\\\" [value]=\\\"wid.userId\\\">{{wid.firstName}}</option>\\n                            </select> \\n              </div></div>           \\n          </div> \\t\\t\\n  \\n            \\n        </div>\\n        <div class=\\\"modal-footer\\\"> \\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" #completeModal  data-dismiss=\\\"modal\\\">Close</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"mTransection(serial.value,wId1,tId1)\\\">Send</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\"","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { QrCodeReader } from 'src/app/qr-code-reader.service';\nimport { Subscription } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Package2 } from 'src/app/admin/medicine/package-create/addpackage2';\nimport { Transection } from 'src/app/admin/medicine/medicine-list/transection';\nimport { Medicine2 } from 'src/app/admin/medicine/medicine-create/addmedicine2';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-recievepackagedistributor',\n  templateUrl: './recievepackagedistributor.component.html',\n  styleUrls: ['./recievepackagedistributor.component.css']\n})\nexport class RecievepackagedistributorComponent implements OnInit {\n\n  selectedWId: string = '';\n  selectedTId: string = '';\n  serialvalue: any = \" \";\n  levelvalue: any = \" \";\n  barcodevalue: any;\n  subscription: Subscription;\n  transporter1: any = Package2;\n  list: any = [];\n  mlist: any = [];\n  medlist: any = [];\n  plist: any = [];\n  dlist: any = [];\n  tlist: any = [];\n  TMlist: any = [];\n  transection: any = Transection;\n  base;\n  call;\n  displayTable: boolean = false;\n  blockchain: any = [];\n  packageStatus;\n  medicineStatus;\n  blockchain2: any = [];\n  status: any = [];\n  statusValue: any;\n  itemId: any = [];\n  mypublickey: any; myrole: any;\n  privateKey: any;\n  @ViewChild('completeModal') completeModal: ElementRef;\n  blockchainUrl: any = this.httpuser.blockchainUrl;;\n\n\n  constructor(private route: Router, private httpuser: AuthService, private qrReader: QrCodeReader, private http: HttpClient) { }\n\n  ngOnInit() {\n    this.medicineStatus = \"Recived to Distributer\";\n    this.packageStatus = \"Recived to Distributer\";\n    this.myrole = localStorage.getItem(\"role\");\n    this.mypublickey = localStorage.getItem(\"publicKey\");\n    this.privateKey = localStorage.getItem(\"privateKey\");\n    this.transporterPackageId(this.mypublickey);\n    this.allPharma();\n    this.allTransporter();\n  }\n\n  selectChangeHandler1(event: any) {\n    //update the ui\n    this.selectedWId = event.target.value;\n  }\n\n  selectChangeHandler2(event: any) {\n    //update the ui\n    this.selectedTId = event.target.value;\n  }\n\n  serialId(serialId, level) {\n    this.serialvalue = serialId;\n    this.levelvalue = level;\n\n  }\n\n\n  onFileChange(event) {\n    const file = event.target.files[0];\n    this.subscription = this.qrReader.decode(file)\n      .subscribe(decodedString => {\n        this.barcodevalue = decodedString;\n        console.log(decodedString)\n      });\n  }\n\n  transporterPackageId(id) {\n    return this.httpuser.transporterPackage(id).subscribe(data => {\n      this.TMlist = data;\n      console.log(this.TMlist);\n    });\n  }\n\n  getdetails(id, statusid) {\n    let that = this;\n    this.mypublickey = localStorage.getItem(\"publicKey\");\n    this.privateKey = localStorage.getItem(\"privateKey\");\n    this.httpuser.getPackageId(id).subscribe(data => {\n      this.mlist = data;\n\n      this.route.navigate(['/package/details/' + this.mlist[0].serial]);\n    });\n  }\n\n  getByPackageId(id, statusid) {\n    let that = this;\n    this.mypublickey = localStorage.getItem(\"publicKey\");\n    this.privateKey = localStorage.getItem(\"privateKey\");\n    this.httpuser.getPackageId(id).subscribe(data => {\n      this.mlist = data;\n      this.displayTable = true;\n      if (statusid == 5) this.packageStatus = \"Rejected to Distributer\";\n      this.transporter(this.mlist[0].serial, this.mlist[0].medicines, this.mlist[0].barcode, this.mlist[0].location, this.mlist[0].level, this.mlist[0].packages, this.mlist[0].PackageId, this.mlist[0].role, this.mlist[0].time, this.mypublickey, this.packageStatus);\n      if (statusid == 5)\n        alert(\"Package Returned \");\n      else\n        alert(\"Package piked \");\n\n\n      //Register User on Blockchain ==>> if \"COMMITED\" :: register in db else Mail (ERROR Message)\t\n\n      // const Metadata = {\n      //   \"action\": \"recieveFromWholesaler\",\n      //   \"payloaddata\": {\n      //     \"serialNumber\": this.mlist[0].serial,\n      //     \"status\": statusid,\t\t  \n      //     \"comment\": \"Delivered\",\n      // \"level\":this.mlist[0].level\n      //   },\n      //   \"private\": this.privateKey,\n      //   \"public\": this.mypublickey\n      // }\n\n      // const httpOptions = {\n      //   headers: new HttpHeaders({\n      //     'Content-Type': 'application/json'\n      //   })\n      // }\n\n      // return this.http.post(this.blockchainUrl, Metadata, httpOptions).subscribe(\n      //   (val) => {\n\n      //     console.log(\"POST call successful value returned in body\", val);\n      //     this.blockchain = val;\n      //     if (that.httpuser.IsJsonString(this.blockchain.response.body)) {\n      //       JSON.parse(this.blockchain.response.body).hasOwnProperty(\"data\");\n\n      //       this.status = JSON.parse(this.blockchain.response.body);\n      //       this.statusValue = this.status.data[0].status;\n      //       this.itemId = this.status.data[0].id;\n      // if (this.statusValue == 'COMMITTED') \n      // {\n      // \tthis.displayTable = true;\n      // \tif(statusid == 5) this.packageStatus = \"Rejected to Distributer\";\n      // \tthis.transporter(this.mlist[0].serial,this.mlist[0].medicines, this.mlist[0].barcode, this.mlist[0].location, this.mlist[0].level, this.mlist[0].packages, this.mlist[0].PackageId, this.mlist[0].role, this.mlist[0].time, this.mypublickey,this.packageStatus);\n      // \tif(statusid == 5)\n      // \t\talert(\"Package Returned \");\n      // \telse\n      // \t\talert(\"Package piked \");\n      // }\n      //       else \n      // {\n      //         alert(\"Process not completed\");\n      //       }\n      //     }\n      //     else {\n\n      //       that.http.get(this.httpuser.batchUrl +\"/batch_statuses?\" + this.blockchain.id + \"&wait\").subscribe((val) => {\n      //         this.blockchain2 = val\n      //         if (that.httpuser.IsJsonString(this.blockchain2.body)) {\n      //           this.status = JSON.parse(this.blockchain2.body);\n      //           console.log('json value2', this.status.data[0].status);\n      //           this.statusValue = this.status.data[0].status;\n      //           this.itemId = this.status.data[0].id;\n      //           if (this.statusValue == 'COMMITTED') {\n      // \t\tif(statusid == 5) this.packageStatus = \"Rejected to Distributer\";\n      //             this.transporter(this.mlist[0].serial,this.mlist[0].medicines, this.mlist[0].barcode, this.mlist[0].location, this.mlist[0].level, this.mlist[0].packages, this.mlist[0].PackageId, this.mlist[0].role, this.mlist[0].time, this.mypublickey,this.packageStatus);\n      //             if(statusid == 5)\n      // \t\talert(\"Package Returned \");\n      // \telse\n      // \t\talert(\"Package picked\");\n      //           }\n      //           else {\n      //             alert('Request Rejected');\n      //           }\n      //         }\n      //       })\n      //     }\n      //     // }).catch(function (err) {\n      //     //   console.log(err.message);\n      //   });\n    });\n  }\n\n  allPharma() {\n    return this.httpuser.getallPharmaUser().subscribe(data => {\n      this.dlist = data;\n      console.log(this.dlist);\n    });\n  }\n\n  allTransporter() {\n    return this.httpuser.getallTransporterUser().subscribe(data => {\n      this.tlist = data;\n      console.log(this.tlist);\n    });\n  }\n\n\n  transporter(a, b, c, d, e, f, g, h, i, j, k) {\n    this.transporter1 = new Package2(a, b, c, d, e, f, g, h, i, j, k);\n    this.base = this.httpuser.packagetransporter(this.transporter1);\n    this.call = this.base.subscribe(\n      data => {\n        alert(\"done\");\n\n      },\n      err => {\n        console.log(err);\n      },\n      () => {\n        console.log(\"Done\");\n      }\n    );\n  }\n\n\n\n  openpackage(id, level) {\n    this.levelvalue = level;\n    let that = this;\n    this.mypublickey = localStorage.getItem(\"publicKey\");\n    this.privateKey = localStorage.getItem(\"privateKey\");\n    this.httpuser.getPackageId(id).subscribe(data => {\n      this.mlist = data;\n      this.displayTable = true;\n      //this.openpackagecall(id,this.mypublickey);\n      /*Transfer child packages to user account*/\n      if (Array.isArray(this.mlist[0].packages))\n        var meds = this.mlist[0].packages;\n      else\n        var meds = this.mlist[0].packages.split(',');\n      if (meds.length > 0) {\n        for (var j = 0; j < meds.length; j++) {\n          this.httpuser.getPackageStatus3(meds[j]).subscribe((pdata) => {\n\n            this.httpuser.getPackageId(id).subscribe(packagedata => {\n              this.plist = packagedata;\n\n              this.transporter(this.plist[0].serial, this.plist[0].medicines, this.plist[0].barcode, this.plist[0].location, this.plist[0].level, this.plist[0].packages, this.plist[0].PackageId, this.plist[0].role, this.plist[0].time, this.mypublickey, this.packageStatus);\n\n\n            });\n\n            //this.getByPackageId(pdata.PackageId,'4');\n\n          });\n        }\n      }\n\n      /*Transfer child medicines to user account*/\n\n      if (Array.isArray(this.mlist[0].medicines))\n        var meds = this.mlist[0].medicines;\n      else\n        var meds = this.mlist[0].medicines.split(',');\n\n      if (meds.length > 0) {\n        for (var j = 0; j < meds.length; j++) {\n          this.httpuser.getMedicineStatus3(meds[j]).subscribe((mdata) => {\n\n            this.httpuser.getMedicineId(id).subscribe(medicinedata => {\n              this.medlist = medicinedata;\n\n              this.medicineTransporter(this.medlist[0].serial, this.medlist[0].medicine, this.medlist[0].barcode, this.medlist[0].location, this.medlist[0].weight, this.medlist[0].Edate, this.medlist[0].Mdate, this.medlist[0].MedicineId, this.medlist[0].role, this.medlist[0].time, this.mypublickey, this.medicineStatus);\n\n\n            });\n\n            //this.medicinedetails.push(mdata);\n\n          });\n        }\n      }\n      this.httpuser.deletePackageTransport(id, this.mypublickey).subscribe(res => {\n\n        alert(\"Package Opened \");\n\n      });\n      //Register User on Blockchain ==>> if \"COMMITED\" :: register in db else Mail (ERROR Message)\t\n\n      //  const Metadata = {\n      //   \"action\": \"openPackage\",\n      //   \"payloaddata\": {\n      //       \"serialNumber\": this.mlist[0].serial,\n      //       \"userRole\": this.myrole,\n      //       \"admin\": false,\n      // \t  \"level\":this.levelvalue\n      //   },\n      //   \"private\":this.privateKey,\n      //   \"public\": this.mypublickey\n      //     }\t    \n\n      // const httpOptions = {\n      // headers: new HttpHeaders({\n      //   'Content-Type': 'application/json'\n      // })\n      // }\n\n      //     return this.http.post(this.blockchainUrl, Metadata,httpOptions).subscribe(\n      //  (val) => {\t\n\n      //   console.log(\"POST call successful value returned in body\", val);\n      //   this.blockchain = val;\n      //   if (that.httpuser.IsJsonString(this.blockchain.response.body)) {\n      //     JSON.parse(this.blockchain.response.body).hasOwnProperty(\"data\");\n\n      //     this.status = JSON.parse(this.blockchain.response.body);            \n      //     this.statusValue = this.status.data[0].status;\n      //     this.itemId = this.status.data[0].id;\n      //     if (this.statusValue == 'COMMITTED') {   \n      // \t   this.displayTable=true; \n      // \t  //this.openpackagecall(id,this.mypublickey);\n      // \t\t/*Transfer child packages to user account*/\n      // \t\t\tif(Array.isArray(this.mlist[0].packages))\n      // \t\t\t\tvar meds = this.mlist[0].packages;\n      // \t\t\telse\n      // \t\t\t\tvar meds = this.mlist[0].packages.split(',');\n\n      // \t\t\tif(meds.length>0)\n      // \t\t\t{\n      // \t\t\t\tfor(var j=0;j < meds.length; j++)\n      // \t\t\t\t{\n      // \t\t\t\t\tthis.httpuser.getPackageStatus3(meds[j]).subscribe((pdata) =>{\n\n      // \t\t\t\t\t\t  this.httpuser.getPackageId(id).subscribe(packagedata => {\n      // \t\t\t\t\t\t\t\tthis.plist=packagedata;\n\n      // \t\t\t\t\t\t\t\tthis.transporter(this.plist[0].serial,this.plist[0].medicines, this.plist[0].barcode, this.plist[0].location, this.plist[0].level, this.plist[0].packages, this.plist[0].PackageId, this.plist[0].role, this.plist[0].time, this.mypublickey,this.packageStatus);\n\n\n      // \t\t\t\t\t\t});\t\t\n\n      // \t\t\t\t\t\t//this.getByPackageId(pdata.PackageId,'4');\n\n      // \t\t\t\t\t});\n      // \t\t\t\t}\n      // \t\t\t}\n\n      // \t\t\t/*Transfer child medicines to user account*/\n\n      // \t\t\tif(Array.isArray(this.mlist[0].medicines))\n      // \t\t\t\tvar meds = this.mlist[0].medicines;\n      // \t\t\telse\n      // \t\t\t\tvar meds = this.mlist[0].medicines.split(',');\n\n      // \t\t\tif(meds.length>0)\n      // \t\t\t{\n      // \t\t\t\tfor(var j=0;j < meds.length; j++)\n      // \t\t\t\t{\n      // \t\t\t\t\tthis.httpuser.getMedicineStatus3(meds[j]).subscribe((mdata) =>{\n\n      // \t\t\t\t\t\t\tthis.httpuser.getMedicineId(id).subscribe(medicinedata => {\n      // \t\t\t\t\t\t\t\tthis.medlist=medicinedata;\n\n      // \t\t\t\t\t\t\t\t this.medicineTransporter(this.medlist[0].serial,this.medlist[0].medicine,this.medlist[0].barcode,this.medlist[0].location,this.medlist[0].weight,this.medlist[0].Edate,this.medlist[0].Mdate,this.medlist[0].MedicineId,this.medlist[0].role,this.medlist[0].time,this.mypublickey,this.medicineStatus);\n\n\n      // \t\t\t\t\t\t});\n\n      // \t\t\t\t\t\t\t//this.medicinedetails.push(mdata);\n\n      // \t\t\t\t\t});\n      // \t\t\t\t}\n      // \t\t\t}\n      // \t\t\tthis.httpuser.deletePackageTransport(id,this.mypublickey).subscribe(res => {\n\n      // \t\t\t\talert(\"Package Opened \");\n\n      // \t\t\t });\n      // \t\t\t//alert(\"Package Opened \");\n      //   }\n      //   else{\n      // \t  alert(\"Process not completed\");\n      //   }\n      //   }\n      //   else {\n\n      //     that.http.get(this.httpuser.batchUrl +\"/batch_statuses?\" + this.blockchain.id + \"&wait\").subscribe((val) => {\n      //       this.blockchain2 =val\n      //       if (that.httpuser.IsJsonString(this.blockchain2.body)) {\n      //         this.status = JSON.parse(this.blockchain2.body);\n      //         console.log('json value2', this.status.data[0].status);\n      //         this.statusValue = this.status.data[0].status;\n      //         this.itemId = this.status.data[0].id;\n      //         if (this.statusValue == 'COMMITTED') {\n      // \t\t\t\t/*Transfer child packages to user account*/\n      // \t\t\tif(Array.isArray(this.mlist[0].packages))\n      // \t\t\t\tvar meds = this.mlist[0].packages;\n      // \t\t\telse\n      // \t\t\t\tvar meds = this.mlist[0].packages.split(',');\n\n      // \t\t\tif(meds.length>0)\n      // \t\t\t{\n      // \t\t\t\tfor(var j=0;j < meds.length; j++)\n      // \t\t\t\t{\n      // \t\t\t\t\tthis.httpuser.getPackageStatus3(meds[j]).subscribe((pdata) =>{\n\n      // \t\t\t\t\t\t  this.httpuser.getPackageId(id).subscribe(packagedata => {\n      // \t\t\t\t\t\t\t\tthis.plist=packagedata;\n\n      // \t\t\t\t\t\t\t\tthis.transporter(this.plist[0].serial,this.plist[0].medicines, this.plist[0].barcode, this.plist[0].location, this.plist[0].level, this.plist[0].packages, this.plist[0].PackageId, this.plist[0].role, this.plist[0].time, this.mypublickey,this.packageStatus);\n\n\n      // \t\t\t\t\t\t});\t\t\n\n      // \t\t\t\t\t\t//this.getByPackageId(pdata.PackageId,'4');\n\n      // \t\t\t\t\t});\n      // \t\t\t\t}\n      // \t\t\t}\n\n      // \t\t\t/*Transfer child medicines to user account*/\n\n      // \t\t\tif(Array.isArray(this.mlist[0].medicines))\n      // \t\t\t\tvar meds = this.mlist[0].medicines;\n      // \t\t\telse\n      // \t\t\t\tvar meds = this.mlist[0].medicines.split(',');\n\n      // \t\t\tif(meds.length>0)\n      // \t\t\t{\n      // \t\t\t\tfor(var j=0;j < meds.length; j++)\n      // \t\t\t\t{\n      // \t\t\t\t\tthis.httpuser.getMedicineStatus3(meds[j]).subscribe((mdata) =>{\n\n      // \t\t\t\t\t\t\tthis.httpuser.getMedicineId(id).subscribe(medicinedata => {\n      // \t\t\t\t\t\t\t\tthis.medlist=medicinedata;\n\n      // \t\t\t\t\t\t\t\t this.medicineTransporter(this.medlist[0].serial,this.medlist[0].medicine,this.medlist[0].barcode,this.medlist[0].location,this.medlist[0].weight,this.medlist[0].Edate,this.medlist[0].Mdate,this.medlist[0].MedicineId,this.medlist[0].role,this.medlist[0].time,this.mypublickey,this.medicineStatus);\n\n\n      // \t\t\t\t\t\t});\n\n      // \t\t\t\t\t\t\t//this.medicinedetails.push(mdata);\n\n      // \t\t\t\t\t});\n      // \t\t\t\t}\n      // \t\t\t}\n\n      // \t\t\t\tthis.httpuser.deletePackageTransport(id,this.mypublickey).subscribe(res => {\n\n      // \t\t\t\talert(\"Package Opened \");\n\n      // \t\t\t });\n      //         }\n      //         else {\n      //           alert('Request Rejected');\n      //         }\n      //       }\n      //     })\n      //   }\n      // // }).catch(function (err) {\n      // //   console.log(err.message);\n      // });\n    });\n  }\n\n  medicineTransporter(a, b, c, d, e, f, g, h, i, j, k, l) {\n    this.transporter1 = new Medicine2(a, b, c, d, e, f, g, h, i, j, k, l);\n    this.base = this.httpuser.transporter(this.transporter1);\n    this.call = this.base.subscribe(\n      data => {\n        alert(\"done\");\n\n      },\n      err => {\n        console.log(err);\n      },\n      () => {\n        console.log(\"Done\");\n      }\n    );\n  }\n\n\n\n  mTransection(serial: string, wholesalerId: string, transpoterId: string) {\n    let that = this;\n    console.log(\"ID\", wholesalerId);\n    //Register User on Blockchain ==>> if \"COMMITED\" :: register in db else Mail (ERROR Message)\t\n    this.transection = new Transection(serial, wholesalerId, transpoterId);\n            this.base = this.httpuser.medicineTransection(this.transection);\n            this.call = this.base.subscribe(data => {\n\n              alert('Request Accepted');\n              let el: HTMLElement = this.completeModal.nativeElement;\n             el.click(); \n            });\n    // const Metadata = {\n    //   \"action\": \"sendToPharma\",\n    //   \"payloaddata\": {\n    //     \"serialNumber\": serial,\n    //     \"pharma\": {\n    //       \"address\": wholesalerId,\n    //       \"comment\": \"In Transaction\"\n    //     },\n    //     \"transporterid\": transpoterId,\n    // \"level\":this.levelvalue\n    //   },\n    //   \"private\": this.privateKey,\n    //   \"public\": this.mypublickey\n    // }\n\n    // const httpOptions = {\n    //   headers: new HttpHeaders({\n    //     'Content-Type': 'application/json'\n    //   })\n    // };\n\n    // var x = this.http.post(this.blockchainUrl, Metadata, httpOptions).subscribe(\n    //   (val) => {\n    //     console.log(\"POST call successful value returned in body\", val);\n    //     this.blockchain = val;\n    //     if (that.httpuser.IsJsonString(this.blockchain.response.body)) {\n    //       JSON.parse(this.blockchain.response.body).hasOwnProperty(\"data\");\n\n    //       this.status = JSON.parse(this.blockchain.response.body);\n    //       this.statusValue = this.status.data[0].status;\n    //       this.itemId = this.status.data[0].id;\n    //       if (this.statusValue == 'COMMITTED') {\n    //         this.transection = new Transection(serial, wholesalerId, transpoterId);\n    //         this.base = this.httpuser.medicineTransection(this.transection);\n    //         this.call = this.base.subscribe(data => {\n\n    //           alert('Request Accepted');\n    //           let el: HTMLElement = this.completeModal.nativeElement;\n    //          el.click(); \n\n\n    //         });\n    //       }\n    //       else {\n    //         alert('Request Rejected');\n    //         let el: HTMLElement = this.completeModal.nativeElement;\n    //          el.click(); \n\n    //       }\n    //     } else {\n\n    //       that.http.get(this.httpuser.batchUrl +\"/batch_statuses?\" + this.blockchain.id + \"&wait\").subscribe((val) => {\n    //         this.blockchain2 = val\n    //         if (that.httpuser.IsJsonString(this.blockchain2.body)) {\n    //           this.status = JSON.parse(this.blockchain2.body);\n    //           console.log('json value2', this.status.data[0].status);\n    //           this.statusValue = this.status.data[0].status;\n    //           this.itemId = this.status.data[0].id;\n    //           if (this.statusValue == 'COMMITTED') {\n    //             this.transection = new Transection(serial, wholesalerId, transpoterId);\n    //             this.base = this.httpuser.medicineTransection(this.transection);\n    //             this.call = this.base.subscribe(data => {\n    //               alert('Request Accepted');\n    //             });\n    //           }\n    //           else {\n    //             alert('Request Rejected');\n    //           }\n    //         }\n    //       })\n    //     }\n    //     // }).catch(function (err) {\n    //     //   console.log(err.message);\n    //   });\n  }\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlbmQvcmVjaWV2ZXBhY2thZ2VkaXN0cmlidXRvcnJlcG9ydC9yZWNpZXZlcGFja2FnZWRpc3RyaWJ1dG9ycmVwb3J0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-dashboard></app-dashboard>\\n<div class=\\\"container\\\">\\n\\t<br>\\n\\t<br>\\n\\n    <div  class=\\\"table-responsive\\\">\\n      <br>\\n      <table class=\\\"table table-striped table-dark table-hover text-center\\\">\\n        \\n          <thead class=\\\"theme-table\\\">\\n\\t\\t  \\t\\t  <tr>\\n\\t\\t<th colspan=\\\"3\\\"></th>\\n\\t\\t<th><button type=\\\"button\\\"   (click)=\\\"exporttocsv()\\\"  class=\\\"btn btn-primary\\\" >Export as CSV</button></th>\\n\\t\\t</tr>\\n              <tr>            \\n                  <th>Serial Number</th>\\n                   <th>Level</th>\\n\\t\\t\\t\\t\\t<th>Location</th>  \\n                  <th>Date</th>             \\n              </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let list of TMlist\\\">\\n              <td><a [routerLink]=\\\"['/package/details',list.serial]\\\">{{list.serial}}</a></td>\\n              <td>{{list.level}}</td>\\n              <td>{{list.location}}</td>\\n              <td>{{list.time | date: 'dd/MM/yyyy h:mm:ss a'}}</td>\\n              </tr>\\n           \\n          </tbody>\\n          <tfoot class=\\\"theme-table\\\">\\t\\t  <tr>\\n\\t\\t<th colspan=\\\"3\\\"></th>\\n\\t\\t<th><button type=\\\"button\\\"   (click)=\\\"exporttocsv()\\\"  class=\\\"btn btn-primary\\\" >Export as CSV</button></th>\\n\\t\\t</tr></tfoot>\\n        </table>\\n      </div>\\n\\n</div>\"","import { Component, OnInit,ElementRef,ViewChild } from '@angular/core';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { QrCodeReader } from 'src/app/qr-code-reader.service';\nimport { Subscription } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Package2 } from 'src/app/admin/medicine/package-create/addpackage2';\nimport { Transection } from 'src/app/admin/medicine/medicine-list/transection';\nimport { Medicine2 } from 'src/app/admin/medicine/medicine-create/addmedicine2';\nimport { Angular5Csv } from 'angular5-csv/dist/Angular5-csv';\n@Component({\n  selector: 'app-recievepackagedistributorreport',\n  templateUrl: './recievepackagedistributorreport.component.html',\n  styleUrls: ['./recievepackagedistributorreport.component.css']\n})\nexport class RecievepackagedistributorreportComponent implements OnInit {\n\n  selectedWId: string = '';\n  selectedTId: string = '';\n  serialvalue: any = \" \";\n  levelvalue: any = \" \";\n  barcodevalue: any;\n  subscription: Subscription;\n  transporter1: any = Package2;\n  list: any = [];\n  mlist: any = [];\n  medlist:any=[];\n  plist:any=[];\n  dlist: any = [];\n  tlist: any = [];\n  TMlist: any = [];\n  meds: any = [];\n  transection: any = Transection;\n  base;\n  call;\n  displayTable: boolean = false;\n  blockchain: any = [];\n  packageStatus;\n  medicineStatus;\n  blockchain2: any = [];\n  status: any = [];\n  statusValue: any;\n  itemId: any = [];\n  mypublickey: any;myrole:any;\n  privateKey: any;\n  @ViewChild('completeModal')completeModal: ElementRef;\n  blockchainUrl: any = this.httpuser.blockchainUrl;;\n\n  constructor(private httpuser: AuthService, private qrReader: QrCodeReader, private http: HttpClient) { }\n\n  ngOnInit() {1\n\t\tthis.medicineStatus=\"Recived to Distributer\";\n\t\tthis.packageStatus=\"Recived to Distributer\";\n\t\tthis.myrole = localStorage.getItem(\"role\");\n\t\tthis.mypublickey = localStorage.getItem(\"publicKey\");\n\t\tthis.privateKey = localStorage.getItem(\"privateKey\");\n\t\tthis.transporterPackageId(this.mypublickey);\n\t\tthis.allPharma();\n\t\tthis.allTransporter();\n  }\n\n  selectChangeHandler1(event: any) {\n    //update the ui\n    this.selectedWId = event.target.value;\n  }\n\n  selectChangeHandler2(event: any) {\n    //update the ui\n    this.selectedTId = event.target.value;\n  }\n\n  serialId(serialId,level) {\n    this.serialvalue = serialId;\n\tthis.levelvalue = level;\n\t\n  }\n\n\n  onFileChange(event) {\n    const file = event.target.files[0];\n    this.subscription = this.qrReader.decode(file)\n      .subscribe(decodedString => {\n        this.barcodevalue = decodedString;\n        console.log(decodedString)\n      });\n  }\n\n  transporterPackageId(id) {\n    return this.httpuser.transporterPackage(id).subscribe(data => {\n      this.TMlist = data;\n      console.log(this.TMlist);\n    });\n  }\n\n  getByPackageId(id,statusid) {\n    let that = this;\n    this.mypublickey = localStorage.getItem(\"publicKey\");\n    this.privateKey = localStorage.getItem(\"privateKey\");\n    this.httpuser.getPackageId(id).subscribe(data => {\n      this.mlist = data;\n\t\tthis.displayTable = true;\n\t\t\t\tif(statusid == 5) this.packageStatus = \"Rejected to Distributer\";\n\t\t\t\tthis.transporter(this.mlist[0].serial,this.mlist[0].medicines, this.mlist[0].barcode, this.mlist[0].location, this.mlist[0].level, this.mlist[0].packages, this.mlist[0].PackageId, this.mlist[0].role, this.mlist[0].time, this.mypublickey,this.packageStatus);\n\t\t\t\tif(statusid == 5)\n\t\t\t\t\talert(\"Package Returned \");\n\t\t\t\telse\n\t\t\t\t\talert(\"Package piked \");\n      //Register User on Blockchain ==>> if \"COMMITED\" :: register in db else Mail (ERROR Message)\t\n\n      // const Metadata = {\n      //   \"action\": \"recieveFromWholesaler\",\n      //   \"payloaddata\": {\n      //     \"serialNumber\": this.mlist[0].serial,\n      //     \"status\": statusid,\t\t  \n      //     \"comment\": \"Delivered\",\n\t\t  // \"level\":this.mlist[0].level\n      //   },\n      //   \"private\": this.privateKey,\n      //   \"public\": this.mypublickey\n      // }\n\n      // const httpOptions = {\n      //   headers: new HttpHeaders({\n      //     'Content-Type': 'application/json'\n      //   })\n      // }\n\n      // return this.http.post(this.blockchainUrl, Metadata, httpOptions).subscribe(\n      //   (val) => {\n\n      //     console.log(\"POST call successful value returned in body\", val);\n      //     this.blockchain = val;\n      //     if (that.httpuser.IsJsonString(this.blockchain.response.body)) {\n      //       JSON.parse(this.blockchain.response.body).hasOwnProperty(\"data\");\n\n      //       this.status = JSON.parse(this.blockchain.response.body);\n      //       this.statusValue = this.status.data[0].status;\n      //       this.itemId = this.status.data[0].id;\n\t\t\t// if (this.statusValue == 'COMMITTED') \n\t\t\t// {\n\t\t\t// \tthis.displayTable = true;\n\t\t\t// \tif(statusid == 5) this.packageStatus = \"Rejected to Distributer\";\n\t\t\t// \tthis.transporter(this.mlist[0].serial,this.mlist[0].medicines, this.mlist[0].barcode, this.mlist[0].location, this.mlist[0].level, this.mlist[0].packages, this.mlist[0].PackageId, this.mlist[0].role, this.mlist[0].time, this.mypublickey,this.packageStatus);\n\t\t\t// \tif(statusid == 5)\n\t\t\t// \t\talert(\"Package Returned \");\n\t\t\t// \telse\n\t\t\t// \t\talert(\"Package piked \");\n\t\t\t// }\n      //       else \n\t\t\t// {\n      //         alert(\"Process not completed\");\n      //       }\n      //     }\n      //     else {\n\n      //       that.http.get(this.httpuser.batchUrl +\"/batch_statuses?\" + this.blockchain.id + \"&wait\").subscribe((val) => {\n      //         this.blockchain2 = val\n      //         if (that.httpuser.IsJsonString(this.blockchain2.body)) {\n      //           this.status = JSON.parse(this.blockchain2.body);\n      //           console.log('json value2', this.status.data[0].status);\n      //           this.statusValue = this.status.data[0].status;\n      //           this.itemId = this.status.data[0].id;\n      //           if (this.statusValue == 'COMMITTED') {\n\t\t\t// \t\tif(statusid == 5) this.packageStatus = \"Rejected to Distributer\";\n      //             this.transporter(this.mlist[0].serial,this.mlist[0].medicines, this.mlist[0].barcode, this.mlist[0].location, this.mlist[0].level, this.mlist[0].packages, this.mlist[0].PackageId, this.mlist[0].role, this.mlist[0].time, this.mypublickey,this.packageStatus);\n      //             if(statusid == 5)\n\t\t\t// \t\talert(\"Package Returned \");\n\t\t\t// \telse\n\t\t\t// \t\talert(\"Package picked\");\n      //           }\n      //           else {\n      //             alert('Request Rejected');\n      //           }\n      //         }\n      //       })\n      //     }\n      //     // }).catch(function (err) {\n      //     //   console.log(err.message);\n      //   });\n    });\n  }\n\n  allPharma() {\n    return this.httpuser.getallPharmaUser().subscribe(data => {\n      this.dlist = data;\n      console.log(this.dlist);\n    });\n  }\n\n  allTransporter() {\n    return this.httpuser.getallTransporterUser().subscribe(data => {\n      this.tlist = data;\n      console.log(this.tlist);\n    });\n  }\n\n  \n   exporttocsv()\n  {\n\t  var data = [];\n\t  var  datarow = {};\n\t\n\tif(Array.isArray(this.TMlist))\n\t\t\tthis.meds = this.TMlist;\n\t\telse\n\t\t\tthis.meds = this.TMlist.split(',');\n\t\t\n\t  for(var i=0;i<=this.meds.length;i++)\n\t  {\n\t\t  console.log(\"meds==\" + this.meds[i]);\n\t\t  if(typeof this.meds[i] != \"undefined\")\n\t\t  {\n\t\t\tdatarow = {\n\t\t\tserial:this.meds[i].serial,\n\t\t\tlocation: this.meds[i].location,\n\t\t\tlevel: this.meds[i].level,\n\t\t\ttime: this.meds[i].time,\n\t\t\t};\n\t\t\tdata.push(datarow);\n\t\t  }\n\t  }\n\n\t\tvar options = {\n\t\tfieldSeparator: ',',\n\t\tquoteStrings: '\"',\n\t\tdecimalseparator: '.',\n\t\tshowLabels: true,\n\t\tshowTitle: true,\n\t\theaders: [\"Serial Number\",\"Location\",\"Level\", \"Date/Time\"]\n\t\t};\n\n\t\tnew Angular5Csv(data, 'Report1',options);\n\n\t\treturn true;\n  }\n\n\n\n  \n  \n  \n  transporter(a, b, c, d, e, f, g, h, i, j, k) {\n    this.transporter1 = new Package2(a, b, c, d, e, f, g, h, i, j, k);\n    this.base = this.httpuser.packagetransporter(this.transporter1);\n    this.call = this.base.subscribe(\n      data => {\n        alert(\"done\");\n\n      },\n      err => {\n        console.log(err);\n      },\n      () => {\n        console.log(\"Done\");\n      }\n    );\n  }\n\n  \n  \n     openpackage(id,level) {  \n    this.levelvalue=level;\n    let that = this;\n    this.mypublickey =localStorage.getItem(\"publicKey\");\n    this.privateKey =localStorage.getItem(\"privateKey\");  \n    this.httpuser.getPackageId(id).subscribe(data => {\n   this.mlist=data;\n\n   //Register User on Blockchain ==>> if \"COMMITED\" :: register in db else Mail (ERROR Message)\t\n\t\t\t  \t   this.displayTable=true; \n\t  //this.openpackagecall(id,this.mypublickey);\n\t\t/*Transfer child packages to user account*/\n\t\t\tif(Array.isArray(this.mlist[0].packages))\n\t\t\t\tvar meds = this.mlist[0].packages;\n\t\t\telse\n\t\t\t\tvar meds = this.mlist[0].packages.split(',');\n\t\t\t\n\t\t\tif(meds.length>0)\n\t\t\t{\n\t\t\t\tfor(var j=0;j < meds.length; j++)\n\t\t\t\t{\n\t\t\t\t\tthis.httpuser.getPackageStatus3(meds[j]).subscribe((pdata) =>{\n\t\t\t\t\t\t\n\t\t\t\t\t\t  this.httpuser.getPackageId(id).subscribe(packagedata => {\n\t\t\t\t\t\t\t\tthis.plist=packagedata;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tthis.transporter(this.plist[0].serial,this.plist[0].medicines, this.plist[0].barcode, this.plist[0].location, this.plist[0].level, this.plist[0].packages, this.plist[0].PackageId, this.plist[0].role, this.plist[0].time, this.mypublickey,this.packageStatus);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t});\t\t\n\n\t\t\t\t\t\t//this.getByPackageId(pdata.PackageId,'4');\n\t\t\t\t\t\t\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t/*Transfer child medicines to user account*/\n\t\t\t\n\t\t\tif(Array.isArray(this.mlist[0].medicines))\n\t\t\t\tvar meds = this.mlist[0].medicines;\n\t\t\telse\n\t\t\t\tvar meds = this.mlist[0].medicines.split(',');\n\t\t\t\n\t\t\tif(meds.length>0)\n\t\t\t{\n\t\t\t\tfor(var j=0;j < meds.length; j++)\n\t\t\t\t{\n\t\t\t\t\tthis.httpuser.getMedicineStatus3(meds[j]).subscribe((mdata) =>{\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tthis.httpuser.getMedicineId(id).subscribe(medicinedata => {\n\t\t\t\t\t\t\t\tthis.medlist=medicinedata;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t this.medicineTransporter(this.medlist[0].serial,this.medlist[0].medicine,this.medlist[0].barcode,this.medlist[0].location,this.medlist[0].weight,this.medlist[0].Edate,this.medlist[0].Mdate,this.medlist[0].MedicineId,this.medlist[0].role,this.medlist[0].time,this.mypublickey,this.medicineStatus);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\t\t\t//this.medicinedetails.push(mdata);\n\t\t\t\t\t\t\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.httpuser.deletePackageTransport(id,this.mypublickey).subscribe(res => {\n\n\t\t\t\talert(\"Package Opened \");\n\n\t\t\t });\n//  const Metadata = {\n//   \"action\": \"openPackage\",\n//   \"payloaddata\": {\n//       \"serialNumber\": this.mlist[0].serial,\n//       \"userRole\": this.myrole,\n//       \"admin\": false,\n// \t  \"level\":this.levelvalue\n//   },\n//   \"private\":this.privateKey,\n//   \"public\": this.mypublickey\n//     }\t    \n\n// const httpOptions = {\n// headers: new HttpHeaders({\n//   'Content-Type': 'application/json'\n// })\n// }\n\n//     return this.http.post(this.blockchainUrl, Metadata,httpOptions).subscribe(\n//  (val) => {\t\n\n//   console.log(\"POST call successful value returned in body\", val);\n//   this.blockchain = val;\n//   if (that.httpuser.IsJsonString(this.blockchain.response.body)) {\n//     JSON.parse(this.blockchain.response.body).hasOwnProperty(\"data\");\n\n//     this.status = JSON.parse(this.blockchain.response.body);            \n//     this.statusValue = this.status.data[0].status;\n//     this.itemId = this.status.data[0].id;\n//     if (this.statusValue == 'COMMITTED') {   \n// \t   this.displayTable=true; \n// \t  //this.openpackagecall(id,this.mypublickey);\n// \t\t/*Transfer child packages to user account*/\n// \t\t\tif(Array.isArray(this.mlist[0].packages))\n// \t\t\t\tvar meds = this.mlist[0].packages;\n// \t\t\telse\n// \t\t\t\tvar meds = this.mlist[0].packages.split(',');\n\t\t\t\n// \t\t\tif(meds.length>0)\n// \t\t\t{\n// \t\t\t\tfor(var j=0;j < meds.length; j++)\n// \t\t\t\t{\n// \t\t\t\t\tthis.httpuser.getPackageStatus3(meds[j]).subscribe((pdata) =>{\n\t\t\t\t\t\t\n// \t\t\t\t\t\t  this.httpuser.getPackageId(id).subscribe(packagedata => {\n// \t\t\t\t\t\t\t\tthis.plist=packagedata;\n\t\t\t\t\t\t\t\t\n// \t\t\t\t\t\t\t\tthis.transporter(this.plist[0].serial,this.plist[0].medicines, this.plist[0].barcode, this.plist[0].location, this.plist[0].level, this.plist[0].packages, this.plist[0].PackageId, this.plist[0].role, this.plist[0].time, this.mypublickey,this.packageStatus);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n// \t\t\t\t\t\t});\t\t\n\n// \t\t\t\t\t\t//this.getByPackageId(pdata.PackageId,'4');\n\t\t\t\t\t\t\n// \t\t\t\t\t});\n// \t\t\t\t}\n// \t\t\t}\n\t\t\t\n// \t\t\t/*Transfer child medicines to user account*/\n\t\t\t\n// \t\t\tif(Array.isArray(this.mlist[0].medicines))\n// \t\t\t\tvar meds = this.mlist[0].medicines;\n// \t\t\telse\n// \t\t\t\tvar meds = this.mlist[0].medicines.split(',');\n\t\t\t\n// \t\t\tif(meds.length>0)\n// \t\t\t{\n// \t\t\t\tfor(var j=0;j < meds.length; j++)\n// \t\t\t\t{\n// \t\t\t\t\tthis.httpuser.getMedicineStatus3(meds[j]).subscribe((mdata) =>{\n\t\t\t\t\t\t\n// \t\t\t\t\t\t\tthis.httpuser.getMedicineId(id).subscribe(medicinedata => {\n// \t\t\t\t\t\t\t\tthis.medlist=medicinedata;\n\t\t\t\t\t\t\t\t\n// \t\t\t\t\t\t\t\t this.medicineTransporter(this.medlist[0].serial,this.medlist[0].medicine,this.medlist[0].barcode,this.medlist[0].location,this.medlist[0].weight,this.medlist[0].Edate,this.medlist[0].Mdate,this.medlist[0].MedicineId,this.medlist[0].role,this.medlist[0].time,this.mypublickey,this.medicineStatus);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n// \t\t\t\t\t\t});\n\t\t\t\t\t\n// \t\t\t\t\t\t\t//this.medicinedetails.push(mdata);\n\t\t\t\t\t\t\n// \t\t\t\t\t});\n// \t\t\t\t}\n// \t\t\t}\n// \t\t\tthis.httpuser.deletePackageTransport(id,this.mypublickey).subscribe(res => {\n\n// \t\t\t\talert(\"Package Opened \");\n\n// \t\t\t });\n// \t\t\t//alert(\"Package Opened \");\n//   }\n//   else{\n// \t  alert(\"Process not completed\");\n//   }\n//   }\n//   else {\n\n//     that.http.get(this.httpuser.batchUrl +\"/batch_statuses?\" + this.blockchain.id + \"&wait\").subscribe((val) => {\n//       this.blockchain2 =val\n//       if (that.httpuser.IsJsonString(this.blockchain2.body)) {\n//         this.status = JSON.parse(this.blockchain2.body);\n//         console.log('json value2', this.status.data[0].status);\n//         this.statusValue = this.status.data[0].status;\n//         this.itemId = this.status.data[0].id;\n//         if (this.statusValue == 'COMMITTED') {\n// \t\t\t\t/*Transfer child packages to user account*/\n// \t\t\tif(Array.isArray(this.mlist[0].packages))\n// \t\t\t\tvar meds = this.mlist[0].packages;\n// \t\t\telse\n// \t\t\t\tvar meds = this.mlist[0].packages.split(',');\n\t\t\t\n// \t\t\tif(meds.length>0)\n// \t\t\t{\n// \t\t\t\tfor(var j=0;j < meds.length; j++)\n// \t\t\t\t{\n// \t\t\t\t\tthis.httpuser.getPackageStatus3(meds[j]).subscribe((pdata) =>{\n\t\t\t\t\t\t\n// \t\t\t\t\t\t  this.httpuser.getPackageId(id).subscribe(packagedata => {\n// \t\t\t\t\t\t\t\tthis.plist=packagedata;\n\t\t\t\t\t\t\t\t\n// \t\t\t\t\t\t\t\tthis.transporter(this.plist[0].serial,this.plist[0].medicines, this.plist[0].barcode, this.plist[0].location, this.plist[0].level, this.plist[0].packages, this.plist[0].PackageId, this.plist[0].role, this.plist[0].time, this.mypublickey,this.packageStatus);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n// \t\t\t\t\t\t});\t\t\n\n// \t\t\t\t\t\t//this.getByPackageId(pdata.PackageId,'4');\n\t\t\t\t\t\t\n// \t\t\t\t\t});\n// \t\t\t\t}\n// \t\t\t}\n\t\t\t\n// \t\t\t/*Transfer child medicines to user account*/\n\t\t\t\n// \t\t\tif(Array.isArray(this.mlist[0].medicines))\n// \t\t\t\tvar meds = this.mlist[0].medicines;\n// \t\t\telse\n// \t\t\t\tvar meds = this.mlist[0].medicines.split(',');\n\t\t\t\n// \t\t\tif(meds.length>0)\n// \t\t\t{\n// \t\t\t\tfor(var j=0;j < meds.length; j++)\n// \t\t\t\t{\n// \t\t\t\t\tthis.httpuser.getMedicineStatus3(meds[j]).subscribe((mdata) =>{\n\t\t\t\t\t\t\n// \t\t\t\t\t\t\tthis.httpuser.getMedicineId(id).subscribe(medicinedata => {\n// \t\t\t\t\t\t\t\tthis.medlist=medicinedata;\n\t\t\t\t\t\t\t\t\n// \t\t\t\t\t\t\t\t this.medicineTransporter(this.medlist[0].serial,this.medlist[0].medicine,this.medlist[0].barcode,this.medlist[0].location,this.medlist[0].weight,this.medlist[0].Edate,this.medlist[0].Mdate,this.medlist[0].MedicineId,this.medlist[0].role,this.medlist[0].time,this.mypublickey,this.medicineStatus);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n// \t\t\t\t\t\t});\n\t\t\t\t\t\n// \t\t\t\t\t\t\t//this.medicinedetails.push(mdata);\n\t\t\t\t\t\t\n// \t\t\t\t\t});\n// \t\t\t\t}\n// \t\t\t}\n\t\t\n// \t\t\t\tthis.httpuser.deletePackageTransport(id,this.mypublickey).subscribe(res => {\n\n// \t\t\t\talert(\"Package Opened \");\n\n// \t\t\t });\n//         }\n//         else {\n//           alert('Request Rejected');\n//         }\n//       }\n//     })\n//   }\n// // }).catch(function (err) {\n// //   console.log(err.message);\n// });\n});\n}\n\nmedicineTransporter(a,b,c,d,e,f,g,h,i,j,k,l){  \t  \n  this.transporter1 = new Medicine2(a,b,c,d,e,f,g,h,i,j,k,l);\n   this.base = this.httpuser.transporter(this.transporter1);\n  this.call = this.base.subscribe(\n    data => {       \n      alert(\"done\");\n      \n    },\n    err => {\n      console.log(err);\n    },\n    () => {\n      console.log(\"Done\");\n    }\n  );\n}\n\n\n\n  mTransection(serial: string, wholesalerId: string, transpoterId: string) {\n    let that = this;\n    console.log(\"ID\",wholesalerId);\n    //Register User on Blockchain ==>> if \"COMMITED\" :: register in db else Mail (ERROR Message)\t\n          this.transection = new Transection(serial, wholesalerId, transpoterId);\n            this.base = this.httpuser.medicineTransection(this.transection);\n            this.call = this.base.subscribe(data => {\n\n              alert('Request Accepted');\n              let el: HTMLElement = this.completeModal.nativeElement;\n             el.click(); \n            })\n   // const Metadata = {\n    //   \"action\": \"sendToPharma\",\n    //   \"payloaddata\": {\n    //     \"serialNumber\": serial,\n    //     \"pharma\": {\n    //       \"address\": wholesalerId,\n    //       \"comment\": \"In Transaction\"\n    //     },\n    //     \"transporterid\": transpoterId,\n\t\t// \"level\":this.levelvalue\n    //   },\n    //   \"private\": this.privateKey,\n    //   \"public\": this.mypublickey\n    // }\n\n    // const httpOptions = {\n    //   headers: new HttpHeaders({\n    //     'Content-Type': 'application/json'\n    //   })\n    // };\n\n    // var x = this.http.post(this.blockchainUrl, Metadata, httpOptions).subscribe(\n    //   (val) => {\n    //     console.log(\"POST call successful value returned in body\", val);\n    //     this.blockchain = val;\n    //     if (that.httpuser.IsJsonString(this.blockchain.response.body)) {\n    //       JSON.parse(this.blockchain.response.body).hasOwnProperty(\"data\");\n\n    //       this.status = JSON.parse(this.blockchain.response.body);\n    //       this.statusValue = this.status.data[0].status;\n    //       this.itemId = this.status.data[0].id;\n    //       if (this.statusValue == 'COMMITTED') {\n    //         this.transection = new Transection(serial, wholesalerId, transpoterId);\n    //         this.base = this.httpuser.medicineTransection(this.transection);\n    //         this.call = this.base.subscribe(data => {\n\n    //           alert('Request Accepted');\n    //           let el: HTMLElement = this.completeModal.nativeElement;\n    //          el.click(); \n              \n\n    //         });\n    //       }\n    //       else {\n    //         alert('Request Rejected');\n    //         let el: HTMLElement = this.completeModal.nativeElement;\n    //          el.click(); \n              \n    //       }\n    //     } else {\n\n    //       that.http.get(this.httpuser.batchUrl +\"/batch_statuses?\" + this.blockchain.id + \"&wait\").subscribe((val) => {\n    //         this.blockchain2 = val\n    //         if (that.httpuser.IsJsonString(this.blockchain2.body)) {\n    //           this.status = JSON.parse(this.blockchain2.body);\n    //           console.log('json value2', this.status.data[0].status);\n    //           this.statusValue = this.status.data[0].status;\n    //           this.itemId = this.status.data[0].id;\n    //           if (this.statusValue == 'COMMITTED') {\n    //             this.transection = new Transection(serial, wholesalerId, transpoterId);\n    //             this.base = this.httpuser.medicineTransection(this.transection);\n    //             this.call = this.base.subscribe(data => {\n    //               alert('Request Accepted');\n    //             });\n    //           }\n    //           else {\n    //             alert('Request Rejected');\n    //           }\n    //         }\n    //       })\n    //     }\n    //     // }).catch(function (err) {\n    //     //   console.log(err.message);\n    //   });\n  }\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlbmQvcmVjaWV2ZXBhY2thZ2VwaGFybWEvcmVjaWV2ZXBhY2thZ2VwaGFybWEuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-dashboard></app-dashboard>\\n<div class=\\\"container\\\">\\n\\t<br>\\n\\t<br>\\n\\n\\t<form>\\n\\t\\n        <div class=\\\"row\\\"> \\n          <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n            <label>Packing Barcode</label>\\n\\t\\t\\t<input type=\\\"file\\\" style=\\\"margin-left:20px;\\\" accept=\\\"image/*\\\" (change)=\\\"onFileChange($event)\\\">\\n            <input #br type=\\\"text\\\" value=\\\"{{barcodevalue}}\\\" class=\\\"form-control required\\\" >\\n          </div>\\n        </div>\\n        \\n            \\n          </div>\\n            <div class=\\\"row text-right\\\">\\n             \\t\\t<div class=\\\"col\\\">\\n             \\t\\t\\t<div class=\\\"form-group\\\">\\n                  \\t\\t\\t\\t<button type=\\\"reset\\\" (click)=\\\"getByPackageId(br.value,4)\\\" class=\\\"btn btn-primary\\\">Recieve</button>\\n\\t\\t\\t\\t\\t\\t\\t&nbsp; &nbsp;\\n              <button type=\\\"reset\\\" (click)=\\\"getByPackageId(br.value,5)\\\" class=\\\"btn btn-secondary\\\">Reject</button>\\n              &nbsp; &nbsp;\\n              <button type=\\\"reset\\\" (click)=\\\"getdetails(br.value,5)\\\" class=\\\"btn btn-primary\\\">Get Details</button> \\n                \\t\\t</div>\\n                </div>\\n             </div>\\n\\t</form>\\n\\n\\n  <div *ngIf=\\\"displayTable\\\" class=\\\"table-responsive\\\">\\n    <br>\\n    <table class=\\\"table table-striped table-dark table-hover text-center\\\">\\n      \\n        <thead class=\\\"theme-table\\\">\\n            <tr>            \\n\\t\\t\\t\\t<th>Serial Number</th>\\n\\t\\t\\t\\t<th>Level</th>\\n\\t\\t\\t\\t<th>Location</th> \\n              \\n            </tr>\\n        </thead>\\n        <tbody>\\n          <tr>\\n            <td><a [routerLink]=\\\"['/package/details',mlist[0].serial]\\\">{{mlist[0].serial}}</a></td>\\n            <td>{{mlist[0].level}}</td>\\n            <td>{{mlist[0].location}}</td>\\n            </tr>\\n         \\n        </tbody>\\n        <tfoot class=\\\"theme-table\\\"><tr><th></th><th></th><th></th></tr></tfoot>\\n      </table>\\n    </div>\\n\\n    <div  class=\\\"table-responsive\\\">\\n      <br>\\n      <table class=\\\"table table-striped table-dark table-hover text-center\\\">\\n        \\n          <thead class=\\\"theme-table\\\">\\n              <tr>            \\n\\t\\t\\t\\t<th>Serial Number</th>\\n\\t\\t\\t\\t<th>Level</th>\\n\\t\\t\\t\\t<th>Location</th> \\n\\t\\t\\t\\t<th></th>\\n              </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let list of TMlist\\\">\\n              <td><a [routerLink]=\\\"['/package/details',list.serial]\\\">{{list.serial}}</a></td>\\n              <td>{{list.level}}</td>\\n              <td>{{list.location}}</td>       \\n            <!-- <td><button type=\\\"button\\\"   (click)=\\\"serialId(list.serial)\\\"  class=\\\"btn btn-success\\\" data-toggle=\\\"modal\\\" data-target=\\\"#exampleModalCenter\\\">Send to Customer</button></td> -->\\n\\t\\t\\t <td> <button type=\\\"button\\\"   (click)=\\\"openpackage(list.PackageId,list.level)\\\"  class=\\\"btn btn-primary\\\">Open Package</button></td>\\n              </tr>\\n           \\n          </tbody>\\n          <tfoot class=\\\"theme-table\\\"><tr><th></th><th></th><th></th><th></th></tr></tfoot>\\n        </table>\\n      </div>\\n    \\n</div>\\n\\n\\n   <!-- Modal -->\\n   <div class=\\\"modal fade\\\" id=\\\"exampleModalCenter\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalCenterTitle\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLongTitle\\\">Package Transportation</h5>\\n          \\n        </div>\\n        <div class=\\\"modal-body\\\">\\n      \\n      <div class=\\\"row\\\">\\n            <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n                <label>Serial</label>\\n                <input #serial   type=\\\"text\\\" [(ngModel)]=\\\"serialvalue\\\" class=\\\"form-control required\\\">\\n              </div></div>           \\n          </div>   \\n           <div class=\\\"row\\\">          \\n                <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n                  <label>PharmaId</label>\\n           <select [(ngModel)]=\\\"wId1\\\" class=\\\"form-control\\\" >\\n                <option    *ngFor=\\\"let wid of dlist\\\" [value]=\\\"wid.userId\\\">{{wid.firstName}}</option>\\n                            </select>   \\n                </div></div>\\n            </div>       \\n    <div class=\\\"row\\\">\\n            <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n                <label>TransporterId</label>\\n          <select [(ngModel)]=\\\"tId1\\\" class=\\\"form-control\\\">\\n                <option  *ngFor=\\\"let wid of tlist\\\" [value]=\\\"wid.userId\\\">{{wid.firstName}}</option>\\n                            </select> \\n              </div></div>           \\n          </div> \\t\\t\\n  \\n            \\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\"  data-dismiss=\\\"modal\\\">Close</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"mTransection(serial.value,wId1,tId1)\\\">Send</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { QrCodeReader } from 'src/app/qr-code-reader.service';\nimport { Subscription } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Package2 } from 'src/app/admin/medicine/package-create/addpackage2';\nimport { Transection } from 'src/app/admin/medicine/medicine-list/transection';\nimport { Router } from '@angular/router';\n\nimport { Medicine2 } from 'src/app/admin/medicine/medicine-create/addmedicine2';\n@Component({\n  selector: 'app-recievepackagepharma',\n  templateUrl: './recievepackagepharma.component.html',\n  styleUrls: ['./recievepackagepharma.component.css']\n})\nexport class RecievepackagepharmaComponent implements OnInit {\n \n  selectedWId: string = '';\n  selectedTId: string = '';\n  serialvalue:any=\" \";\n  levelvalue:any=\" \";\n  barcodevalue:any;\n  subscription: Subscription;\ntransporter1: any = Package2;\nlist: any = [];\nmlist:any=[];\nmedlist:any=[];\nplist:any=[];\ndlist:any=[];\ntlist:any=[];\nTMlist:any=[];\ntransection:any=Transection;\nbase;\ncall;\ndisplayTable:boolean=false;\nblockchain:any=[];\nblockchain2:any=[];\nstatus:any=[];\nstatusValue:any;\nitemId:any=[];\npackageStatus;\nmedicineStatus;\n\n  mypublickey:any;\n  myrole:any;\n  privateKey:any;\n  blockchainUrl:any = this.httpuser.blockchainUrl;\n\n  constructor(private route:Router,private httpuser: AuthService,private qrReader: QrCodeReader,private http: HttpClient) { }\n\n  ngOnInit() {\n\tthis.medicineStatus=\"Recived to Pharma\";\n    this.packageStatus=\"Recived to Pharma\";\n\tthis.myrole = localStorage.getItem(\"role\");\n    this.mypublickey =localStorage.getItem(\"publicKey\");\n    this.privateKey =localStorage.getItem(\"privateKey\");\n    this.transporterPackageId(this.mypublickey);\n    this.allPharma();\n    this.allTransporter();\n  }\n \n  selectChangeHandler1 (event: any) {\n    //update the ui\n    this.selectedWId = event.target.value;\n  }\n\n  selectChangeHandler2 (event: any) {\n    //update the ui\n    this.selectedTId = event.target.value;\n  }\n\n  serialId(serialId,level){\n\t  this.serialvalue=serialId;  \n\t  this.levelvalue = level;\n  }\n  \n\n  onFileChange(event) {\n    const file = event.target.files[0];\n    this.subscription = this.qrReader.decode(file)\n      .subscribe(decodedString =>{\n    this.barcodevalue= decodedString;\n    console.log(decodedString)\n    });\n  }\n\n\n  transporterPackageId(id) {\n    return this.httpuser.transporterPackage(id).subscribe(data => {\n      this.TMlist = data; \nconsole.log(this.TMlist);\t  \n    });\n  }\n\n  getdetails(id,statusid) {\n    let that = this;\n    this.mypublickey = localStorage.getItem(\"publicKey\");\n    this.privateKey = localStorage.getItem(\"privateKey\");\n    this.httpuser.getPackageId(id).subscribe(data => {\n      this.mlist = data;\n\t  \n\t  this.route.navigate(['/package/details/'+this.mlist[0].serial]);\n\t});\n  }\n\n\n  getByPackageId(id,statusid) {  \n    let that = this;\n    this.mypublickey =localStorage.getItem(\"publicKey\");\n    this.privateKey =localStorage.getItem(\"privateKey\");  \n    this.httpuser.getPackageId(id).subscribe(data => {\n   this.mlist=data;\n\n   //Register User on Blockchain ==>> if \"COMMITED\" :: register in db else Mail (ERROR Message)\t\n   this.displayTable=true; \n       if(statusid == 5) this.packageStatus = \"Rejected from Distributer\";\n   \t\tthis.transporter(this.mlist[0].serial,this.mlist[0].medicines, this.mlist[0].barcode, this.mlist[0].location, this.mlist[0].level, this.mlist[0].packages, this.mlist[0].PackageId, this.mlist[0].role, this.mlist[0].time, this.mypublickey,this.packageStatus);\n   \t\tif(statusid == 5)\n   \t\t\talert(\"Package Returned \");\n   \t\telse\n         alert(\"Package piked \");\n         \n//  const Metadata = {\n//   \"action\": \"recieveFromDistributer\",\n//   \"payloaddata\": {\n//       \"serialNumber\": this.mlist[0].serial,\n//       \"status\": statusid,\n//       \"comment\": \"Delivered\",\n// \t  \"level\":this.mlist[0].level\n//   },\n//   \"private\":this.privateKey,\n//   \"public\": this.mypublickey\n//     }\t    \n\n// const httpOptions = {\n// headers: new HttpHeaders({\n//   'Content-Type': 'application/json'\n// })\n// }\n\n//     return this.http.post(this.blockchainUrl, Metadata,httpOptions).subscribe(\n//  (val) => {\t\n//   console.log(\"POST call successful value returned in body\", val);\n//   this.blockchain = val;\n//   if (that.httpuser.IsJsonString(this.blockchain.response.body)) {\n//     JSON.parse(this.blockchain.response.body).hasOwnProperty(\"data\");\n\n//     this.status = JSON.parse(this.blockchain.response.body);            \n//     this.statusValue = this.status.data[0].status;\n//     this.itemId = this.status.data[0].id;\n//     if (this.statusValue == 'COMMITTED') {   \n//    this.displayTable=true; \n//     if(statusid == 5) this.packageStatus = \"Rejected from Distributer\";\n// \t\tthis.transporter(this.mlist[0].serial,this.mlist[0].medicines, this.mlist[0].barcode, this.mlist[0].location, this.mlist[0].level, this.mlist[0].packages, this.mlist[0].PackageId, this.mlist[0].role, this.mlist[0].time, this.mypublickey,this.packageStatus);\n// \t\tif(statusid == 5)\n// \t\t\talert(\"Package Returned \");\n// \t\telse\n// \t\t\talert(\"Package piked \");\n//   }\n//   else{\n// \t  alert(\"Process not completed\");\n//   }\n//   }\n//   else {\n\n//     that.http.get(this.httpuser.batchUrl +\"/batch_statuses?\" + this.blockchain.id + \"&wait\").subscribe((val) => {\n//       this.blockchain2 =val\n//       if (that.httpuser.IsJsonString(this.blockchain2.body)) {\n//         this.status = JSON.parse(this.blockchain2.body);\n//         console.log('json value2', this.status.data[0].status);\n//         this.statusValue = this.status.data[0].status;\n//         this.itemId = this.status.data[0].id;\n//         if (this.statusValue == 'COMMITTED') {\n// \t\t\t\tif(statusid == 5) this.packageStatus = \"Rejected to Distributer\";\n//                   this.transporter(this.mlist[0].serial,this.mlist[0].medicines, this.mlist[0].barcode, this.mlist[0].location, this.mlist[0].level, this.mlist[0].packages, this.mlist[0].PackageId, this.mlist[0].role, this.mlist[0].time, this.mypublickey,this.packageStatus);\n//                   if(statusid == 5)\n// \t\t\t\t\talert(\"Package Returned \");\n// \t\t\t\telse\n// \t\t\t\t\talert(\"Package picked\");\n//         }\n//         else {\n//           alert('Request Rejected');\n//         }\n//       }\n//     })\n//   }\n// // }).catch(function (err) {\n// //   console.log(err.message);\n// });\n});\n}\n\nallPharma() {\n  return this.httpuser.getallPharmaUser().subscribe(data => {\n    this.dlist = data; \nconsole.log(this.dlist);\t  \n  });\n}\n\nallTransporter() {\n  return this.httpuser.getallTransporterUser().subscribe(data => {\n    this.tlist = data; \nconsole.log(this.tlist);\t  \n  });\n}\n\n\ntransporter(a, b, c, d, e, f, g, h, i, j, k) {\n    this.transporter1 = new Package2(a, b, c, d, e, f, g, h, i, j, k);\n    this.base = this.httpuser.packagetransporter(this.transporter1);\n    this.call = this.base.subscribe(\n      data => {\n        alert(\"done\");\n\n      },\n      err => {\n        console.log(err);\n      },\n      () => {\n        console.log(\"Done\");\n      }\n    );\n  }\n\n \nopenpackage(id,level) {  \n    this.levelvalue=level;\n    let that = this;\n    this.mypublickey =localStorage.getItem(\"publicKey\");\n    this.privateKey =localStorage.getItem(\"privateKey\");  \n    this.httpuser.getPackageId(id).subscribe(data => {\n   this.mlist=data;\n\n   //Register User on Blockchain ==>> if \"COMMITED\" :: register in db else Mail (ERROR Message)\t\n\t\t\t  \t   this.displayTable=true; \n\t  //this.openpackagecall(id,this.mypublickey);\n\t\t/*Transfer child packages to user account*/\n\t\t\tif(Array.isArray(this.mlist[0].packages))\n\t\t\t\tvar meds = this.mlist[0].packages;\n\t\t\telse\n\t\t\t\tvar meds = this.mlist[0].packages.split(',');\n\t\t\t\n\t\t\tif(meds.length>0)\n\t\t\t{\n\t\t\t\tfor(var j=0;j < meds.length; j++)\n\t\t\t\t{\n\t\t\t\t\tthis.httpuser.getPackageStatus3(meds[j]).subscribe((pdata) =>{\n\t\t\t\t\t\t\n\t\t\t\t\t\t  this.httpuser.getPackageId(id).subscribe(packagedata => {\n\t\t\t\t\t\t\t\tthis.plist=packagedata;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tthis.transporter(this.plist[0].serial,this.plist[0].medicines, this.plist[0].barcode, this.plist[0].location, this.plist[0].level, this.plist[0].packages, this.plist[0].PackageId, this.plist[0].role, this.plist[0].time, this.mypublickey,this.packageStatus);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t});\t\t\n\n\t\t\t\t\t\t//this.getByPackageId(pdata.PackageId,'4');\n\t\t\t\t\t\t\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t/*Transfer child medicines to user account*/\n\t\t\t\n\t\t\tif(Array.isArray(this.mlist[0].medicines))\n\t\t\t\tvar meds = this.mlist[0].medicines;\n\t\t\telse\n\t\t\t\tvar meds = this.mlist[0].medicines.split(',');\n\t\t\t\n\t\t\tif(meds.length>0)\n\t\t\t{\n\t\t\t\tfor(var j=0;j < meds.length; j++)\n\t\t\t\t{\n\t\t\t\t\tthis.httpuser.getMedicineStatus3(meds[j]).subscribe((mdata) =>{\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tthis.httpuser.getMedicineId(id).subscribe(medicinedata => {\n\t\t\t\t\t\t\t\tthis.medlist=medicinedata;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t this.medicineTransporter(this.medlist[0].serial,this.medlist[0].medicine,this.medlist[0].barcode,this.medlist[0].location,this.medlist[0].weight,this.medlist[0].Edate,this.medlist[0].Mdate,this.medlist[0].MedicineId,this.medlist[0].role,this.medlist[0].time,this.mypublickey,this.medicineStatus);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\t\t\t//this.medicinedetails.push(mdata);\n\t\t\t\t\t\t\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.httpuser.deletePackageTransport(id,this.mypublickey).subscribe(res => {\n\n\t\t\t\talert(\"Package Opened \");\n\n\t\t\t });\n//  const Metadata = {\n//   \"action\": \"openPackage\",\n//   \"payloaddata\": {\n//       \"serialNumber\": this.mlist[0].serial,\n//       \"userRole\": this.myrole,\n//       \"admin\": false,\n// \t  \"level\":this.levelvalue\n//   },\n//   \"private\":this.privateKey,\n//   \"public\": this.mypublickey\n//     }\t    \n\n// const httpOptions = {\n// headers: new HttpHeaders({\n//   'Content-Type': 'application/json'\n// })\n// }\n\n//     return this.http.post(this.blockchainUrl, Metadata,httpOptions).subscribe(\n//  (val) => {\t\n\n//   console.log(\"POST call successful value returned in body\", val);\n//   this.blockchain = val;\n//   if (that.httpuser.IsJsonString(this.blockchain.response.body)) {\n//     JSON.parse(this.blockchain.response.body).hasOwnProperty(\"data\");\n\n//     this.status = JSON.parse(this.blockchain.response.body);            \n//     this.statusValue = this.status.data[0].status;\n//     this.itemId = this.status.data[0].id;\n//     if (this.statusValue == 'COMMITTED') {   \n// \t   this.displayTable=true; \n// \t  //this.openpackagecall(id,this.mypublickey);\n// \t\t/*Transfer child packages to user account*/\n// \t\t\tif(Array.isArray(this.mlist[0].packages))\n// \t\t\t\tvar meds = this.mlist[0].packages;\n// \t\t\telse\n// \t\t\t\tvar meds = this.mlist[0].packages.split(',');\n\t\t\t\n// \t\t\tif(meds.length>0)\n// \t\t\t{\n// \t\t\t\tfor(var j=0;j < meds.length; j++)\n// \t\t\t\t{\n// \t\t\t\t\tthis.httpuser.getPackageStatus3(meds[j]).subscribe((pdata) =>{\n\t\t\t\t\t\t\n// \t\t\t\t\t\t  this.httpuser.getPackageId(id).subscribe(packagedata => {\n// \t\t\t\t\t\t\t\tthis.plist=packagedata;\n\t\t\t\t\t\t\t\t\n// \t\t\t\t\t\t\t\tthis.transporter(this.plist[0].serial,this.plist[0].medicines, this.plist[0].barcode, this.plist[0].location, this.plist[0].level, this.plist[0].packages, this.plist[0].PackageId, this.plist[0].role, this.plist[0].time, this.mypublickey,this.packageStatus);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n// \t\t\t\t\t\t});\t\t\n\n// \t\t\t\t\t\t//this.getByPackageId(pdata.PackageId,'4');\n\t\t\t\t\t\t\n// \t\t\t\t\t});\n// \t\t\t\t}\n// \t\t\t}\n\t\t\t\n// \t\t\t/*Transfer child medicines to user account*/\n\t\t\t\n// \t\t\tif(Array.isArray(this.mlist[0].medicines))\n// \t\t\t\tvar meds = this.mlist[0].medicines;\n// \t\t\telse\n// \t\t\t\tvar meds = this.mlist[0].medicines.split(',');\n\t\t\t\n// \t\t\tif(meds.length>0)\n// \t\t\t{\n// \t\t\t\tfor(var j=0;j < meds.length; j++)\n// \t\t\t\t{\n// \t\t\t\t\tthis.httpuser.getMedicineStatus3(meds[j]).subscribe((mdata) =>{\n\t\t\t\t\t\t\n// \t\t\t\t\t\t\tthis.httpuser.getMedicineId(id).subscribe(medicinedata => {\n// \t\t\t\t\t\t\t\tthis.medlist=medicinedata;\n\t\t\t\t\t\t\t\t\n// \t\t\t\t\t\t\t\t this.medicineTransporter(this.medlist[0].serial,this.medlist[0].medicine,this.medlist[0].barcode,this.medlist[0].location,this.medlist[0].weight,this.medlist[0].Edate,this.medlist[0].Mdate,this.medlist[0].MedicineId,this.medlist[0].role,this.medlist[0].time,this.mypublickey,this.medicineStatus);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n// \t\t\t\t\t\t});\n\t\t\t\t\t\n// \t\t\t\t\t\t\t//this.medicinedetails.push(mdata);\n\t\t\t\t\t\t\n// \t\t\t\t\t});\n// \t\t\t\t}\n// \t\t\t}\n// \t\t\tthis.httpuser.deletePackageTransport(id,this.mypublickey).subscribe(res => {\n\n// \t\t\t\talert(\"Package Opened \");\n\n// \t\t\t });\n// \t\t\t//alert(\"Package Opened \");\n//   }\n//   else{\n// \t  alert(\"Process not completed\");\n//   }\n//   }\n//   else {\n\n//     that.http.get(this.httpuser.batchUrl +\"/batch_statuses?\" + this.blockchain.id + \"&wait\").subscribe((val) => {\n//       this.blockchain2 =val\n//       if (that.httpuser.IsJsonString(this.blockchain2.body)) {\n//         this.status = JSON.parse(this.blockchain2.body);\n//         console.log('json value2', this.status.data[0].status);\n//         this.statusValue = this.status.data[0].status;\n//         this.itemId = this.status.data[0].id;\n//         if (this.statusValue == 'COMMITTED') {\n// \t\t\t\t/*Transfer child packages to user account*/\n// \t\t\tif(Array.isArray(this.mlist[0].packages))\n// \t\t\t\tvar meds = this.mlist[0].packages;\n// \t\t\telse\n// \t\t\t\tvar meds = this.mlist[0].packages.split(',');\n\t\t\t\n// \t\t\tif(meds.length>0)\n// \t\t\t{\n// \t\t\t\tfor(var j=0;j < meds.length; j++)\n// \t\t\t\t{\n// \t\t\t\t\tthis.httpuser.getPackageStatus3(meds[j]).subscribe((pdata) =>{\n\t\t\t\t\t\t\n// \t\t\t\t\t\t  this.httpuser.getPackageId(id).subscribe(packagedata => {\n// \t\t\t\t\t\t\t\tthis.plist=packagedata;\n\t\t\t\t\t\t\t\t\n// \t\t\t\t\t\t\t\tthis.transporter(this.plist[0].serial,this.plist[0].medicines, this.plist[0].barcode, this.plist[0].location, this.plist[0].level, this.plist[0].packages, this.plist[0].PackageId, this.plist[0].role, this.plist[0].time, this.mypublickey,this.packageStatus);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n// \t\t\t\t\t\t});\t\t\n\n// \t\t\t\t\t\t//this.getByPackageId(pdata.PackageId,'4');\n\t\t\t\t\t\t\n// \t\t\t\t\t});\n// \t\t\t\t}\n// \t\t\t}\n\t\t\t\n// \t\t\t/*Transfer child medicines to user account*/\n\t\t\t\n// \t\t\tif(Array.isArray(this.mlist[0].medicines))\n// \t\t\t\tvar meds = this.mlist[0].medicines;\n// \t\t\telse\n// \t\t\t\tvar meds = this.mlist[0].medicines.split(',');\n\t\t\t\n// \t\t\tif(meds.length>0)\n// \t\t\t{\n// \t\t\t\tfor(var j=0;j < meds.length; j++)\n// \t\t\t\t{\n// \t\t\t\t\tthis.httpuser.getMedicineStatus3(meds[j]).subscribe((mdata) =>{\n\t\t\t\t\t\t\n// \t\t\t\t\t\t\tthis.httpuser.getMedicineId(id).subscribe(medicinedata => {\n// \t\t\t\t\t\t\t\tthis.medlist=medicinedata;\n\t\t\t\t\t\t\t\t\n// \t\t\t\t\t\t\t\t this.medicineTransporter(this.medlist[0].serial,this.medlist[0].medicine,this.medlist[0].barcode,this.medlist[0].location,this.medlist[0].weight,this.medlist[0].Edate,this.medlist[0].Mdate,this.medlist[0].MedicineId,this.medlist[0].role,this.medlist[0].time,this.mypublickey,this.medicineStatus);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n// \t\t\t\t\t\t});\n\t\t\t\t\t\n// \t\t\t\t\t\t\t//this.medicinedetails.push(mdata);\n\t\t\t\t\t\t\n// \t\t\t\t\t});\n// \t\t\t\t}\n// \t\t\t}\n\t\t\n// \t\t\t\tthis.httpuser.deletePackageTransport(id,this.mypublickey).subscribe(res => {\n\n// \t\t\t\talert(\"Package Opened \");\n\n// \t\t\t });\n//         }\n//         else {\n//           alert('Request Rejected');\n//         }\n//       }\n//     })\n//   }\n// // }).catch(function (err) {\n// //   console.log(err.message);\n// });\n});\n}\n\nmedicineTransporter(a,b,c,d,e,f,g,h,i,j,k,l){  \t  \n  this.transporter1 = new Medicine2(a,b,c,d,e,f,g,h,i,j,k,l);\n   this.base = this.httpuser.transporter(this.transporter1);\n  this.call = this.base.subscribe(\n    data => {       \n      alert(\"done\");\n      \n    },\n    err => {\n      console.log(err);\n    },\n    () => {\n      console.log(\"Done\");\n    }\n  );\n}\n\n\n\nmTransection(serial:string,wholesalerId:string,transpoterId:string) {   \n  console.log(serial,wholesalerId,transpoterId);\n  //Register User on Blockchain ==>> if \"COMMITED\" :: register in db else Mail (ERROR Message)\t\n\t\t\t  \n const Metadata = {\n\t\t\t  \"action\": \"sendToPharma\",\n    \"payloaddata\": {\n        \"serialNumber\": serial,\n        \"wholesaler\": {\n            \"address\": wholesalerId,\n            \"comment\": \"In Transaction\"\n        },\n        \"transporterid\": transpoterId,\n\t\t\"level\":this.levelvalue\n    },\n\t\t\t\t\"private\":this.privateKey,\n\t\t\t\t\"public\": this.mypublickey\n\t\t\t\t\t}\t    \n\t\n\tconst httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n\t\n            var x = this.http.post(this.blockchainUrl, Metadata,httpOptions).subscribe(\n       (val) => {\t\n\t   this.blockchain=val;\n        console.log(\"POST call successful value returned in body\",val);\n\t   if(this.blockchain){\n    this.transection = new Transection(serial,wholesalerId,transpoterId);\n    this.base = this.httpuser.medicineTransection(this.transection);\n    this.call = this.base.subscribe(\n      data => {        \n        alert(\"done\");        \n      },\n      err => {\n        console.log(err);\n      },\n      () => {\n        console.log(\"Done\");\n      }\n    );\n  }\n  else{\n\t  alert(\"Process not completed\");\n  }\n  });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlbmQvcmVjaWV2ZXBhY2thZ2VwaGFybWFyZXBvcnQvcmVjaWV2ZXBhY2thZ2VwaGFybWFyZXBvcnQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-dashboard></app-dashboard>\\n<div class=\\\"container\\\">\\n\\t<br>\\n\\t<br>\\n\\n    <div  class=\\\"table-responsive\\\">\\n      <br>\\n      <table class=\\\"table table-striped table-dark table-hover text-center\\\">\\n        \\n          <thead class=\\\"theme-table\\\">\\n\\t\\t  <tr>\\n\\t\\t<th colspan=\\\"3\\\"></th>\\n\\t\\t<th><button type=\\\"button\\\"   (click)=\\\"exporttocsv()\\\"  class=\\\"btn btn-primary\\\" >Export as CSV</button></th>\\n\\t\\t</tr>\\n              <tr>            \\n\\t\\t\\t\\t<th>Serial Number</th>\\n\\t\\t\\t\\t<th>Level</th>\\n\\t\\t\\t\\t<th>Location</th> \\n\\t\\t\\t\\t<th>Date</th>\\n              </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let list of TMlist\\\">\\n              <td><a [routerLink]=\\\"['/package/details',list.serial]\\\">{{list.serial}}</a></td>\\n              <td>{{list.level}}</td>\\n              <td>{{list.location}}</td>       \\n           \\n\\t\\t\\t <td> {{list.time | date: 'dd/MM/yyyy h:mm:ss a'}}</td>\\n              </tr>\\n           \\n          </tbody>\\n          <tfoot class=\\\"theme-table\\\"><tr>\\n\\t\\t<th colspan=\\\"3\\\"></th>\\n\\t\\t<th><button type=\\\"button\\\"   (click)=\\\"exporttocsv()\\\"  class=\\\"btn btn-primary\\\" >Export as CSV</button></th>\\n\\t\\t</tr></tfoot>\\n        </table>\\n      </div>\\n    \\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { QrCodeReader } from 'src/app/qr-code-reader.service';\nimport { Subscription } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Package2 } from 'src/app/admin/medicine/package-create/addpackage2';\nimport { Transection } from 'src/app/admin/medicine/medicine-list/transection';\nimport { Angular5Csv } from 'angular5-csv/dist/Angular5-csv';\nimport { Medicine2 } from 'src/app/admin/medicine/medicine-create/addmedicine2';\n@Component({\n  selector: 'app-recievepackagepharmareport',\n  templateUrl: './recievepackagepharmareport.component.html',\n  styleUrls: ['./recievepackagepharmareport.component.css']\n})\nexport class RecievepackagepharmareportComponent implements OnInit {\n \n  selectedWId: string = '';\n  selectedTId: string = '';\n  serialvalue:any=\" \";\n  levelvalue:any=\" \";\n  barcodevalue:any;\n  subscription: Subscription;\ntransporter1: any = Package2;\nlist: any = [];\nmlist:any=[];\nmedlist:any=[];\nplist:any=[];\ndlist:any=[];\ntlist:any=[];\nTMlist:any=[];\nmeds: any = [];\ntransection:any=Transection;\nbase;\ncall;\ndisplayTable:boolean=false;\nblockchain:any=[];\nblockchain2:any=[];\nstatus:any=[];\nstatusValue:any;\nitemId:any=[];\npackageStatus;\nmedicineStatus;\n\n  mypublickey:any;\n  myrole:any;\n  privateKey:any;\n  blockchainUrl:any = this.httpuser.blockchainUrl;\n\n  constructor(private httpuser: AuthService,private qrReader: QrCodeReader,private http: HttpClient) { }\n\n  ngOnInit() {\n\tthis.medicineStatus=\"Recived to Pharma\";\n    this.packageStatus=\"Recived to Pharma\";\n\tthis.myrole = localStorage.getItem(\"role\");\n    this.mypublickey =localStorage.getItem(\"publicKey\");\n    this.privateKey =localStorage.getItem(\"privateKey\");\n    this.transporterPackageId(this.mypublickey);\n    this.allPharma();\n    this.allTransporter();\n  }\n \n  selectChangeHandler1 (event: any) {\n    //update the ui\n    this.selectedWId = event.target.value;\n  }\n\n  selectChangeHandler2 (event: any) {\n    //update the ui\n    this.selectedTId = event.target.value;\n  }\n\n  serialId(serialId,level){\n\t  this.serialvalue=serialId;  \n\t  this.levelvalue = level;\n  }\n  \n\n  onFileChange(event) {\n    const file = event.target.files[0];\n    this.subscription = this.qrReader.decode(file)\n      .subscribe(decodedString =>{\n    this.barcodevalue= decodedString;\n    console.log(decodedString)\n    });\n  }\n\n\n  transporterPackageId(id) {\n    return this.httpuser.transporterPackage(id).subscribe(data => {\n      this.TMlist = data; \nconsole.log(this.TMlist);\t  \n    });\n  }\n\n  getByPackageId(id,statusid) {  \n    let that = this;\n    this.mypublickey =localStorage.getItem(\"publicKey\");\n    this.privateKey =localStorage.getItem(\"privateKey\");  \n    this.httpuser.getPackageId(id).subscribe(data => {\n   this.mlist=data;\n   this.displayTable=true; \n    if(statusid == 5) this.packageStatus = \"Rejected from Distributer\";\n\t\tthis.transporter(this.mlist[0].serial,this.mlist[0].medicines, this.mlist[0].barcode, this.mlist[0].location, this.mlist[0].level, this.mlist[0].packages, this.mlist[0].PackageId, this.mlist[0].role, this.mlist[0].time, this.mypublickey,this.packageStatus);\n\t\tif(statusid == 5)\n\t\t\talert(\"Package Returned \");\n\t\telse\n\t\t\talert(\"Package piked \");\n   //Register User on Blockchain ==>> if \"COMMITED\" :: register in db else Mail (ERROR Message)\t\n\t\t\t  \n//  const Metadata = {\n//   \"action\": \"recieveFromDistributer\",\n//   \"payloaddata\": {\n//       \"serialNumber\": this.mlist[0].serial,\n//       \"status\": statusid,\n//       \"comment\": \"Delivered\",\n// \t  \"level\":this.levelvalue\n//   },\n//   \"private\":this.privateKey,\n//   \"public\": this.mypublickey\n//     }\t    \n\n// const httpOptions = {\n// headers: new HttpHeaders({\n//   'Content-Type': 'application/json'\n// })\n// }\n\n//     return this.http.post(this.blockchainUrl, Metadata,httpOptions).subscribe(\n//  (val) => {\t\n//   console.log(\"POST call successful value returned in body\", val);\n//   this.blockchain = val;\n//   if (that.httpuser.IsJsonString(this.blockchain.response.body)) {\n//     JSON.parse(this.blockchain.response.body).hasOwnProperty(\"data\");\n\n//     this.status = JSON.parse(this.blockchain.response.body);            \n//     this.statusValue = this.status.data[0].status;\n//     this.itemId = this.status.data[0].id;\n//     if (this.statusValue == 'COMMITTED') {   \n//    this.displayTable=true; \n//     if(statusid == 5) this.packageStatus = \"Rejected from Distributer\";\n// \t\tthis.transporter(this.mlist[0].serial,this.mlist[0].medicines, this.mlist[0].barcode, this.mlist[0].location, this.mlist[0].level, this.mlist[0].packages, this.mlist[0].PackageId, this.mlist[0].role, this.mlist[0].time, this.mypublickey,this.packageStatus);\n// \t\tif(statusid == 5)\n// \t\t\talert(\"Package Returned \");\n// \t\telse\n// \t\t\talert(\"Package piked \");\n//   }\n//   else{\n// \t  alert(\"Process not completed\");\n//   }\n//   }\n//   else {\n\n//     that.http.get(this.httpuser.batchUrl +\"/batch_statuses?\" + this.blockchain.id + \"&wait\").subscribe((val) => {\n//       this.blockchain2 =val\n//       if (that.httpuser.IsJsonString(this.blockchain2.body)) {\n//         this.status = JSON.parse(this.blockchain2.body);\n//         console.log('json value2', this.status.data[0].status);\n//         this.statusValue = this.status.data[0].status;\n//         this.itemId = this.status.data[0].id;\n//         if (this.statusValue == 'COMMITTED') {\n// \t\t\t\tif(statusid == 5) this.packageStatus = \"Rejected to Distributer\";\n//                   this.transporter(this.mlist[0].serial,this.mlist[0].medicines, this.mlist[0].barcode, this.mlist[0].location, this.mlist[0].level, this.mlist[0].packages, this.mlist[0].PackageId, this.mlist[0].role, this.mlist[0].time, this.mypublickey,this.packageStatus);\n//                   if(statusid == 5)\n// \t\t\t\t\talert(\"Package Returned \");\n// \t\t\t\telse\n// \t\t\t\t\talert(\"Package picked\");\n//         }\n//         else {\n//           alert('Request Rejected');\n//         }\n//       }\n//     })\n//   }\n// // }).catch(function (err) {\n// //   console.log(err.message);\n// });\n});\n}\n\nallPharma() {\n  return this.httpuser.getallPharmaUser().subscribe(data => {\n    this.dlist = data; \nconsole.log(this.dlist);\t  \n  });\n}\n\nallTransporter() {\n  return this.httpuser.getallTransporterUser().subscribe(data => {\n    this.tlist = data; \nconsole.log(this.tlist);\t  \n  });\n}\n\n\ntransporter(a, b, c, d, e, f, g, h, i, j, k) {\n    this.transporter1 = new Package2(a, b, c, d, e, f, g, h, i, j, k);\n    this.base = this.httpuser.packagetransporter(this.transporter1);\n    this.call = this.base.subscribe(\n      data => {\n        alert(\"done\");\n\n      },\n      err => {\n        console.log(err);\n      },\n      () => {\n        console.log(\"Done\");\n      }\n    );\n  }\n\n \nopenpackage(id,level) {  \n    this.levelvalue=level;\n    let that = this;\n    this.mypublickey =localStorage.getItem(\"publicKey\");\n    this.privateKey =localStorage.getItem(\"privateKey\");  \n    this.httpuser.getPackageId(id).subscribe(data => {\n   this.mlist=data;\n\n   //Register User on Blockchain ==>> if \"COMMITED\" :: register in db else Mail (ERROR Message)\t\n   if(Array.isArray(this.mlist[0].packages))\n   \t\t\t\tvar meds = this.mlist[0].packages;\n   \t\t\telse\n   \t\t\t\tvar meds = this.mlist[0].packages.split(',');\n         \n   \t\t\tif(meds.length>0)\n   \t\t\t{\n   \t\t\t\tfor(var j=0;j < meds.length; j++)\n   \t\t\t\t{\n   \t\t\t\t\tthis.httpuser.getPackageStatus3(meds[j]).subscribe((pdata) =>{\n               \n   \t\t\t\t\t\t  this.httpuser.getPackageId(id).subscribe(packagedata => {\n   \t\t\t\t\t\t\t\tthis.plist=packagedata;\n                   \n   \t\t\t\t\t\t\t\tthis.transporter(this.plist[0].serial,this.plist[0].medicines, this.plist[0].barcode, this.plist[0].location, this.plist[0].level, this.plist[0].packages, this.plist[0].PackageId, this.plist[0].role, this.plist[0].time, this.mypublickey,this.packageStatus);\n                   \n                   \n   \t\t\t\t\t\t});\t\t\n   \n   \t\t\t\t\t\t//this.getByPackageId(pdata.PackageId,'4');\n               \n   \t\t\t\t\t});\n   \t\t\t\t}\n   \t\t\t}\n         \n   \t\t\t/*Transfer child medicines to user account*/\n         \n   \t\t\tif(Array.isArray(this.mlist[0].medicines))\n   \t\t\t\tvar meds = this.mlist[0].medicines;\n   \t\t\telse\n   \t\t\t\tvar meds = this.mlist[0].medicines.split(',');\n         \n   \t\t\tif(meds.length>0)\n   \t\t\t{\n   \t\t\t\tfor(var j=0;j < meds.length; j++)\n   \t\t\t\t{\n   \t\t\t\t\tthis.httpuser.getMedicineStatus3(meds[j]).subscribe((mdata) =>{\n               \n   \t\t\t\t\t\t\tthis.httpuser.getMedicineId(id).subscribe(medicinedata => {\n   \t\t\t\t\t\t\t\tthis.medlist=medicinedata;\n                   \n   \t\t\t\t\t\t\t\t this.medicineTransporter(this.medlist[0].serial,this.medlist[0].medicine,this.medlist[0].barcode,this.medlist[0].location,this.medlist[0].weight,this.medlist[0].Edate,this.medlist[0].Mdate,this.medlist[0].MedicineId,this.medlist[0].role,this.medlist[0].time,this.mypublickey,this.medicineStatus);\n                   \n                   \n   \t\t\t\t\t\t});\n             \n   \t\t\t\t\t\t\t//this.medicinedetails.push(mdata);\n               \n   \t\t\t\t\t});\n   \t\t\t\t}\n   \t\t\t}\n       \n   \t\t\t\tthis.httpuser.deletePackageTransport(id,this.mypublickey).subscribe(res => {\n   \n   \t\t\t\talert(\"Package Opened \");\n   \n   \t\t\t }); \n//  const Metadata = {\n//   \"action\": \"openPackage\",\n//   \"payloaddata\": {\n//       \"serialNumber\": this.mlist[0].serial,\n//       \"userRole\": this.myrole,\n//       \"admin\": false,\n// \t  \"level\":this.levelvalue\n//   },\n//   \"private\":this.privateKey,\n//   \"public\": this.mypublickey\n//     }\t    \n\n// const httpOptions = {\n// headers: new HttpHeaders({\n//   'Content-Type': 'application/json'\n// })\n// }\n\n//     return this.http.post(this.blockchainUrl, Metadata,httpOptions).subscribe(\n//  (val) => {\t\n\n//   console.log(\"POST call successful value returned in body\", val);\n//   this.blockchain = val;\n//   if (that.httpuser.IsJsonString(this.blockchain.response.body)) {\n//     JSON.parse(this.blockchain.response.body).hasOwnProperty(\"data\");\n\n//     this.status = JSON.parse(this.blockchain.response.body);            \n//     this.statusValue = this.status.data[0].status;\n//     this.itemId = this.status.data[0].id;\n//     if (this.statusValue == 'COMMITTED') {   \n// \t   this.displayTable=true; \n// \t  //this.openpackagecall(id,this.mypublickey);\n// \t\t/*Transfer child packages to user account*/\n// \t\t\tif(Array.isArray(this.mlist[0].packages))\n// \t\t\t\tvar meds = this.mlist[0].packages;\n// \t\t\telse\n// \t\t\t\tvar meds = this.mlist[0].packages.split(',');\n\t\t\t\n// \t\t\tif(meds.length>0)\n// \t\t\t{\n// \t\t\t\tfor(var j=0;j < meds.length; j++)\n// \t\t\t\t{\n// \t\t\t\t\tthis.httpuser.getPackageStatus3(meds[j]).subscribe((pdata) =>{\n\t\t\t\t\t\t\n// \t\t\t\t\t\t  this.httpuser.getPackageId(id).subscribe(packagedata => {\n// \t\t\t\t\t\t\t\tthis.plist=packagedata;\n\t\t\t\t\t\t\t\t\n// \t\t\t\t\t\t\t\tthis.transporter(this.plist[0].serial,this.plist[0].medicines, this.plist[0].barcode, this.plist[0].location, this.plist[0].level, this.plist[0].packages, this.plist[0].PackageId, this.plist[0].role, this.plist[0].time, this.mypublickey,this.packageStatus);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n// \t\t\t\t\t\t});\t\t\n\n// \t\t\t\t\t\t//this.getByPackageId(pdata.PackageId,'4');\n\t\t\t\t\t\t\n// \t\t\t\t\t});\n// \t\t\t\t}\n// \t\t\t}\n\t\t\t\n// \t\t\t/*Transfer child medicines to user account*/\n\t\t\t\n// \t\t\tif(Array.isArray(this.mlist[0].medicines))\n// \t\t\t\tvar meds = this.mlist[0].medicines;\n// \t\t\telse\n// \t\t\t\tvar meds = this.mlist[0].medicines.split(',');\n\t\t\t\n// \t\t\tif(meds.length>0)\n// \t\t\t{\n// \t\t\t\tfor(var j=0;j < meds.length; j++)\n// \t\t\t\t{\n// \t\t\t\t\tthis.httpuser.getMedicineStatus3(meds[j]).subscribe((mdata) =>{\n\t\t\t\t\t\t\n// \t\t\t\t\t\t\tthis.httpuser.getMedicineId(id).subscribe(medicinedata => {\n// \t\t\t\t\t\t\t\tthis.medlist=medicinedata;\n\t\t\t\t\t\t\t\t\n// \t\t\t\t\t\t\t\t this.medicineTransporter(this.medlist[0].serial,this.medlist[0].medicine,this.medlist[0].barcode,this.medlist[0].location,this.medlist[0].weight,this.medlist[0].Edate,this.medlist[0].Mdate,this.medlist[0].MedicineId,this.medlist[0].role,this.medlist[0].time,this.mypublickey,this.medicineStatus);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n// \t\t\t\t\t\t});\n\t\t\t\t\t\n// \t\t\t\t\t\t\t//this.medicinedetails.push(mdata);\n\t\t\t\t\t\t\n// \t\t\t\t\t});\n// \t\t\t\t}\n// \t\t\t}\n// \t\t\tthis.httpuser.deletePackageTransport(id,this.mypublickey).subscribe(res => {\n\n// \t\t\t\talert(\"Package Opened \");\n\n// \t\t\t });\n// \t\t\t//alert(\"Package Opened \");\n//   }\n//   else{\n// \t  alert(\"Process not completed\");\n//   }\n//   }\n//   else {\n\n//     that.http.get(this.httpuser.batchUrl +\"/batch_statuses?\" + this.blockchain.id + \"&wait\").subscribe((val) => {\n//       this.blockchain2 =val\n//       if (that.httpuser.IsJsonString(this.blockchain2.body)) {\n//         this.status = JSON.parse(this.blockchain2.body);\n//         console.log('json value2', this.status.data[0].status);\n//         this.statusValue = this.status.data[0].status;\n//         this.itemId = this.status.data[0].id;\n//         if (this.statusValue == 'COMMITTED') {\n// \t\t\t\t/*Transfer child packages to user account*/\n// \t\t\tif(Array.isArray(this.mlist[0].packages))\n// \t\t\t\tvar meds = this.mlist[0].packages;\n// \t\t\telse\n// \t\t\t\tvar meds = this.mlist[0].packages.split(',');\n\t\t\t\n// \t\t\tif(meds.length>0)\n// \t\t\t{\n// \t\t\t\tfor(var j=0;j < meds.length; j++)\n// \t\t\t\t{\n// \t\t\t\t\tthis.httpuser.getPackageStatus3(meds[j]).subscribe((pdata) =>{\n\t\t\t\t\t\t\n// \t\t\t\t\t\t  this.httpuser.getPackageId(id).subscribe(packagedata => {\n// \t\t\t\t\t\t\t\tthis.plist=packagedata;\n\t\t\t\t\t\t\t\t\n// \t\t\t\t\t\t\t\tthis.transporter(this.plist[0].serial,this.plist[0].medicines, this.plist[0].barcode, this.plist[0].location, this.plist[0].level, this.plist[0].packages, this.plist[0].PackageId, this.plist[0].role, this.plist[0].time, this.mypublickey,this.packageStatus);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n// \t\t\t\t\t\t});\t\t\n\n// \t\t\t\t\t\t//this.getByPackageId(pdata.PackageId,'4');\n\t\t\t\t\t\t\n// \t\t\t\t\t});\n// \t\t\t\t}\n// \t\t\t}\n\t\t\t\n// \t\t\t/*Transfer child medicines to user account*/\n\t\t\t\n// \t\t\tif(Array.isArray(this.mlist[0].medicines))\n// \t\t\t\tvar meds = this.mlist[0].medicines;\n// \t\t\telse\n// \t\t\t\tvar meds = this.mlist[0].medicines.split(',');\n\t\t\t\n// \t\t\tif(meds.length>0)\n// \t\t\t{\n// \t\t\t\tfor(var j=0;j < meds.length; j++)\n// \t\t\t\t{\n// \t\t\t\t\tthis.httpuser.getMedicineStatus3(meds[j]).subscribe((mdata) =>{\n\t\t\t\t\t\t\n// \t\t\t\t\t\t\tthis.httpuser.getMedicineId(id).subscribe(medicinedata => {\n// \t\t\t\t\t\t\t\tthis.medlist=medicinedata;\n\t\t\t\t\t\t\t\t\n// \t\t\t\t\t\t\t\t this.medicineTransporter(this.medlist[0].serial,this.medlist[0].medicine,this.medlist[0].barcode,this.medlist[0].location,this.medlist[0].weight,this.medlist[0].Edate,this.medlist[0].Mdate,this.medlist[0].MedicineId,this.medlist[0].role,this.medlist[0].time,this.mypublickey,this.medicineStatus);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n// \t\t\t\t\t\t});\n\t\t\t\t\t\n// \t\t\t\t\t\t\t//this.medicinedetails.push(mdata);\n\t\t\t\t\t\t\n// \t\t\t\t\t});\n// \t\t\t\t}\n// \t\t\t}\n\t\t\n// \t\t\t\tthis.httpuser.deletePackageTransport(id,this.mypublickey).subscribe(res => {\n\n// \t\t\t\talert(\"Package Opened \");\n\n// \t\t\t });\n//         }\n//         else {\n//           alert('Request Rejected');\n//         }\n//       }\n//     })\n//   }\n// // }).catch(function (err) {\n// //   console.log(err.message);\n// });\n});\n}\n\n\n   exporttocsv()\n  {\n\t  var data = [];\n\t  var  datarow = {};\n\t\n\tif(Array.isArray(this.TMlist))\n\t\t\tthis.meds = this.TMlist;\n\t\telse\n\t\t\tthis.meds = this.TMlist.split(',');\n\t\t\n\t  for(var i=0;i<=this.meds.length;i++)\n\t  {\n\t\t  console.log(\"meds==\" + this.meds[i]);\n\t\t  if(typeof this.meds[i] != \"undefined\")\n\t\t  {\n\t\t\tdatarow = {\n\t\t\tserial:this.meds[i].serial,\n\t\t\tlocation: this.meds[i].location,\n\t\t\tlevel: this.meds[i].level,\n\t\t\ttime: this.meds[i].time,\n\t\t\t};\n\t\t\tdata.push(datarow);\n\t\t  }\n\t  }\n\n\t\tvar options = {\n\t\tfieldSeparator: ',',\n\t\tquoteStrings: '\"',\n\t\tdecimalseparator: '.',\n\t\tshowLabels: true,\n\t\tshowTitle: true,\n\t\theaders: [\"Serial Number\",\"Location\",\"Level\", \"Date/Time\"]\n\t\t};\n\n\t\tnew Angular5Csv(data, 'Report1',options);\n\n\t\treturn true;\n  }\n\n\n\n  \n\nmedicineTransporter(a,b,c,d,e,f,g,h,i,j,k,l){  \t  \n  this.transporter1 = new Medicine2(a,b,c,d,e,f,g,h,i,j,k,l);\n   this.base = this.httpuser.transporter(this.transporter1);\n  this.call = this.base.subscribe(\n    data => {       \n      alert(\"done\");\n      \n    },\n    err => {\n      console.log(err);\n    },\n    () => {\n      console.log(\"Done\");\n    }\n  );\n}\n\n\n\nmTransection(serial:string,wholesalerId:string,transpoterId:string) {   \n  console.log(serial,wholesalerId,transpoterId);\n  //Register User on Blockchain ==>> if \"COMMITED\" :: register in db else Mail (ERROR Message)\t\n\t\t\t  \n//  const Metadata = {\n// \t\t\t  \"action\": \"sendToPharma\",\n//     \"payloaddata\": {\n//         \"serialNumber\": serial,\n//         \"wholesaler\": {\n//             \"address\": wholesalerId,\n//             \"comment\": \"In Transaction\"\n//         },\n//         \"transporterid\": transpoterId,\n// \t\t\"level\":this.levelvalue\n//     },\n// \t\t\t\t\"private\":this.privateKey,\n// \t\t\t\t\"public\": this.mypublickey\n// \t\t\t\t\t}\t    \n\t\n// \tconst httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json'\n//       })\n//     };\n\t\n//             var x = this.http.post(this.blockchainUrl, Metadata,httpOptions).subscribe(\n//        (val) => {\t\n// \t   this.blockchain=val;\n//         console.log(\"POST call successful value returned in body\",val);\n// \t   if(this.blockchain){\n//     this.transection = new Transection(serial,wholesalerId,transpoterId);\n//     this.base = this.httpuser.medicineTransection(this.transection);\n//     this.call = this.base.subscribe(\n//       data => {        \n//         alert(\"done\");        \n//       },\n//       err => {\n//         console.log(err);\n//       },\n//       () => {\n//         console.log(\"Done\");\n//       }\n//     );\n//   }\n//   else{\n// \t  alert(\"Process not completed\");\n//   }\n//   });\n  }\n\n}\n","module.exports = \"table {\\n    width: 100%;\\n    \\n  }\\n\\n \\n#heading{\\n    background-color: rgb(18, 50, 190); \\n    color:white;\\n}\\n\\n \\n.pd{\\n  background: navy;\\n}\\n\\n \\ntd a {\\n  display:block;\\n  width:100%;\\n  background-clip: padding-box; \\n  border-radius: 5px;\\n  background-color: blue;\\n  color: white;\\n  border: 2px solid green;\\n}\\n\\n \\na {\\n  text-decoration: none !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2VuZC9yZWNpZXZlcGFja2FnZXdob2xlc2FsZXIvcmVjaWV2ZXBhY2thZ2V3aG9sZXNhbGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXOztFQUViOzs7QUFHRjtJQUNJLGtDQUFrQztJQUNsQyxXQUFXO0FBQ2Y7OztBQUNBO0VBQ0UsZ0JBQWdCO0FBQ2xCOzs7QUFDQTtFQUNFLGFBQWE7RUFDYixVQUFVO0VBQ1YsNEJBQTRCO0VBQzVCLGtCQUFrQjtFQUNsQixzQkFBc0I7RUFDdEIsWUFBWTtFQUNaLHVCQUF1QjtBQUN6Qjs7O0FBQ0E7RUFDRSxnQ0FBZ0M7QUFDbEMiLCJmaWxlIjoic3JjL2FwcC9zZW5kL3JlY2lldmVwYWNrYWdld2hvbGVzYWxlci9yZWNpZXZlcGFja2FnZXdob2xlc2FsZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBcbiAgfVxuXG4gXG4jaGVhZGluZ3tcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTgsIDUwLCAxOTApOyBcbiAgICBjb2xvcjp3aGl0ZTtcbn1cbi5wZHtcbiAgYmFja2dyb3VuZDogbmF2eTtcbn1cbnRkIGEge1xuICBkaXNwbGF5OmJsb2NrO1xuICB3aWR0aDoxMDAlO1xuICBiYWNrZ3JvdW5kLWNsaXA6IHBhZGRpbmctYm94OyBcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBibHVlO1xuICBjb2xvcjogd2hpdGU7XG4gIGJvcmRlcjogMnB4IHNvbGlkIGdyZWVuO1xufVxuYSB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZSAhaW1wb3J0YW50O1xufSJdfQ== */\"","module.exports = \"<app-dashboard></app-dashboard>\\n<div class=\\\"container\\\">\\n\\t<br>\\n\\t<br>\\n\\n\\t<form>\\n\\t\\n        <div class=\\\"row\\\"> \\n          <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n            <label>Packing Barcode</label>\\n\\t\\t\\t<input type=\\\"file\\\" style=\\\"margin-left:20px;\\\" accept=\\\"image/*\\\" (change)=\\\"onFileChange($event)\\\">\\n            <input #br type=\\\"text\\\" value=\\\"{{barcodevalue}}\\\" class=\\\"form-control required\\\" >\\n          </div>\\n        </div>\\n        \\n            \\n          </div>\\n            <div class=\\\"row text-right\\\">\\n             \\t\\t<div class=\\\"col\\\">\\n             \\t\\t\\t<div class=\\\"form-group\\\">\\n                  \\t\\t\\t<button type=\\\"reset\\\" (click)=\\\"getByPackageId(br.value,4)\\\" class=\\\"btn btn-primary\\\">Recieve</button>\\n\\t\\t\\t\\t\\t\\t\\t&nbsp; &nbsp; &nbsp; \\n              <button type=\\\"reset\\\" (click)=\\\"getByPackageId(br.value,5)\\\" class=\\\"btn btn-secondary\\\">Reject</button>\\n              &nbsp; &nbsp; &nbsp;\\n              <button type=\\\"reset\\\" (click)=\\\"getdetails(br.value,5)\\\" class=\\\"btn btn-primary\\\">Get Details</button>\\n                \\t\\t</div>\\n                </div>\\n             </div>\\n\\t</form>\\n\\n\\n  <div *ngIf=\\\"displayTable\\\" class=\\\"table-responsive\\\">\\n    <br>\\n    <table class=\\\"table table-striped table-dark table-hover text-center\\\">\\n      \\n        <thead class=\\\"theme-table\\\">\\n            <tr>            \\n              <th> Serial Number</th>\\n              <th>Level</th>\\n             <th>Location</th>\\n              \\n            </tr>\\n        </thead>\\n        <tbody>\\n          <tr>\\n            <td><a [routerLink]=\\\"['/package/details',mlist[0].serial]\\\">{{mlist[0].serial}}</a></td>\\n            <td>{{mlist[0].level}}</td>\\n            <td>{{mlist[0].location}}</td>\\n            \\n          </tr>\\n         \\n        </tbody>\\n        <tfoot class=\\\"theme-table\\\"><tr><th></th><th></th><th></th></tr></tfoot>\\n      </table>\\n    </div>\\n\\n    <div  class=\\\"table-responsive\\\">\\n      <br>\\n      <table class=\\\"table table-striped table-dark table-hover text-center\\\">\\n        \\n          <thead class=\\\"theme-table\\\">\\n              <tr>            \\n                  <th> Serial Number</th>\\n                  <th>Level</th>\\n                  <th>Location</th>\\n                  <th></th>             \\n              </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let list of TMlist\\\">\\n              <td><a [routerLink]=\\\"['/package/details',list.serial]\\\">{{list.serial}}</a></td>\\n              <td>{{list.level}}</td>\\n              <td>{{list.location}}</td>        \\n              <td><button type=\\\"button\\\"   (click)=\\\"serialId(list.serial,list.level)\\\"  class=\\\"btn btn-success\\\" data-toggle=\\\"modal\\\" data-target=\\\"#exampleModalCenter\\\">Send to Distributer</button> &nbsp; &nbsp; &nbsp;  <button type=\\\"button\\\"   (click)=\\\"openpackage(list.PackageId,list.level)\\\"  class=\\\"btn btn-primary\\\">Open Package</button></td>\\n              </tr>\\n           \\n          </tbody>\\n          <tfoot class=\\\"theme-table\\\"><tr><th></th><th></th><th></th><th></th></tr></tfoot>\\n        </table>\\n      </div>\\n    \\n\\n</div>\\n\\n\\n   <!-- Modal -->\\n   <div class=\\\"modal fade\\\" id=\\\"exampleModalCenter\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalCenterTitle\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLongTitle\\\">Package Transportation</h5>\\n          \\n        </div>\\n        <div class=\\\"modal-body\\\">\\n      \\n      <div class=\\\"row\\\">\\n            <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n                <label>Serial</label>\\n                <input #serial   type=\\\"text\\\" [(ngModel)]=\\\"serialvalue\\\" class=\\\"form-control required\\\">\\n              </div></div>           \\n          </div>   \\n           <div class=\\\"row\\\">          \\n                <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n                  <label>DistributerId</label>\\n           <select [(ngModel)]=\\\"wId1\\\" class=\\\"form-control\\\" >\\n                <option    *ngFor=\\\"let wid of dlist\\\" [value]=\\\"wid.publicKey\\\">{{wid.firstName}}</option>\\n                            </select>   \\n                </div></div>\\n            </div>       \\n    <div class=\\\"row\\\">\\n            <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n                <label>TransporterId</label>\\n          <select [(ngModel)]=\\\"tId1\\\" class=\\\"form-control\\\">\\n                <option  *ngFor=\\\"let wid of tlist\\\" [value]=\\\"wid.userId\\\">{{wid.firstName}}</option>\\n                            </select> \\n              </div></div>           \\n          </div> \\t\\t\\n  \\n            \\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" #completeModal  data-dismiss=\\\"modal\\\">Close</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"mTransection(serial.value,wId1,tId1)\\\">Send</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { QrCodeReader } from 'src/app/qr-code-reader.service';\nimport { Subscription } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Package2 } from 'src/app/admin/medicine/package-create/addpackage2';\nimport { Transection } from 'src/app/admin/medicine/package-list/transection';\nimport { Medicine2 } from 'src/app/admin/medicine/medicine-create/addmedicine2';\n\n@Component({\n  selector: 'app-recievepackagewholesaler',\n  templateUrl: './recievepackagewholesaler.component.html',\n  styleUrls: ['./recievepackagewholesaler.component.css']\n})\nexport class RecievepackagewholesalerComponent implements OnInit {\n\n  selectedWId: string = '';\n  selectedTId: string = '';\n  serialvalue: any;\n  levelvalue: any;\n  barcodevalue: any;\n  subscription: Subscription;\n  transporter1: any = Package2;\n  list: any = [];\n  mlist: any = [];\n  medlist: any = [];\n  plist: any = [];\n  dlist: any = [];\n  tlist: any = [];\n  TMlist: any = [];\n  wid1: any = '';\n  tid1: any = '';\n  transection: any = Transection;\n  base;\n  call;\n  displayTable: boolean = false;\n  blockchain: any = [];\n  blockchain2: any = [];\n  status: any = [];\n  statusValue: any;\n  itemId: any = [];\n  packageStatus;\n  medicineStatus;\n  mypublickey: any; myrole: any;\n  privateKey: any;\n  blockchainUrl: any = this.httpuser.blockchainUrl;\n\n  constructor(private route: Router, private httpuser: AuthService, private qrReader: QrCodeReader, private http: HttpClient) { }\n\n  ngOnInit() {\n    this.medicineStatus = \"Recived to Wholesaler\";\n    this.packageStatus = \"Recived to Wholesaler\";\n    this.myrole = localStorage.getItem(\"role\");\n    this.mypublickey = localStorage.getItem(\"publicKey\");\n    this.privateKey = localStorage.getItem(\"privateKey\");\n    this.transporterPackageId(this.mypublickey);\n    this.allDistributer();\n    this.allTransporter();\n  }\n\n  selectChangeHandler1(event: any) {\n    //update the ui\n    this.selectedWId = event.target.value;\n  }\n\n  selectChangeHandler2(event: any) {\n    //update the ui\n    this.selectedTId = event.target.value;\n  }\n\n  serialId(serialId, level) {\n    this.serialvalue = serialId;\n    this.levelvalue = level;\n  }\n\n\n  onFileChange(event) {\n    const file = event.target.files[0];\n    this.subscription = this.qrReader.decode(file)\n      .subscribe(decodedString => {\n        this.barcodevalue = decodedString;\n        console.log(decodedString)\n      });\n  }\n\n  transporterPackageId(id) {\n    return this.httpuser.transporterPackage(id).subscribe(data => {\n      this.TMlist = data;\n      console.log('Package list', data);\n    });\n  }\n\n  getdetails(id, statusid) {\n    let that = this;\n    this.mypublickey = localStorage.getItem(\"publicKey\");\n    this.privateKey = localStorage.getItem(\"privateKey\");\n    this.httpuser.getPackageId(id).subscribe(data => {\n      this.mlist = data;\n\n      this.route.navigate(['/package/details/' + this.mlist[0].serial]);\n    });\n  }\n\n  getByPackageId(id, statusid) {\n\n    let that = this;\n    this.mypublickey = localStorage.getItem(\"publicKey\");\n    this.privateKey = localStorage.getItem(\"privateKey\");\n    this.httpuser.getPackageId(id).subscribe(data => {\n      this.mlist = data;\n      this.displayTable = true;\n      if (statusid == 5) this.packageStatus = \"Rejected from Distributer\";\n      this.transporter(this.mlist[0].serial, this.mlist[0].medicines, this.mlist[0].barcode, this.mlist[0].location, this.mlist[0].level, this.mlist[0].packages, this.mlist[0].PackageId, this.mlist[0].role, this.mlist[0].time, this.mypublickey, this.packageStatus);\n      if (statusid == 5)\n        alert(\"Package Returned \");\n      else\n        alert(\"Package piked \");\n      //Register User on Blockchain ==>> if \"COMMITED\" :: register in db else Mail (ERROR Message)\t\n\n      //const Metadata = {\n      //   \"action\": \"recieveFromManufecturer\",\n      //   \"payloaddata\": {\n      //       \"serialNumber\": this.mlist[0].serial,\n      //       \"status\": statusid,\n      //       \"comment\": \"Delivered\",\n      // \t  \"level\": this.mlist[0].level,\n      //   },\n      //   \"private\":this.privateKey,\n      //   \"public\": this.mypublickey\n      //     }\t    \n\n      // const httpOptions = {\n      // headers: new HttpHeaders({\n      //   'Content-Type': 'application/json'\n      // })\n      // }\n\n      //     return this.http.post(this.blockchainUrl, Metadata,httpOptions).subscribe(\n      //  (val) => {\t\n\n      //   console.log(\"POST call successful value returned in body\", val);\n      //   this.blockchain = val;\n      //   if (that.httpuser.IsJsonString(this.blockchain.response.body)) {\n      //     JSON.parse(this.blockchain.response.body).hasOwnProperty(\"data\");\n\n      //     this.status = JSON.parse(this.blockchain.response.body);            \n      //     this.statusValue = this.status.data[0].status;\n      //     this.itemId = this.status.data[0].id;\n      //     if (this.statusValue == 'COMMITTED') {   \n      // \t   this.displayTable=true; \n      // \t   if(statusid == 5) this.packageStatus = \"Rejected from Distributer\";\n      // \t\tthis.transporter(this.mlist[0].serial,this.mlist[0].medicines, this.mlist[0].barcode, this.mlist[0].location, this.mlist[0].level, this.mlist[0].packages, this.mlist[0].PackageId, this.mlist[0].role, this.mlist[0].time, this.mypublickey,this.packageStatus);\n      // \t\tif(statusid == 5)\n      // \t\t\talert(\"Package Returned \");\n      // \t\telse\n      // \t\t\talert(\"Package piked \");\n      //   }\n      //   else{\n      // \t  alert(\"Process not completed\");\n      //   }\n      //   }\n      //   else {\n\n      //     that.http.get(this.httpuser.batchUrl +\"/batch_statuses?\" + this.blockchain.id + \"&wait\").subscribe((val) => {\n      //       this.blockchain2 =val\n      //       if (that.httpuser.IsJsonString(this.blockchain2.body)) {\n      //         this.status = JSON.parse(this.blockchain2.body);\n      //         console.log('json value2', this.status.data[0].status);\n      //         this.statusValue = this.status.data[0].status;\n      //         this.itemId = this.status.data[0].id;\n      //         if (this.statusValue == 'COMMITTED') {\n      // \t\t\t\tif(statusid == 5) this.packageStatus = \"Rejected to Distributer\";\n      //                   this.transporter(this.mlist[0].serial,this.mlist[0].medicines, this.mlist[0].barcode, this.mlist[0].location, this.mlist[0].level, this.mlist[0].packages, this.mlist[0].PackageId, this.mlist[0].role, this.mlist[0].time, this.mypublickey,this.packageStatus);\n      //                   if(statusid == 5)\n      // \t\t\t\t\talert(\"Package Returned \");\n      // \t\t\t\telse\n      // \t\t\t\t\talert(\"Package picked\");\n      //         }\n      //         else {\n      //           alert('Request Rejected');\n      //         }\n      //       }\n      //     })\n      //   }\n      // // }).catch(function (err) {\n      // //   console.log(err.message);\n      // });\n    });\n  }\n\n  allDistributer() {\n    return this.httpuser.getallDistributerUser().subscribe(data => {\n      this.dlist = data;\n      console.log(this.dlist);\n    });\n  }\n\n  allTransporter() {\n    return this.httpuser.getallTransporterUser().subscribe(data => {\n      this.tlist = data;\n      console.log(this.tlist);\n    });\n  }\n  transporter(a, b, c, d, e, f, g, h, i, j, k) {\n    this.transporter1 = new Package2(a, b, c, d, e, f, g, h, i, j, k);\n    this.base = this.httpuser.packagetransporter(this.transporter1);\n    this.call = this.base.subscribe(\n      data => {\n        alert(\"done\");\n\n      },\n      err => {\n        console.log(err);\n      },\n      () => {\n        console.log(\"Done\");\n      }\n    );\n  }\n\n  openpackage(id, level) {\n    this.levelvalue = level;\n    let that = this;\n    this.mypublickey = localStorage.getItem(\"publicKey\");\n    this.privateKey = localStorage.getItem(\"privateKey\");\n    this.httpuser.getPackageId(id).subscribe(data => {\n      this.mlist = data;\n\n      //Register User on Blockchain ==>> if \"COMMITED\" :: register in db else Mail (ERROR Message)\t\n      \t   this.displayTable=true; \n      \t  //this.openpackagecall(id,this.mypublickey);\n      \t\t/*Transfer child packages to user account*/\n      \t\t\tif(Array.isArray(this.mlist[0].packages))\n      \t\t\t\tvar meds = this.mlist[0].packages;\n      \t\t\telse\n      \t\t\t\tvar meds = this.mlist[0].packages.split(',');\n\n      \t\t\tif(meds.length>0)\n      \t\t\t{\n      \t\t\t\tfor(var j=0;j < meds.length; j++)\n      \t\t\t\t{\n      \t\t\t\t\tthis.httpuser.getPackageStatus3(meds[j]).subscribe((pdata) =>{\n\n      \t\t\t\t\t\t  this.httpuser.getPackageId(id).subscribe(packagedata => {\n      \t\t\t\t\t\t\t\tthis.plist=packagedata;\n\n      \t\t\t\t\t\t\t\tthis.transporter(this.plist[0].serial,this.plist[0].medicines, this.plist[0].barcode, this.plist[0].location, this.plist[0].level, this.plist[0].packages, this.plist[0].PackageId, this.plist[0].role, this.plist[0].time, this.mypublickey,this.packageStatus);\n\n\n      \t\t\t\t\t\t});\t\t\n\n      \t\t\t\t\t\t//this.getByPackageId(pdata.PackageId,'4');\n\n      \t\t\t\t\t});\n      \t\t\t\t}\n      \t\t\t}\n\n      \t\t\t/*Transfer child medicines to user account*/\n\n      \t\t\tif(Array.isArray(this.mlist[0].medicines))\n      \t\t\t\tvar meds = this.mlist[0].medicines;\n      \t\t\telse\n      \t\t\t\tvar meds = this.mlist[0].medicines.split(',');\n\n      \t\t\tif(meds.length>0)\n      \t\t\t{\n      \t\t\t\tfor(var j=0;j < meds.length; j++)\n      \t\t\t\t{\n      \t\t\t\t\tthis.httpuser.getMedicineStatus3(meds[j]).subscribe((mdata) =>{\n\n      \t\t\t\t\t\t\tthis.httpuser.getMedicineId(id).subscribe(medicinedata => {\n      \t\t\t\t\t\t\t\tthis.medlist=medicinedata;\n\n      \t\t\t\t\t\t\t\t this.medicineTransporter(this.medlist[0].serial,this.medlist[0].medicine,this.medlist[0].barcode,this.medlist[0].location,this.medlist[0].weight,this.medlist[0].Edate,this.medlist[0].Mdate,this.medlist[0].MedicineId,this.medlist[0].role,this.medlist[0].time,this.mypublickey,this.medicineStatus);\n\n\n      \t\t\t\t\t\t});\n\n      \t\t\t\t\t\t\t//this.medicinedetails.push(mdata);\n\n      \t\t\t\t\t});\n      \t\t\t\t}\n      \t\t\t}\n      \t\t\tthis.httpuser.deletePackageTransport(id,this.mypublickey).subscribe(res => {\n\n      \t\t\t\talert(\"Package Opened \");\n\n      \t\t\t });\n      //  const Metadata = {\n      //   \"action\": \"openPackage\",\n      //   \"payloaddata\": {\n      //       \"serialNumber\": this.mlist[0].serial,\n      //       \"userRole\": this.myrole,\n      //       \"admin\": false,\n      // \t  \"level\":this.levelvalue\n      //   },\n      //   \"private\":this.privateKey,\n      //   \"public\": this.mypublickey\n      //     }\t    \n\n      // const httpOptions = {\n      // headers: new HttpHeaders({\n      //   'Content-Type': 'application/json'\n      // })\n      // }\n\n      //     return this.http.post(this.blockchainUrl, Metadata,httpOptions).subscribe(\n      //  (val) => {\t\n\n      //   console.log(\"POST call successful value returned in body\", val);\n      //   this.blockchain = val;\n      //   if (that.httpuser.IsJsonString(this.blockchain.response.body)) {\n      //     JSON.parse(this.blockchain.response.body).hasOwnProperty(\"data\");\n\n      //     this.status = JSON.parse(this.blockchain.response.body);            \n      //     this.statusValue = this.status.data[0].status;\n      //     this.itemId = this.status.data[0].id;\n      //     if (this.statusValue == 'COMMITTED') {   \n      // \t   this.displayTable=true; \n      // \t  //this.openpackagecall(id,this.mypublickey);\n      // \t\t/*Transfer child packages to user account*/\n      // \t\t\tif(Array.isArray(this.mlist[0].packages))\n      // \t\t\t\tvar meds = this.mlist[0].packages;\n      // \t\t\telse\n      // \t\t\t\tvar meds = this.mlist[0].packages.split(',');\n\n      // \t\t\tif(meds.length>0)\n      // \t\t\t{\n      // \t\t\t\tfor(var j=0;j < meds.length; j++)\n      // \t\t\t\t{\n      // \t\t\t\t\tthis.httpuser.getPackageStatus3(meds[j]).subscribe((pdata) =>{\n\n      // \t\t\t\t\t\t  this.httpuser.getPackageId(id).subscribe(packagedata => {\n      // \t\t\t\t\t\t\t\tthis.plist=packagedata;\n\n      // \t\t\t\t\t\t\t\tthis.transporter(this.plist[0].serial,this.plist[0].medicines, this.plist[0].barcode, this.plist[0].location, this.plist[0].level, this.plist[0].packages, this.plist[0].PackageId, this.plist[0].role, this.plist[0].time, this.mypublickey,this.packageStatus);\n\n\n      // \t\t\t\t\t\t});\t\t\n\n      // \t\t\t\t\t\t//this.getByPackageId(pdata.PackageId,'4');\n\n      // \t\t\t\t\t});\n      // \t\t\t\t}\n      // \t\t\t}\n\n      // \t\t\t/*Transfer child medicines to user account*/\n\n      // \t\t\tif(Array.isArray(this.mlist[0].medicines))\n      // \t\t\t\tvar meds = this.mlist[0].medicines;\n      // \t\t\telse\n      // \t\t\t\tvar meds = this.mlist[0].medicines.split(',');\n\n      // \t\t\tif(meds.length>0)\n      // \t\t\t{\n      // \t\t\t\tfor(var j=0;j < meds.length; j++)\n      // \t\t\t\t{\n      // \t\t\t\t\tthis.httpuser.getMedicineStatus3(meds[j]).subscribe((mdata) =>{\n\n      // \t\t\t\t\t\t\tthis.httpuser.getMedicineId(id).subscribe(medicinedata => {\n      // \t\t\t\t\t\t\t\tthis.medlist=medicinedata;\n\n      // \t\t\t\t\t\t\t\t this.medicineTransporter(this.medlist[0].serial,this.medlist[0].medicine,this.medlist[0].barcode,this.medlist[0].location,this.medlist[0].weight,this.medlist[0].Edate,this.medlist[0].Mdate,this.medlist[0].MedicineId,this.medlist[0].role,this.medlist[0].time,this.mypublickey,this.medicineStatus);\n\n\n      // \t\t\t\t\t\t});\n\n      // \t\t\t\t\t\t\t//this.medicinedetails.push(mdata);\n\n      // \t\t\t\t\t});\n      // \t\t\t\t}\n      // \t\t\t}\n      // \t\t\tthis.httpuser.deletePackageTransport(id,this.mypublickey).subscribe(res => {\n\n      // \t\t\t\talert(\"Package Opened \");\n\n      // \t\t\t });\n      // \t\t\t//alert(\"Package Opened \");\n      //   }\n      //   else{\n      // \t  alert(\"Process not completed\");\n      //   }\n      //   }\n      //   else {\n\n      //     that.http.get(this.httpuser.batchUrl +\"/batch_statuses?\" + this.blockchain.id + \"&wait\").subscribe((val) => {\n      //       this.blockchain2 =val\n      //       if (that.httpuser.IsJsonString(this.blockchain2.body)) {\n      //         this.status = JSON.parse(this.blockchain2.body);\n      //         console.log('json value2', this.status.data[0].status);\n      //         this.statusValue = this.status.data[0].status;\n      //         this.itemId = this.status.data[0].id;\n      //         if (this.statusValue == 'COMMITTED') {\n      // \t\t\t\t/*Transfer child packages to user account*/\n      // \t\t\tif(Array.isArray(this.mlist[0].packages))\n      // \t\t\t\tvar meds = this.mlist[0].packages;\n      // \t\t\telse\n      // \t\t\t\tvar meds = this.mlist[0].packages.split(',');\n\n      // \t\t\tif(meds.length>0)\n      // \t\t\t{\n      // \t\t\t\tfor(var j=0;j < meds.length; j++)\n      // \t\t\t\t{\n      // \t\t\t\t\tthis.httpuser.getPackageStatus3(meds[j]).subscribe((pdata) =>{\n\n      // \t\t\t\t\t\t  this.httpuser.getPackageId(id).subscribe(packagedata => {\n      // \t\t\t\t\t\t\t\tthis.plist=packagedata;\n\n      // \t\t\t\t\t\t\t\tthis.transporter(this.plist[0].serial,this.plist[0].medicines, this.plist[0].barcode, this.plist[0].location, this.plist[0].level, this.plist[0].packages, this.plist[0].PackageId, this.plist[0].role, this.plist[0].time, this.mypublickey,this.packageStatus);\n\n\n      // \t\t\t\t\t\t});\t\t\n\n      // \t\t\t\t\t\t//this.getByPackageId(pdata.PackageId,'4');\n\n      // \t\t\t\t\t});\n      // \t\t\t\t}\n      // \t\t\t}\n\n      // \t\t\t/*Transfer child medicines to user account*/\n\n      // \t\t\tif(Array.isArray(this.mlist[0].medicines))\n      // \t\t\t\tvar meds = this.mlist[0].medicines;\n      // \t\t\telse\n      // \t\t\t\tvar meds = this.mlist[0].medicines.split(',');\n\n      // \t\t\tif(meds.length>0)\n      // \t\t\t{\n      // \t\t\t\tfor(var j=0;j < meds.length; j++)\n      // \t\t\t\t{\n      // \t\t\t\t\tthis.httpuser.getMedicineStatus3(meds[j]).subscribe((mdata) =>{\n\n      // \t\t\t\t\t\t\tthis.httpuser.getMedicineId(id).subscribe(medicinedata => {\n      // \t\t\t\t\t\t\t\tthis.medlist=medicinedata;\n\n      // \t\t\t\t\t\t\t\t this.medicineTransporter(this.medlist[0].serial,this.medlist[0].medicine,this.medlist[0].barcode,this.medlist[0].location,this.medlist[0].weight,this.medlist[0].Edate,this.medlist[0].Mdate,this.medlist[0].MedicineId,this.medlist[0].role,this.medlist[0].time,this.mypublickey,this.medicineStatus);\n\n\n      // \t\t\t\t\t\t});\n\n      // \t\t\t\t\t\t\t//this.medicinedetails.push(mdata);\n\n      // \t\t\t\t\t});\n      // \t\t\t\t}\n      // \t\t\t}\n\n      // \t\t\t\tthis.httpuser.deletePackageTransport(id,this.mypublickey).subscribe(res => {\n\n      // \t\t\t\talert(\"Package Opened \");\n\n      // \t\t\t });\n      //         }\n      //         else {\n      //           alert('Request Rejected');\n      //         }\n      //       }\n      //     })\n      //   }\n      // // }).catch(function (err) {\n      // //   console.log(err.message);\n      // });\n    });\n  }\n\n  medicineTransporter(a, b, c, d, e, f, g, h, i, j, k, l) {\n    this.transporter1 = new Medicine2(a, b, c, d, e, f, g, h, i, j, k, l);\n    this.base = this.httpuser.transporter(this.transporter1);\n    this.call = this.base.subscribe(\n      data => {\n        alert(\"done\");\n\n      },\n      err => {\n        console.log(err);\n      },\n      () => {\n        console.log(\"Done\");\n      }\n    );\n  }\n\n\n\n  mTransection(serial: string, distributerId: string, transpoterId: string) {\n    let that = this;\n    //Register User on Blockchain ==>> if \"COMMITED\" :: register in db else Mail (ERROR Message)\t\n    this.transection = new Transection(serial, distributerId, transpoterId);\n    this.base = this.httpuser.medicineTransection(this.transection);\n    this.call = this.base.subscribe(data => {\n      alert('Request Accepted');\n    });\n    \n    // const Metadata = {\n    //   \"action\": \"sendToDistributer\",\n    //   \"payloaddata\": {\n    //     \"serialNumber\": serial,\n    //     \"distributer\": {\n    //       \"address\": distributerId,\n    //       \"comment\": \"In Transaction\"\n    //     },\n    //     \"transporterid\": transpoterId,\n    //     \"level\": this.levelvalue\n    //   },\n    //   \"private\": this.privateKey,\n    //   \"public\": this.mypublickey\n    // }\n\n    // const httpOptions = {\n    //   headers: new HttpHeaders({\n    //     'Content-Type': 'application/json'\n    //   })\n    // };\n\n    // var x = this.http.post(this.blockchainUrl, Metadata, httpOptions).subscribe(\n    //   (val) => {\n\n    //     console.log(\"POST call successful value returned in body\", val);\n    //     this.blockchain = val;\n    //     if (that.httpuser.IsJsonString(this.blockchain.response.body)) {\n    //       JSON.parse(this.blockchain.response.body).hasOwnProperty(\"data\");\n\n    //       this.status = JSON.parse(this.blockchain.response.body);\n    //       this.statusValue = this.status.data[0].status;\n    //       this.itemId = this.status.data[0].id;\n    //       if (this.statusValue == 'COMMITTED') {\n    //         this.transection = new Transection(serial, distributerId, transpoterId);\n    //         this.base = this.httpuser.medicineTransection(this.transection);\n    //         this.call = this.base.subscribe(data => {\n    //           alert('Request Accepted');\n    //         });\n    //       }\n    //       else {\n    //         alert('Request Rejected');\n    //       }\n    //     } else {\n\n    //       that.http.get(this.httpuser.batchUrl + \"/batch_statuses?\" + this.blockchain.id + \"&wait\").subscribe((val) => {\n    //         this.blockchain2 = val\n    //         if (that.httpuser.IsJsonString(this.blockchain2.body)) {\n    //           this.status = JSON.parse(this.blockchain2.body);\n    //           console.log('json value2', this.status.data[0].status);\n    //           this.statusValue = this.status.data[0].status;\n    //           this.itemId = this.status.data[0].id;\n    //           if (this.statusValue == 'COMMITTED') {\n    //             this.transection = new Transection(serial, distributerId, transpoterId);\n    //             this.base = this.httpuser.medicineTransection(this.transection);\n    //             this.call = this.base.subscribe(data => {\n    //               alert('Request Accepted');\n    //             });\n    //           }\n    //           else {\n    //             alert('Request Rejected');\n    //           }\n    //         }\n    //       })\n    //     }\n    //     // }).catch(function (err) {\n    //     //   console.log(err.message);\n    //   });\n  }\n}","module.exports = \"table {\\n    width: 100%;\\n    \\n  }\\n\\n \\n#heading{\\n    background-color: rgb(18, 50, 190); \\n    color:white;\\n}\\n\\n \\n.pd{\\n  background: navy;\\n}\\n\\n \\ntd a {\\n  display:block;\\n  width:100%;\\n  background-clip: padding-box; \\n  border-radius: 5px;\\n  background-color: blue;\\n  color: white;\\n  border: 2px solid green;\\n}\\n\\n \\na {\\n  text-decoration: none !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2VuZC9yZWNpZXZlcGFja2FnZXdob2xlc2FsZXJyZXBvcnQvcmVjaWV2ZXBhY2thZ2V3aG9sZXNhbGVycmVwb3J0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXOztFQUViOzs7QUFHRjtJQUNJLGtDQUFrQztJQUNsQyxXQUFXO0FBQ2Y7OztBQUNBO0VBQ0UsZ0JBQWdCO0FBQ2xCOzs7QUFDQTtFQUNFLGFBQWE7RUFDYixVQUFVO0VBQ1YsNEJBQTRCO0VBQzVCLGtCQUFrQjtFQUNsQixzQkFBc0I7RUFDdEIsWUFBWTtFQUNaLHVCQUF1QjtBQUN6Qjs7O0FBQ0E7RUFDRSxnQ0FBZ0M7QUFDbEMiLCJmaWxlIjoic3JjL2FwcC9zZW5kL3JlY2lldmVwYWNrYWdld2hvbGVzYWxlcnJlcG9ydC9yZWNpZXZlcGFja2FnZXdob2xlc2FsZXJyZXBvcnQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBcbiAgfVxuXG4gXG4jaGVhZGluZ3tcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTgsIDUwLCAxOTApOyBcbiAgICBjb2xvcjp3aGl0ZTtcbn1cbi5wZHtcbiAgYmFja2dyb3VuZDogbmF2eTtcbn1cbnRkIGEge1xuICBkaXNwbGF5OmJsb2NrO1xuICB3aWR0aDoxMDAlO1xuICBiYWNrZ3JvdW5kLWNsaXA6IHBhZGRpbmctYm94OyBcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBibHVlO1xuICBjb2xvcjogd2hpdGU7XG4gIGJvcmRlcjogMnB4IHNvbGlkIGdyZWVuO1xufVxuYSB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZSAhaW1wb3J0YW50O1xufSJdfQ== */\"","module.exports = \"<app-dashboard></app-dashboard>\\n<div class=\\\"container\\\">\\n\\t<br>\\n\\t<br>\\n\\n    <div  class=\\\"table-responsive\\\">\\n      <br>\\n      <table class=\\\"table table-striped table-dark table-hover text-center\\\">\\n        \\n          <thead class=\\\"theme-table\\\">\\n\\t\\t  <tr>\\n\\t\\t<th colspan=\\\"3\\\"></th>\\n\\t\\t<th><button type=\\\"button\\\"   (click)=\\\"exporttocsv()\\\"  class=\\\"btn btn-primary\\\" >Export as CSV</button></th>\\n\\t\\t</tr>\\n              <tr>            \\n                  <th> Serial Number</th>\\n                  <th>Level</th>\\n                  <th>Location</th>\\n                  <th>Date</th>             \\n              </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let list of TMlist\\\">\\n              <td><a [routerLink]=\\\"['/package/details',list.serial]\\\">{{list.serial}}</a></td>\\n              <td>{{list.level}}</td>\\n              <td>{{list.location}}</td>        \\n              <td>{{list.time | date: 'dd/MM/yyyy h:mm:ss a'}}</td>\\n              </tr>\\n           \\n          </tbody>\\n          <tfoot class=\\\"theme-table\\\"><tr>\\n\\t\\t<th colspan=\\\"3\\\"></th>\\n\\t\\t<th><button type=\\\"button\\\"   (click)=\\\"exporttocsv()\\\"  class=\\\"btn btn-primary\\\" >Export as CSV</button></th>\\n\\t\\t</tr></tfoot>\\n        </table>\\n      </div>\\n    \\n\\n</div>\\n\\n\\n   <!-- Modal -->\\n   <div class=\\\"modal fade\\\" id=\\\"exampleModalCenter\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalCenterTitle\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLongTitle\\\">Package Transportation</h5>\\n          \\n        </div>\\n        <div class=\\\"modal-body\\\">\\n      \\n      <div class=\\\"row\\\">\\n            <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n                <label>Serial</label>\\n                <input #serial   type=\\\"text\\\" [(ngModel)]=\\\"serialvalue\\\" class=\\\"form-control required\\\">\\n              </div></div>           \\n          </div>   \\n           <div class=\\\"row\\\">          \\n                <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n                  <label>DistributerId</label>\\n           <select [(ngModel)]=\\\"wId1\\\" class=\\\"form-control\\\" >\\n                <option    *ngFor=\\\"let wid of dlist\\\" [value]=\\\"wid.publicKey\\\">{{wid.firstName}}</option>\\n                            </select>   \\n                </div></div>\\n            </div>       \\n    <div class=\\\"row\\\">\\n            <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n                <label>TransporterId</label>\\n          <select [(ngModel)]=\\\"tId1\\\" class=\\\"form-control\\\">\\n                <option  *ngFor=\\\"let wid of tlist\\\" [value]=\\\"wid.userId\\\">{{wid.firstName}}</option>\\n                            </select> \\n              </div></div>           \\n          </div> \\t\\t\\n  \\n            \\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" #completeModal  data-dismiss=\\\"modal\\\">Close</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"mTransection(serial.value,wId1,tId1)\\\">Send</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { QrCodeReader } from 'src/app/qr-code-reader.service';\nimport { Subscription } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Package2 } from 'src/app/admin/medicine/package-create/addpackage2';\nimport { Transection } from 'src/app/admin/medicine/package-list/transection';\nimport { Medicine2 } from 'src/app/admin/medicine/medicine-create/addmedicine2';\nimport { Angular5Csv } from 'angular5-csv/dist/Angular5-csv';\n@Component({\n  selector: 'app-recievepackagewholesalerreport',\n  templateUrl: './recievepackagewholesalerreport.component.html',\n  styleUrls: ['./recievepackagewholesalerreport.component.css']\n})\nexport class RecievepackagewholesalerreportComponent implements OnInit {\n  \n  selectedWId: string = '';\n  selectedTId: string = '';\n  serialvalue:any;\n  levelvalue:any;\n  barcodevalue:any;\n  subscription: Subscription;\ntransporter1: any = Package2;\nlist: any = [];\nmlist:any=[];\nmedlist:any=[];\nplist:any=[];\ndlist:any=[];\ntlist:any=[];\nTMlist:any=[];\nmeds:any=[];\nwid1:any='';\ntid1:any='';\ntransection:any=Transection;\nbase;\ncall;\ndisplayTable:boolean=false;\nblockchain:any=[];\nblockchain2:any=[];\nstatus:any=[];\nstatusValue:any;\nitemId:any=[];\npackageStatus;\nmedicineStatus;\n  mypublickey:any; myrole:any;\n  privateKey:any;\n  blockchainUrl:any = this.httpuser.blockchainUrl;\n\n  constructor(private httpuser: AuthService,private qrReader: QrCodeReader,private http: HttpClient) { }\n\n  ngOnInit() {\n\t   this.medicineStatus=\"Recived to Wholesaler\";\n    this.packageStatus=\"Recived to Wholesaler\";\n\tthis.myrole = localStorage.getItem(\"role\");\n    this.mypublickey =localStorage.getItem(\"publicKey\");\n    this.privateKey =localStorage.getItem(\"privateKey\"); \n    this.transporterPackageId(this.mypublickey);\n    this.allDistributer();\n    this.allTransporter();\n  }\n \n  selectChangeHandler1 (event: any) {\n    //update the ui\n    this.selectedWId = event.target.value;\n  }\n\n  selectChangeHandler2 (event: any) {\n    //update the ui\n    this.selectedTId = event.target.value;\n  }\n\n  serialId(serialId,level){\n\t  this.serialvalue=serialId;  \n\t  this.levelvalue=level; \n  }\n  \n\n  onFileChange(event) {\n    const file = event.target.files[0];\n    this.subscription = this.qrReader.decode(file)\n      .subscribe(decodedString =>{\n    this.barcodevalue= decodedString;\n    console.log(decodedString)\n    });\n  }\n\n  transporterPackageId(id) {\n    return this.httpuser.transporterPackage(id).subscribe(data => {\n      this.TMlist = data; \nconsole.log('Package list',data);\t  \n    });\n  }\n\n  getByPackageId(id,statusid) {  \n    \n    let that = this;\n    this.mypublickey =localStorage.getItem(\"publicKey\");\n    this.privateKey =localStorage.getItem(\"privateKey\");  \n    this.httpuser.getPackageId(id).subscribe(data => {\n   this.mlist=data;\n\n   //Register User on Blockchain ==>> if \"COMMITED\" :: register in db else Mail (ERROR Message)\t\n\t\t\t  \t   this.displayTable=true; \n\t   if(statusid == 5) this.packageStatus = \"Rejected from Distributer\";\n\t\tthis.transporter(this.mlist[0].serial,this.mlist[0].medicines, this.mlist[0].barcode, this.mlist[0].location, this.mlist[0].level, this.mlist[0].packages, this.mlist[0].PackageId, this.mlist[0].role, this.mlist[0].time, this.mypublickey,this.packageStatus);\n\t\tif(statusid == 5)\n\t\t\talert(\"Package Returned \");\n\t\telse\n\t\t\talert(\"Package piked \");\n//  const Metadata = {\n//   \"action\": \"recieveFromManufecturer\",\n//   \"payloaddata\": {\n//       \"serialNumber\": this.mlist[0].serial,\n//       \"status\": statusid,\n//       \"comment\": \"Delivered\",\n// \t  \"level\": this.mlist[0].level,\n//   },\n//   \"private\":this.privateKey,\n//   \"public\": this.mypublickey\n//     }\t    \n\n// const httpOptions = {\n// headers: new HttpHeaders({\n//   'Content-Type': 'application/json'\n// })\n// }\n\n//     return this.http.post(this.blockchainUrl, Metadata,httpOptions).subscribe(\n//  (val) => {\t\n\n//   console.log(\"POST call successful value returned in body\", val);\n//   this.blockchain = val;\n//   if (that.httpuser.IsJsonString(this.blockchain.response.body)) {\n//     JSON.parse(this.blockchain.response.body).hasOwnProperty(\"data\");\n\n//     this.status = JSON.parse(this.blockchain.response.body);            \n//     this.statusValue = this.status.data[0].status;\n//     this.itemId = this.status.data[0].id;\n//     if (this.statusValue == 'COMMITTED') {   \n// \t   this.displayTable=true; \n// \t   if(statusid == 5) this.packageStatus = \"Rejected from Distributer\";\n// \t\tthis.transporter(this.mlist[0].serial,this.mlist[0].medicines, this.mlist[0].barcode, this.mlist[0].location, this.mlist[0].level, this.mlist[0].packages, this.mlist[0].PackageId, this.mlist[0].role, this.mlist[0].time, this.mypublickey,this.packageStatus);\n// \t\tif(statusid == 5)\n// \t\t\talert(\"Package Returned \");\n// \t\telse\n// \t\t\talert(\"Package piked \");\n//   }\n//   else{\n// \t  alert(\"Process not completed\");\n//   }\n//   }\n//   else {\n\n//     that.http.get(this.httpuser.batchUrl +\"/batch_statuses?\" + this.blockchain.id + \"&wait\").subscribe((val) => {\n//       this.blockchain2 =val\n//       if (that.httpuser.IsJsonString(this.blockchain2.body)) {\n//         this.status = JSON.parse(this.blockchain2.body);\n//         console.log('json value2', this.status.data[0].status);\n//         this.statusValue = this.status.data[0].status;\n//         this.itemId = this.status.data[0].id;\n//         if (this.statusValue == 'COMMITTED') {\n// \t\t\t\tif(statusid == 5) this.packageStatus = \"Rejected to Distributer\";\n//                   this.transporter(this.mlist[0].serial,this.mlist[0].medicines, this.mlist[0].barcode, this.mlist[0].location, this.mlist[0].level, this.mlist[0].packages, this.mlist[0].PackageId, this.mlist[0].role, this.mlist[0].time, this.mypublickey,this.packageStatus);\n//                   if(statusid == 5)\n// \t\t\t\t\talert(\"Package Returned \");\n// \t\t\t\telse\n// \t\t\t\t\talert(\"Package picked\");\n//         }\n//         else {\n//           alert('Request Rejected');\n//         }\n//       }\n//     })\n//   }\n// // }).catch(function (err) {\n// //   console.log(err.message);\n// });\n});\n}\n\nallDistributer() {\n  return this.httpuser.getallDistributerUser().subscribe(data => {\n    this.dlist = data; \nconsole.log(this.dlist);\t  \n  });\n}\n\nallTransporter() {\n  return this.httpuser.getallTransporterUser().subscribe(data => {\n    this.tlist = data; \nconsole.log(this.tlist);\t  \n  });\n}\ntransporter(a, b, c, d, e, f, g, h, i, j, k) {\n    this.transporter1 = new Package2(a, b, c, d, e, f, g, h, i, j, k);\n    this.base = this.httpuser.packagetransporter(this.transporter1);\n    this.call = this.base.subscribe(\n      data => {\n        alert(\"done\");\n\n      },\n      err => {\n        console.log(err);\n      },\n      () => {\n        console.log(\"Done\");\n      }\n    );\n  }\n\n   openpackage(id,level) {  \n    this.levelvalue=level;\n    let that = this;\n    this.mypublickey =localStorage.getItem(\"publicKey\");\n    this.privateKey =localStorage.getItem(\"privateKey\");  \n    this.httpuser.getPackageId(id).subscribe(data => {\n   this.mlist=data;\n\n   //Register User on Blockchain ==>> if \"COMMITED\" :: register in db else Mail (ERROR Message)\t\n   this.displayTable=true; \n   \t  //this.openpackagecall(id,this.mypublickey);\n   \t\t/*Transfer child packages to user account*/\n   \t\t\tif(Array.isArray(this.mlist[0].packages))\n   \t\t\t\tvar meds = this.mlist[0].packages;\n   \t\t\telse\n   \t\t\t\tvar meds = this.mlist[0].packages.split(',');\n         \n   \t\t\tif(meds.length>0)\n   \t\t\t{\n   \t\t\t\tfor(var j=0;j < meds.length; j++)\n   \t\t\t\t{\n   \t\t\t\t\tthis.httpuser.getPackageStatus3(meds[j]).subscribe((pdata) =>{\n               \n   \t\t\t\t\t\t  this.httpuser.getPackageId(id).subscribe(packagedata => {\n   \t\t\t\t\t\t\t\tthis.plist=packagedata;\n                   \n   \t\t\t\t\t\t\t\tthis.transporter(this.plist[0].serial,this.plist[0].medicines, this.plist[0].barcode, this.plist[0].location, this.plist[0].level, this.plist[0].packages, this.plist[0].PackageId, this.plist[0].role, this.plist[0].time, this.mypublickey,this.packageStatus);\n                   \n                   \n   \t\t\t\t\t\t});\t\t\n   \n   \t\t\t\t\t\t//this.getByPackageId(pdata.PackageId,'4');\n               \n   \t\t\t\t\t});\n   \t\t\t\t}\n   \t\t\t}\n         \n   \t\t\t/*Transfer child medicines to user account*/\n         \n   \t\t\tif(Array.isArray(this.mlist[0].medicines))\n   \t\t\t\tvar meds = this.mlist[0].medicines;\n   \t\t\telse\n   \t\t\t\tvar meds = this.mlist[0].medicines.split(',');\n         \n   \t\t\tif(meds.length>0)\n   \t\t\t{\n   \t\t\t\tfor(var j=0;j < meds.length; j++)\n   \t\t\t\t{\n   \t\t\t\t\tthis.httpuser.getMedicineStatus3(meds[j]).subscribe((mdata) =>{\n               \n   \t\t\t\t\t\t\tthis.httpuser.getMedicineId(id).subscribe(medicinedata => {\n   \t\t\t\t\t\t\t\tthis.medlist=medicinedata;\n                   \n   \t\t\t\t\t\t\t\t this.medicineTransporter(this.medlist[0].serial,this.medlist[0].medicine,this.medlist[0].barcode,this.medlist[0].location,this.medlist[0].weight,this.medlist[0].Edate,this.medlist[0].Mdate,this.medlist[0].MedicineId,this.medlist[0].role,this.medlist[0].time,this.mypublickey,this.medicineStatus);\n                   \n                   \n   \t\t\t\t\t\t});\n             \n   \t\t\t\t\t\t\t//this.medicinedetails.push(mdata);\n               \n   \t\t\t\t\t});\n   \t\t\t\t}\n   \t\t\t}\n   \t\t\tthis.httpuser.deletePackageTransport(id,this.mypublickey).subscribe(res => {\n   \n   \t\t\t\talert(\"Package Opened \");\n   \n   \t\t\t });\n//  const Metadata = {\n//   \"action\": \"openPackage\",\n//   \"payloaddata\": {\n//       \"serialNumber\": this.mlist[0].serial,\n//       \"userRole\": this.myrole,\n//       \"admin\": false,\n// \t  \"level\":this.levelvalue\n//   },\n//   \"private\":this.privateKey,\n//   \"public\": this.mypublickey\n//     }\t    \n\n// const httpOptions = {\n// headers: new HttpHeaders({\n//   'Content-Type': 'application/json'\n// })\n// }\n\n//     return this.http.post(this.blockchainUrl, Metadata,httpOptions).subscribe(\n//  (val) => {\t\n\n//   console.log(\"POST call successful value returned in body\", val);\n//   this.blockchain = val;\n//   if (that.httpuser.IsJsonString(this.blockchain.response.body)) {\n//     JSON.parse(this.blockchain.response.body).hasOwnProperty(\"data\");\n\n//     this.status = JSON.parse(this.blockchain.response.body);            \n//     this.statusValue = this.status.data[0].status;\n//     this.itemId = this.status.data[0].id;\n//     if (this.statusValue == 'COMMITTED') {   \n// \t   this.displayTable=true; \n// \t  //this.openpackagecall(id,this.mypublickey);\n// \t\t/*Transfer child packages to user account*/\n// \t\t\tif(Array.isArray(this.mlist[0].packages))\n// \t\t\t\tvar meds = this.mlist[0].packages;\n// \t\t\telse\n// \t\t\t\tvar meds = this.mlist[0].packages.split(',');\n\t\t\t\n// \t\t\tif(meds.length>0)\n// \t\t\t{\n// \t\t\t\tfor(var j=0;j < meds.length; j++)\n// \t\t\t\t{\n// \t\t\t\t\tthis.httpuser.getPackageStatus3(meds[j]).subscribe((pdata) =>{\n\t\t\t\t\t\t\n// \t\t\t\t\t\t  this.httpuser.getPackageId(id).subscribe(packagedata => {\n// \t\t\t\t\t\t\t\tthis.plist=packagedata;\n\t\t\t\t\t\t\t\t\n// \t\t\t\t\t\t\t\tthis.transporter(this.plist[0].serial,this.plist[0].medicines, this.plist[0].barcode, this.plist[0].location, this.plist[0].level, this.plist[0].packages, this.plist[0].PackageId, this.plist[0].role, this.plist[0].time, this.mypublickey,this.packageStatus);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n// \t\t\t\t\t\t});\t\t\n\n// \t\t\t\t\t\t//this.getByPackageId(pdata.PackageId,'4');\n\t\t\t\t\t\t\n// \t\t\t\t\t});\n// \t\t\t\t}\n// \t\t\t}\n\t\t\t\n// \t\t\t/*Transfer child medicines to user account*/\n\t\t\t\n// \t\t\tif(Array.isArray(this.mlist[0].medicines))\n// \t\t\t\tvar meds = this.mlist[0].medicines;\n// \t\t\telse\n// \t\t\t\tvar meds = this.mlist[0].medicines.split(',');\n\t\t\t\n// \t\t\tif(meds.length>0)\n// \t\t\t{\n// \t\t\t\tfor(var j=0;j < meds.length; j++)\n// \t\t\t\t{\n// \t\t\t\t\tthis.httpuser.getMedicineStatus3(meds[j]).subscribe((mdata) =>{\n\t\t\t\t\t\t\n// \t\t\t\t\t\t\tthis.httpuser.getMedicineId(id).subscribe(medicinedata => {\n// \t\t\t\t\t\t\t\tthis.medlist=medicinedata;\n\t\t\t\t\t\t\t\t\n// \t\t\t\t\t\t\t\t this.medicineTransporter(this.medlist[0].serial,this.medlist[0].medicine,this.medlist[0].barcode,this.medlist[0].location,this.medlist[0].weight,this.medlist[0].Edate,this.medlist[0].Mdate,this.medlist[0].MedicineId,this.medlist[0].role,this.medlist[0].time,this.mypublickey,this.medicineStatus);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n// \t\t\t\t\t\t});\n\t\t\t\t\t\n// \t\t\t\t\t\t\t//this.medicinedetails.push(mdata);\n\t\t\t\t\t\t\n// \t\t\t\t\t});\n// \t\t\t\t}\n// \t\t\t}\n// \t\t\tthis.httpuser.deletePackageTransport(id,this.mypublickey).subscribe(res => {\n\n// \t\t\t\talert(\"Package Opened \");\n\n// \t\t\t });\n// \t\t\t//alert(\"Package Opened \");\n//   }\n//   else{\n// \t  alert(\"Process not completed\");\n//   }\n//   }\n//   else {\n\n//     that.http.get(this.httpuser.batchUrl +\"/batch_statuses?\" + this.blockchain.id + \"&wait\").subscribe((val) => {\n//       this.blockchain2 =val\n//       if (that.httpuser.IsJsonString(this.blockchain2.body)) {\n//         this.status = JSON.parse(this.blockchain2.body);\n//         console.log('json value2', this.status.data[0].status);\n//         this.statusValue = this.status.data[0].status;\n//         this.itemId = this.status.data[0].id;\n//         if (this.statusValue == 'COMMITTED') {\n// \t\t\t\t/*Transfer child packages to user account*/\n// \t\t\tif(Array.isArray(this.mlist[0].packages))\n// \t\t\t\tvar meds = this.mlist[0].packages;\n// \t\t\telse\n// \t\t\t\tvar meds = this.mlist[0].packages.split(',');\n\t\t\t\n// \t\t\tif(meds.length>0)\n// \t\t\t{\n// \t\t\t\tfor(var j=0;j < meds.length; j++)\n// \t\t\t\t{\n// \t\t\t\t\tthis.httpuser.getPackageStatus3(meds[j]).subscribe((pdata) =>{\n\t\t\t\t\t\t\n// \t\t\t\t\t\t  this.httpuser.getPackageId(id).subscribe(packagedata => {\n// \t\t\t\t\t\t\t\tthis.plist=packagedata;\n\t\t\t\t\t\t\t\t\n// \t\t\t\t\t\t\t\tthis.transporter(this.plist[0].serial,this.plist[0].medicines, this.plist[0].barcode, this.plist[0].location, this.plist[0].level, this.plist[0].packages, this.plist[0].PackageId, this.plist[0].role, this.plist[0].time, this.mypublickey,this.packageStatus);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n// \t\t\t\t\t\t});\t\t\n\n// \t\t\t\t\t\t//this.getByPackageId(pdata.PackageId,'4');\n\t\t\t\t\t\t\n// \t\t\t\t\t});\n// \t\t\t\t}\n// \t\t\t}\n\t\t\t\n// \t\t\t/*Transfer child medicines to user account*/\n\t\t\t\n// \t\t\tif(Array.isArray(this.mlist[0].medicines))\n// \t\t\t\tvar meds = this.mlist[0].medicines;\n// \t\t\telse\n// \t\t\t\tvar meds = this.mlist[0].medicines.split(',');\n\t\t\t\n// \t\t\tif(meds.length>0)\n// \t\t\t{\n// \t\t\t\tfor(var j=0;j < meds.length; j++)\n// \t\t\t\t{\n// \t\t\t\t\tthis.httpuser.getMedicineStatus3(meds[j]).subscribe((mdata) =>{\n\t\t\t\t\t\t\n// \t\t\t\t\t\t\tthis.httpuser.getMedicineId(id).subscribe(medicinedata => {\n// \t\t\t\t\t\t\t\tthis.medlist=medicinedata;\n\t\t\t\t\t\t\t\t\n// \t\t\t\t\t\t\t\t this.medicineTransporter(this.medlist[0].serial,this.medlist[0].medicine,this.medlist[0].barcode,this.medlist[0].location,this.medlist[0].weight,this.medlist[0].Edate,this.medlist[0].Mdate,this.medlist[0].MedicineId,this.medlist[0].role,this.medlist[0].time,this.mypublickey,this.medicineStatus);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n// \t\t\t\t\t\t});\n\t\t\t\t\t\n// \t\t\t\t\t\t\t//this.medicinedetails.push(mdata);\n\t\t\t\t\t\t\n// \t\t\t\t\t});\n// \t\t\t\t}\n// \t\t\t}\n\t\t\n// \t\t\t\tthis.httpuser.deletePackageTransport(id,this.mypublickey).subscribe(res => {\n\n// \t\t\t\talert(\"Package Opened \");\n\n// \t\t\t });\n//         }\n//         else {\n//           alert('Request Rejected');\n//         }\n//       }\n//     })\n//   }\n// // }).catch(function (err) {\n// //   console.log(err.message);\n// });\n});\n}\n\nmedicineTransporter(a,b,c,d,e,f,g,h,i,j,k,l){  \t  \n  this.transporter1 = new Medicine2(a,b,c,d,e,f,g,h,i,j,k,l);\n   this.base = this.httpuser.transporter(this.transporter1);\n  this.call = this.base.subscribe(\n    data => {       \n      alert(\"done\");\n      \n    },\n    err => {\n      console.log(err);\n    },\n    () => {\n      console.log(\"Done\");\n    }\n  );\n}\n\n exporttocsv()\n  {\n\t  var data = [];\n\t  var  datarow = {};\n\t\n\tif(Array.isArray(this.TMlist))\n\t\t\tthis.meds = this.TMlist;\n\t\telse\n\t\t\tthis.meds = this.TMlist.split(',');\n\t\t\n\t  for(var i=0;i<=this.meds.length;i++)\n\t  {\n\t\t  console.log(\"meds==\" + this.meds[i]);\n\t\t  if(typeof this.meds[i] != \"undefined\")\n\t\t  {\n\t\t\tdatarow = {\n\t\t\tserial:this.meds[i].serial,\n\t\t\tlocation: this.meds[i].location,\n\t\t\tlevel: this.meds[i].level,\n\t\t\ttime: this.meds[i].time,\n\t\t\t};\n\t\t\tdata.push(datarow);\n\t\t  }\n\t  }\n\n\t\tvar options = {\n\t\tfieldSeparator: ',',\n\t\tquoteStrings: '\"',\n\t\tdecimalseparator: '.',\n\t\tshowLabels: true,\n\t\tshowTitle: true,\n\t\theaders: [\"Serial Number\",\"Location\",\"Level\", \"Date/Time\"]\n\t\t};\n\n\t\tnew Angular5Csv(data, 'Report1',options);\n\n\t\treturn true;\n  }\n\n\n\n\nmTransection(serial:string,distributerId:string,transpoterId:string) {  \n  let that = this; \n  //Register User on Blockchain ==>> if \"COMMITED\" :: register in db else Mail (ERROR Message)\t\n\t\t\t      this.transection = new Transection(serial,distributerId,transpoterId);\n    this.base = this.httpuser.medicineTransection(this.transection);\n    this.call = this.base.subscribe(data => {        \n        alert('Request Accepted');       \n      });\n//  const Metadata = {\n// \t\t\t  \"action\": \"sendToDistributer\",\n//     \"payloaddata\": {\n//         \"serialNumber\": serial,\n//         \"distributer\": {\n//             \"address\": distributerId,\n//             \"comment\": \"In Transaction\"\n//         },\n//         \"transporterid\": transpoterId,\n// \t\t\"level\":this.levelvalue\n//     },\n// \t\t\t\t\"private\":this.privateKey,\n// \t\t\t\t\"public\": this.mypublickey\n// \t\t\t\t\t}\t    \n\t\n// \tconst httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json'\n//       })\n//     };\n\t\n//             var x = this.http.post(this.blockchainUrl, Metadata,httpOptions).subscribe(\n//        (val) => {\t\n\t  \n// console.log(\"POST call successful value returned in body\", val);\n// this.blockchain = val;\n// if (that.httpuser.IsJsonString(this.blockchain.response.body)) {\n//   JSON.parse(this.blockchain.response.body).hasOwnProperty(\"data\");\n\n//   this.status = JSON.parse(this.blockchain.response.body);            \n//   this.statusValue = this.status.data[0].status;\n//   this.itemId = this.status.data[0].id;\n//   if (this.statusValue == 'COMMITTED') {\n//     this.transection = new Transection(serial,distributerId,transpoterId);\n//     this.base = this.httpuser.medicineTransection(this.transection);\n//     this.call = this.base.subscribe(data => {        \n//         alert('Request Accepted');       \n//       });\n//     }\n//     else {\n//       alert('Request Rejected');\n//     }\n//   } else {\n\n//     that.http.get(this.httpuser.batchUrl +\"/batch_statuses?\" + this.blockchain.id + \"&wait\").subscribe((val) => {\n//       this.blockchain2 =val\n//       if (that.httpuser.IsJsonString(this.blockchain2.body)) {\n//         this.status = JSON.parse(this.blockchain2.body);\n//         console.log('json value2', this.status.data[0].status);\n//         this.statusValue = this.status.data[0].status;\n//         this.itemId = this.status.data[0].id;\n//         if (this.statusValue == 'COMMITTED') {\n//           this.transection = new Transection(serial,distributerId,transpoterId);\n//           this.base = this.httpuser.medicineTransection(this.transection);\n//           this.call = this.base.subscribe(data => {              \n//              alert('Request Accepted');            \n//           });\n//         }\n//         else {\n//           alert('Request Rejected');\n//         }\n//       }\n//     })\n//   }\n// }).catch(function (err) {\n//   console.log(err.message);\n//});\n}\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlbmQvc2VuZGRpc3RyaWJ1dG9yL3NlbmRkaXN0cmlidXRvci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-dashboard></app-dashboard>\\n<div class=\\\"container\\\">\\n\\t<br>\\n\\t<br>\\n\\n\\t<form>\\n\\t\\n        <div class=\\\"row\\\"> \\n          <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n            <label>Packing Barcode</label>\\n\\t\\t\\t<input type=\\\"file\\\" style=\\\"margin-left:20px;\\\" accept=\\\"image/*\\\" (change)=\\\"onFileChange($event)\\\">\\n            <input #br type=\\\"text\\\" value=\\\"{{barcodevalue}}\\\" class=\\\"form-control required\\\" >\\n          </div>\\n        </div>\\n        \\n            \\n          </div>\\n            <div class=\\\"row text-right\\\">\\n             \\t\\t<div class=\\\"col\\\">\\n             \\t\\t\\t<div class=\\\"form-group\\\">\\n                  \\t\\t\\t<button type=\\\"reset\\\" (click)=\\\"getByMedicineId(br.value,4)\\\" class=\\\"btn btn-primary\\\">Accept</button>\\n\\t\\t\\t\\t\\t\\t\\t&nbsp; &nbsp; &nbsp;\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"reset\\\" (click)=\\\"getByMedicineId(br.value,5)\\\" class=\\\"btn btn-primary\\\">Reject</button>\\n\\t\\t\\t\\t\\t\\t\\t&nbsp; &nbsp; &nbsp;\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"reset\\\" (click)=\\\"getdetails(br.value,5)\\\" class=\\\"btn btn-primary\\\">Get Details</button>\\n                \\t\\t</div>\\n                </div>\\n             </div>\\n\\t</form>\\n\\n\\n  <div *ngIf=\\\"displayTable\\\" class=\\\"table-responsive\\\">\\n    <br>\\n    <table class=\\\"table table-striped table-dark table-hover text-center\\\">\\n      \\n        <thead class=\\\"theme-table\\\">\\n            <tr>            \\n              <th> Serial Number</th>\\n              <th>Medicine</th>\\n              <th>Manufacture Date</th>\\n              <th>Location</th>\\n              <th>Weight(Kg)</th>                 \\n            </tr>\\n        </thead>\\n        <tbody>\\n          <tr>\\n            <td><a [routerLink]=\\\"['/medicine/details',mlist[0].serial]\\\">{{mlist[0].serial}}</a></td>\\n            <td>{{mlist[0].medicine}}</td>\\n            <td>{{mlist[0].Mdate}}</td>\\n            <td>{{mlist[0].location}}</td>\\n            <td>{{mlist[0].weight}}</td>           \\n          </tr>\\n         \\n        </tbody>\\n        <tfoot class=\\\"theme-table\\\"><tr><th></th><th></th><th></th><th></th><th></th></tr></tfoot>\\n      </table>\\n    </div>\\n\\n    <div  class=\\\"table-responsive\\\">\\n      <br>\\n      <table class=\\\"table table-striped table-dark table-hover text-center\\\">\\n        \\n          <thead class=\\\"theme-table\\\">\\n              <tr>            \\n                  <th> Serial Number</th>\\n                  <th>Medicine</th>\\n                  <th>Manufacture Date</th>\\n                  <th>Location</th>\\n                  <th>Weight</th>   \\n                  <th></th>             \\n              </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let list of TMlist\\\">\\n              <td><a [routerLink]=\\\"['/medicine/details',list.serial]\\\">{{list.serial}}</a></td>\\n              <td>{{list.medicine}}</td>\\n              <td>{{list.Mdate}}</td>\\n              <td>{{list.location}}</td>\\n              <td>{{list.weight}}</td>           \\n              <td><button type=\\\"button\\\"   (click)=\\\"serialId(list.serial)\\\"  class=\\\"btn btn-success\\\" data-toggle=\\\"modal\\\" data-target=\\\"#exampleModalCenter\\\">Send to Pharma</button></td>\\n              </tr>\\n           \\n          </tbody>\\n          <tfoot class=\\\"theme-table\\\"><tr><th></th><th></th><th></th><th></th><th></th><th></th></tr></tfoot>\\n        </table>\\n      </div>\\n\\n</div>\\n\\n\\n   <!-- Modal -->\\n   <div class=\\\"modal fade\\\" id=\\\"exampleModalCenter\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalCenterTitle\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLongTitle\\\">Medicine Transportation</h5>\\n          \\n        </div>\\n        <div class=\\\"modal-body\\\">\\n      \\n      <div class=\\\"row\\\">\\n            <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n                <label>Serial</label>\\n                <input #serial   type=\\\"text\\\" [(ngModel)]=\\\"serialvalue\\\" class=\\\"form-control required\\\">\\n              </div></div>           \\n          </div>   \\n           <div class=\\\"row\\\">          \\n                <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n                  <label>DistributerId</label>\\n           <select [(ngModel)]=\\\"wId1\\\" class=\\\"form-control\\\" >\\n                <option    *ngFor=\\\"let wid of dlist\\\" [value]=\\\"wid.publicKey\\\">{{wid.firstName}}</option>\\n                            </select>   \\n                </div></div>\\n            </div>       \\n    <div class=\\\"row\\\">\\n            <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n                <label>TransporterId</label>\\n          <select [(ngModel)]=\\\"tId1\\\" class=\\\"form-control\\\">\\n                <option  *ngFor=\\\"let wid of tlist\\\" [value]=\\\"wid.userId\\\">{{wid.firstName}}</option>\\n                            </select> \\n              </div></div>           \\n          </div> \\t\\t\\n  \\n            \\n        </div>\\n        <div class=\\\"modal-footer\\\"> \\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" #completeModal  data-dismiss=\\\"modal\\\">Close</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"mTransection(serial.value,wId1,tId1)\\\">Send</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\"","import { Component, OnInit,ElementRef,ViewChild } from '@angular/core';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { QrCodeReader } from 'src/app/qr-code-reader.service';\nimport { Subscription } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Medicine2 } from 'src/app/admin/medicine/medicine-create/addmedicine2';\nimport { Transection } from 'src/app/admin/medicine/medicine-list/transection';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-senddistributor',\n  templateUrl: './senddistributor.component.html',\n  styleUrls: ['./senddistributor.component.css']\n})\nexport class SenddistributorComponent implements OnInit {\n\n  selectedWId: string = '';\n  selectedTId: string = '';\n  serialvalue: any = \" \";\n  barcodevalue: any;\n  subscription: Subscription;\n  transporter1: any = Medicine2;\n  list: any = [];\n  mlist: any = [];\n  dlist: any = [];\n  tlist: any = [];\n  TMlist: any = [];\n  transection: any = Transection;\n  base;\n  call;\n  displayTable: boolean = false;\n  blockchain: any = [];\n  medicineStatus;\n  blockchain2: any = [];\n  status: any = [];\n  statusValue: any;\n  itemId: any = [];\n  mypublickey: any;\n  privateKey: any;\n  @ViewChild('completeModal')completeModal: ElementRef;\n  blockchainUrl: any = this.httpuser.blockchainUrl;\n\n  constructor(private route:Router, private httpuser: AuthService, private qrReader: QrCodeReader, private http: HttpClient) { }\n\n  ngOnInit() {\n    this.medicineStatus=\"Recived to Distributer\";\n    this.mypublickey = localStorage.getItem(\"publicKey\");\n    this.privateKey = localStorage.getItem(\"privateKey\");\n    this.transporterMedicineId(this.mypublickey);\n    this.allPharma();\n    this.allTransporter();\n  }\n\n  selectChangeHandler1(event: any) {\n    //update the ui\n    this.selectedWId = event.target.value;\n  }\n\n  selectChangeHandler2(event: any) {\n    //update the ui\n    this.selectedTId = event.target.value;\n  }\n\n  serialId(serialId) {\n    this.serialvalue = serialId;\n  }\n\n\n  onFileChange(event) {\n    const file = event.target.files[0];\n    this.subscription = this.qrReader.decode(file)\n      .subscribe(decodedString => {\n        this.barcodevalue = decodedString;\n        console.log(decodedString)\n      });\n  }\n\n  transporterMedicineId(id) {\n    return this.httpuser.transporterMedicine(id).subscribe(data => {\n      this.TMlist = data;\n      console.log(this.TMlist);\n    });\n  }\n\n  \n  getdetails(id,statusid) {\n    let that = this;\n    this.mypublickey = localStorage.getItem(\"publicKey\");\n    this.privateKey = localStorage.getItem(\"privateKey\");\n    this.httpuser.getMedicineId(id).subscribe(data => {\n      this.mlist = data;\n\t  \n\t  this.route.navigate(['/medicinedetailsdashboard/'+this.mlist[0].serial]);\n\t});\n  }\n  getByMedicineId(id,statusid) {\n    let that = this;\n    this.mypublickey = localStorage.getItem(\"publicKey\");\n    this.privateKey = localStorage.getItem(\"privateKey\");\n    this.httpuser.getMedicineId(id).subscribe(data => {\n      this.mlist = data;\n\n      //Register User on Blockchain ==>> if \"COMMITED\" :: register in db else Mail (ERROR Message)\t\n              this.displayTable = true;\n\t\t\t  if(statusid == 5) this.medicineStatus = \"Rejected by Distributer\";\n              this.transporter(this.mlist[0].serial, this.mlist[0].medicine, this.mlist[0].barcode, this.mlist[0].location, this.mlist[0].weight, this.mlist[0].Edate, this.mlist[0].Mdate,\n                this.mlist[0].MedicineId, this.mlist[0].role, this.mlist[0].time, this.mypublickey,this.medicineStatus);\n             if(statusid == 5)\n\t\t\t\t\talert(\"Package Returned \");\n\t\t\t\telse\n\t\t\t\t\talert(\"Package piked \");\n      // const Metadata = {\n      //   \"action\": \"recieveFromWholesaler\",\n      //   \"payloaddata\": {\n      //     \"serialNumber\": this.mlist[0].serial,\n      //     \"status\": statusid,\n      //     \"comment\": \"Delivered\"\n      //   },\n      //   \"private\": this.privateKey,\n      //   \"public\": this.mypublickey\n      // }\n\n      // const httpOptions = {\n      //   headers: new HttpHeaders({\n      //     'Content-Type': 'application/json'\n      //   })\n      // }\n\n      // return this.http.post(this.blockchainUrl, Metadata, httpOptions).subscribe(\n      //   (val) => {\n\n      //     console.log(\"POST call successful value returned in body\", val);\n      //     this.blockchain = val;\n      //     if (that.httpuser.IsJsonString(this.blockchain.response.body)) {\n      //       JSON.parse(this.blockchain.response.body).hasOwnProperty(\"data\");\n\n      //       this.status = JSON.parse(this.blockchain.response.body);\n      //       this.statusValue = this.status.data[0].status;\n      //       this.itemId = this.status.data[0].id;\n      //       if (this.statusValue == 'COMMITTED') {\n      //         this.displayTable = true;\n\t\t\t//   if(statusid == 5) this.medicineStatus = \"Rejected by Distributer\";\n      //         this.transporter(this.mlist[0].serial, this.mlist[0].medicine, this.mlist[0].barcode, this.mlist[0].location, this.mlist[0].weight, this.mlist[0].Edate, this.mlist[0].Mdate,\n      //           this.mlist[0].MedicineId, this.mlist[0].role, this.mlist[0].time, this.mypublickey,this.medicineStatus);\n      //        if(statusid == 5)\n\t\t\t// \t\talert(\"Package Returned \");\n\t\t\t// \telse\n\t\t\t// \t\talert(\"Package piked \");\n      //       }\n      //       else {\n      //         alert(\"Process not completed\");\n      //       }\n      //     }\n      //     else {\n\n      //       that.http.get(this.httpuser.batchUrl +\"/batch_statuses?\" + this.blockchain.id + \"&wait\").subscribe((val) => {\n      //         this.blockchain2 = val\n      //         if (that.httpuser.IsJsonString(this.blockchain2.body)) {\n      //           this.status = JSON.parse(this.blockchain2.body);\n      //           console.log('json value2', this.status.data[0].status);\n      //           this.statusValue = this.status.data[0].status;\n      //           this.itemId = this.status.data[0].id;\n      //           if (this.statusValue == 'COMMITTED') {\n\t\t\t// \t\tif(statusid == 5) this.medicineStatus = \"Rejected by Distributer\";\n      //             this.transporter(this.mlist[0].serial, this.mlist[0].medicine, this.mlist[0].barcode, this.mlist[0].location, this.mlist[0].weight, this.mlist[0].Edate, this.mlist[0].Mdate,\n      //               this.mlist[0].MedicineId, this.mlist[0].role, this.mlist[0].time, this.mypublickey,this.medicineStatus);\n      //            if(statusid == 5)\n\t\t\t// \t\talert(\"Package Returned \");\n\t\t\t// \telse\n\t\t\t// \t\talert(\"Package piked \");\n      //           }\n      //           else {\n      //             alert('Request Rejected');\n      //           }\n      //         }\n      //       })\n      //     }\n      //     // }).catch(function (err) {\n      //     //   console.log(err.message);\n      //   });\n    });\n  }\n\n  allPharma() {\n    return this.httpuser.getallPharmaUser().subscribe(data => {\n      this.dlist = data;\n      console.log(this.dlist);\n    });\n  }\n\n  allTransporter() {\n    return this.httpuser.getallTransporterUser().subscribe(data => {\n      this.tlist = data;\n      console.log(this.tlist);\n    });\n  }\n\n\n  transporter(a, b, c, d, e, f, g, h, i, j, k,l) {\n    this.transporter1 = new Medicine2(a, b, c, d, e, f, g, h, i, j, k,l);\n    this.base = this.httpuser.transporter(this.transporter1);\n    this.call = this.base.subscribe(\n      data => {\n        alert(\"done\");\n\n      },\n      err => {\n        console.log(err);\n      },\n      () => {\n        console.log(\"Done\");\n      }\n    );\n  }\n\n\n  mTransection(serial: string, wholesalerId: string, transpoterId: string) {\n    let that = this;\n    console.log(\"ID\",wholesalerId);\n    //Register User on Blockchain ==>> if \"COMMITED\" :: register in db else Mail (ERROR Message)\t\n    this.transection = new Transection(serial, wholesalerId, transpoterId);\n            this.base = this.httpuser.medicineTransection(this.transection);\n            this.call = this.base.subscribe(data => {\n\n              alert('Request Accepted');\n              let el: HTMLElement = this.completeModal.nativeElement;\n             el.click(); \n         });\n    // const Metadata = {\n    //   \"action\": \"sendToPharma\",\n    //   \"payloaddata\": {\n    //     \"serialNumber\": serial,\n    //     \"pharma\": {\n    //       \"address\": wholesalerId,\n    //       \"comment\": \"In Transaction\"\n    //     },\n    //     \"transporterid\": transpoterId\n    //   },\n    //   \"private\": this.privateKey,\n    //   \"public\": this.mypublickey\n    // }\n\n    // const httpOptions = {\n    //   headers: new HttpHeaders({\n    //     'Content-Type': 'application/json'\n    //   })\n    // };\n\n    // var x = this.http.post(this.blockchainUrl, Metadata, httpOptions).subscribe(\n    //   (val) => {\n    //     console.log(\"POST call successful value returned in body\", val);\n    //     this.blockchain = val;\n    //     if (that.httpuser.IsJsonString(this.blockchain.response.body)) {\n    //       JSON.parse(this.blockchain.response.body).hasOwnProperty(\"data\");\n\n    //       this.status = JSON.parse(this.blockchain.response.body);\n    //       this.statusValue = this.status.data[0].status;\n    //       this.itemId = this.status.data[0].id;\n    //       if (this.statusValue == 'COMMITTED') {\n    //         this.transection = new Transection(serial, wholesalerId, transpoterId);\n    //         this.base = this.httpuser.medicineTransection(this.transection);\n    //         this.call = this.base.subscribe(data => {\n\n    //           alert('Request Accepted');\n    //           let el: HTMLElement = this.completeModal.nativeElement;\n    //          el.click(); \n              \n\n    //         });\n    //       }\n    //       else {\n    //         alert('Request Rejected');\n    //         let el: HTMLElement = this.completeModal.nativeElement;\n    //          el.click(); \n              \n    //       }\n    //     } else {\n\n    //       that.http.get(this.httpuser.batchUrl +\"/batch_statuses?\" + this.blockchain.id + \"&wait\").subscribe((val) => {\n    //         this.blockchain2 = val\n    //         if (that.httpuser.IsJsonString(this.blockchain2.body)) {\n    //           this.status = JSON.parse(this.blockchain2.body);\n    //           console.log('json value2', this.status.data[0].status);\n    //           this.statusValue = this.status.data[0].status;\n    //           this.itemId = this.status.data[0].id;\n    //           if (this.statusValue == 'COMMITTED') {\n    //             this.transection = new Transection(serial, wholesalerId, transpoterId);\n    //             this.base = this.httpuser.medicineTransection(this.transection);\n    //             this.call = this.base.subscribe(data => {\n    //               alert('Request Accepted');\n    //             });\n    //           }\n    //           else {\n    //             alert('Request Rejected');\n    //           }\n    //         }\n    //       })\n    //     }\n    //     // }).catch(function (err) {\n    //     //   console.log(err.message);\n    //   });\n  }\n}","module.exports = \"table {\\n    width: 100%;\\n    \\n  }\\n\\n \\n#heading{\\n    background-color: rgb(18, 50, 190); \\n    color:white;\\n}\\n\\n \\n.pd{\\n  background: navy;\\n}\\n\\n \\ntd a {\\n  display:block;\\n  width:100%;\\n  background-clip: padding-box; \\n  border-radius: 5px;\\n  background-color: blue;\\n  color: white;\\n  border: 2px solid green;\\n}\\n\\n \\na {\\n  text-decoration: none !important;\\n}\\n\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2VuZC9zZW5kZGlzdHJpYnV0b3JkYXNoYm9hcmQvc2VuZGRpc3RyaWJ1dG9yZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXOztFQUViOzs7QUFHRjtJQUNJLGtDQUFrQztJQUNsQyxXQUFXO0FBQ2Y7OztBQUNBO0VBQ0UsZ0JBQWdCO0FBQ2xCOzs7QUFDQTtFQUNFLGFBQWE7RUFDYixVQUFVO0VBQ1YsNEJBQTRCO0VBQzVCLGtCQUFrQjtFQUNsQixzQkFBc0I7RUFDdEIsWUFBWTtFQUNaLHVCQUF1QjtBQUN6Qjs7O0FBQ0E7RUFDRSxnQ0FBZ0M7QUFDbEMiLCJmaWxlIjoic3JjL2FwcC9zZW5kL3NlbmRkaXN0cmlidXRvcmRhc2hib2FyZC9zZW5kZGlzdHJpYnV0b3JkYXNoYm9hcmQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBcbiAgfVxuXG4gXG4jaGVhZGluZ3tcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTgsIDUwLCAxOTApOyBcbiAgICBjb2xvcjp3aGl0ZTtcbn1cbi5wZHtcbiAgYmFja2dyb3VuZDogbmF2eTtcbn1cbnRkIGEge1xuICBkaXNwbGF5OmJsb2NrO1xuICB3aWR0aDoxMDAlO1xuICBiYWNrZ3JvdW5kLWNsaXA6IHBhZGRpbmctYm94OyBcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBibHVlO1xuICBjb2xvcjogd2hpdGU7XG4gIGJvcmRlcjogMnB4IHNvbGlkIGdyZWVuO1xufVxuYSB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZSAhaW1wb3J0YW50O1xufVxuXG5cbiJdfQ== */\"","module.exports = \"<app-dashboard></app-dashboard>\\n\\n\\t<br>\\n\\t<br>\\n<div class=\\\"container\\\"><div class=\\\"row\\\">\\n\\t<!-- <form>\\n\\t\\n        <div class=\\\"row\\\"> \\n          <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n            <label>Packing Barcode</label>\\n\\t\\t\\t<input type=\\\"file\\\" style=\\\"margin-left:20px;\\\" accept=\\\"image/*\\\" (change)=\\\"onFileChange($event)\\\">\\n            <input #br type=\\\"text\\\" value=\\\"{{barcodevalue}}\\\" class=\\\"form-control required\\\" >\\n          </div>\\n        </div>\\n        \\n            \\n          </div>\\n            <div class=\\\"row text-right\\\">\\n             \\t\\t<div class=\\\"col\\\">\\n             \\t\\t\\t<div class=\\\"form-group\\\">\\n                  \\t\\t\\t<button type=\\\"reset\\\" (click)=\\\"getByMedicineId(br.value)\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n                \\t\\t</div>\\n                </div>\\n             </div>\\n\\t</form> -->\\n\\n\\n  <div *ngIf=\\\"displayTable\\\" class=\\\"col-xs-9 col-md-6 col-sm-6\\\">\\n    <table class=\\\"table table-striped table-dark table-hover text-center\\\">\\n      \\n        <thead class=\\\"theme-table\\\">\\n            <tr>            \\n              <th>Serial Number</th>\\n              <th>Medicine</th>\\n              <th>Manufacture Date</th>\\n              <th>Location</th>\\n              <th>Weight(Kg)</th>                 \\n            </tr>\\n        </thead>\\n        <tbody>\\n          <tr>\\n            <td><a [routerLink]=\\\"['/medicine/details',mlist[0].serial]\\\">{{mlist[0].serial}}</a></td>\\n            <td>{{mlist[0].medicine}}</td>\\n            <td>{{mlist[0].Mdate}}</td>\\n            <td>{{mlist[0].location}}</td>\\n            <td>{{mlist[0].weight}}</td>           \\n          </tr>\\n         \\n        </tbody>\\n        <tfoot class=\\\"theme-table\\\"><tr><th></th><th></th><th></th><th></th><th></th></tr></tfoot>\\n      </table>\\n    </div>\\n\\n    <div class=\\\"col-xs-9 col-md-6 col-sm-6\\\">\\n      <table class=\\\"table table-striped table-dark table-hover text-center\\\">\\n        \\n          <thead class=\\\"theme-table\\\">\\n              <tr>            \\n                  <th> Serial Number</th>\\n                  <!-- <th>Medicine</th>\\n                  <th>Manufacture Date</th>\\n                  <th>Location</th>\\n                  <th>Weight</th>   \\n                  <th></th>              -->\\n              </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let list of TMlist\\\">\\n              <td><a [routerLink]=\\\"['/medicinedetailsdashboard',list.serial]\\\">{{list.serial}}</a></td>\\n              <!-- <td>{{list.medicine}}</td>\\n              <td>{{list.Mdate}}</td>\\n              <td>{{list.location}}</td>\\n              <td>{{list.weight}}</td>           \\n              <td><button type=\\\"button\\\"   (click)=\\\"serialId(list.serial)\\\"  class=\\\"btn btn-success\\\" data-toggle=\\\"modal\\\" data-target=\\\"#exampleModalCenter\\\">Send to Pharma</button></td>\\n               -->\\n            </tr>\\n           \\n          </tbody>\\n          <tfoot class=\\\"theme-table\\\"><tr><th></th></tfoot>\\n        </table>\\n      </div>\\n\\n\\n\\t <div class=\\\"col-xs-9 col-md-6 col-sm-6\\\">\\n    <table class=\\\"table table-striped table-dark table-hover text-center\\\">\\n\\n      <thead class=\\\"theme-table\\\">\\n        <tr>\\n          <th>Serial</th>\\n\\t\\t  <th>Sent to</th>\\n\\t\\t  <th>Transporter</th>\\n\\t\\t  <th>Date</th>\\n          <!-- <th>Medicine code</th>\\n          <th>Manufactured Date</th>\\n          <th>Location</th>\\n          <th>Weight(Kg)</th> -->\\n          <!-- <th></th>\\n          <th></th> -->\\n        </tr>\\n      </thead>\\n      <tbody>\\n          <ng-container *ngFor=\\\"let tr of trans; let i = index\\\" >\\n        <tr *ngIf=\\\"tr.serial\\\">\\n          <td><a [routerLink]=\\\"['/medicinedetailsdashboard',tr.serial]\\\" style=\\\"color:blue\\\"> {{tr.serial}} </a></td>\\n\\t\\t  <td><p *ngFor=\\\"let u of dlist;\\\"><span *ngIf=\\\"u.userId==tr.wholesalerId || u.publicKey==tr.wholesalerId \\\">{{u.firstName}} {{u.lastName}}</span></p></td>\\n\\t\\t   <td><p *ngFor=\\\"let t of tlist;\\\"><span *ngIf=\\\"t.userId==tr.transporterId  || t.publicKey==tr.wholesalerId \\t\\\">{{t.firstName}} {{t.lastName}}</span></p></td>\\n\\t\\t   <td><span *ngIf=\\\"tr.edate\\\">{{tr.edate | date: 'dd/MM/yyyy h:mm:ss a'}}</span></td>\\n\\t\\t   \\n        </tr>\\n          </ng-container>\\n      </tbody>\\n      \\n    </table>\\n\\t </div>\\n\\t\\n\\n \\t <div class=\\\"col-xs-9 col-md-6 col-sm-6\\\">\\n    <table class=\\\"table table-striped table-dark table-hover text-center\\\">\\n\\n      <thead class=\\\"theme-table\\\">\\n        <tr>\\n          <th>Serial</th>\\n\\t\\t  <th>Sent By</th>\\n\\t\\t  <th>Transporter</th>\\n\\t\\t  <th>Date</th>\\n          <!-- <th>Medicine code</th>\\n          <th>Manufactured Date</th>\\n          <th>Location</th>\\n          <th>Weight(Kg)</th> -->\\n          <!-- <th></th>\\n          <th></th> -->\\n        </tr>\\n      </thead>\\n      <tbody>\\n          <ng-container *ngFor=\\\"let tr of recievedtrans; let i = index\\\" >\\n        <tr *ngIf=\\\"tr.serial\\\">\\n          <td><a [routerLink]=\\\"['/medicinedetailsdashboard',tr.serial]\\\" style=\\\"color:blue\\\"> {{tr.serial}} </a></td>\\n\\t\\t  <td><p *ngFor=\\\"let u of wlist;\\\"><span *ngIf=\\\"u.userId==tr.senderId || u.publicKey==tr.wholesalerId \\\">{{u.firstName}} {{u.lastName}}</span></p></td>\\n\\t\\t   <td><p *ngFor=\\\"let t of tlist;\\\"><span *ngIf=\\\"t.userId==tr.transporterId  || t.publicKey==tr.wholesalerId \\t\\\">{{t.firstName}} {{t.lastName}}</span></p></td>\\n\\t\\t   <td><span *ngIf=\\\"tr.edate\\\">{{tr.edate | date: 'dd/MM/yyyy h:mm:ss a'}}</span></td>\\n\\t\\t   \\n        </tr>\\n          </ng-container>\\n      </tbody>\\n      \\n    </table>\\n\\t </div>\\n\\t \\n\\n\\n\\t</div>\\n</div>\\n\\n   <!-- Modal -->\\n   <div class=\\\"modal fade\\\" id=\\\"exampleModalCenter\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalCenterTitle\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLongTitle\\\">Medicine Transportation</h5>\\n          \\n        </div>\\n        <div class=\\\"modal-body\\\">\\n      \\n      <div class=\\\"row\\\">\\n            <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n                <label>Serial</label>\\n                <input #serial   type=\\\"text\\\" [(ngModel)]=\\\"serialvalue\\\" class=\\\"form-control required\\\">\\n              </div></div>           \\n          </div>   \\n           <div class=\\\"row\\\">          \\n                <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n                  <label>DistributerId</label>\\n           <select [(ngModel)]=\\\"wId1\\\" class=\\\"form-control\\\" >\\n                <option    *ngFor=\\\"let wid of dlist\\\" [value]=\\\"wid.publicKey\\\">{{wid.firstName}}</option>\\n                            </select>   \\n                </div></div>\\n            </div>       \\n    <div class=\\\"row\\\">\\n            <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n                <label>TransporterId</label>\\n          <select [(ngModel)]=\\\"tId1\\\" class=\\\"form-control\\\">\\n                <option  *ngFor=\\\"let wid of tlist\\\" [value]=\\\"wid.userId\\\">{{wid.firstName}}</option>\\n                            </select> \\n              </div></div>           \\n          </div> \\t\\t\\n  \\n            \\n        </div>\\n        <div class=\\\"modal-footer\\\"> \\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" #completeModal  data-dismiss=\\\"modal\\\">Close</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"mTransection(serial.value,wId1,tId1)\\\">Send</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\"","import { Component, OnInit,ElementRef,ViewChild } from '@angular/core';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { QrCodeReader } from 'src/app/qr-code-reader.service';\nimport { Subscription } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Medicine2 } from 'src/app/admin/medicine/medicine-create/addmedicine2';\nimport { Transection } from 'src/app/admin/medicine/medicine-list/transection';\n\n@Component({\n  selector: 'app-senddistributordashboard',\n  templateUrl: './senddistributordashboard.component.html',\n  styleUrls: ['./senddistributordashboard.component.css']\n})\nexport class SenddistributordashboardComponent implements OnInit {\n\n \n  selectedWId: string = '';\n  selectedTId: string = '';\n  serialvalue: any = \" \";\n  barcodevalue: any;\n  subscription: Subscription;\n  transporter1: any = Medicine2;\n  list: any = [];\n  trans: any = []; \n  recievedtrans: any = [];\n  mlist: any = [];\n  dlist: any = [];\n  tlist: any = [];\n  wlist: any = [];\n  TMlist: any = [];\n  transection: any = Transection;\n  base;\n  call;\n  displayTable: boolean = false;\n  blockchain: any = [];\n  medicineStatus;\n  blockchain2: any = [];\n  status: any = [];\n  statusValue: any;\n  itemId: any = [];\n  mypublickey: any;\n  privateKey: any;\n  @ViewChild('completeModal')completeModal: ElementRef;\n  blockchainUrl: any = this.httpuser.blockchainUrl;\n\n  constructor(private httpuser: AuthService, private qrReader: QrCodeReader, private http: HttpClient) { }\n\n  ngOnInit() {\n    this.medicineStatus=\"Recived to Distributer\";\n    this.mypublickey = localStorage.getItem(\"publicKey\");\n    this.privateKey = localStorage.getItem(\"privateKey\");\n    this.transporterMedicineId(this.mypublickey);\n    this.allPharma();\n    this.allTransporter();\n\tthis.allWholesaler();\n\tthis.medicinetransactions();\n\tthis.medicinerecievetransactions();\n  }\n  \n     medicinetransactions() {\n   \n      return this.httpuser.getMedicineTransection().subscribe((data) => {\n        this.trans = data;\n\t\t\n\t\t\n        console.log(\"All Medicine trans\",this.trans);\n      });\n\n    \n  }\n  \n   medicinerecievetransactions() {\n   \n      return this.httpuser.getRecieveMedicineTransection().subscribe((data) => {\n        this.recievedtrans = data;\n\t\t\n\t\t\n        console.log(\"All Medicine trans\",this.trans);\n      });\n\n    \n  }\n  \n  allWholesaler() {\n    return this.httpuser.getallWholesalerUser().subscribe(data => {\n      this.wlist = data;\n      console.log(this.wlist);\n    });\n  }\n\n\n  selectChangeHandler1(event: any) {\n    //update the ui\n    this.selectedWId = event.target.value;\n  }\n\n  selectChangeHandler2(event: any) {\n    //update the ui\n    this.selectedTId = event.target.value;\n  }\n\n  serialId(serialId) {\n    this.serialvalue = serialId;\n  }\n\n\n  onFileChange(event) {\n    const file = event.target.files[0];\n    this.subscription = this.qrReader.decode(file)\n      .subscribe(decodedString => {\n        this.barcodevalue = decodedString;\n        console.log(decodedString)\n      });\n  }\n\n  transporterMedicineId(id) {\n    return this.httpuser.transporterMedicine(id).subscribe(data => {\n      this.TMlist = data;\n      console.log(this.TMlist);\n    });\n  }\n\n  getByMedicineId(id) {\n    let that = this;\n    this.mypublickey = localStorage.getItem(\"publicKey\");\n    this.privateKey = localStorage.getItem(\"privateKey\");\n    this.httpuser.getMedicineId(id).subscribe(data => {\n      this.mlist = data;\n\n      //Register User on Blockchain ==>> if \"COMMITED\" :: register in db else Mail (ERROR Message)\t\n              this.displayTable = true;\n              this.transporter(this.mlist[0].serial, this.mlist[0].medicine, this.mlist[0].barcode, this.mlist[0].location, this.mlist[0].weight, this.mlist[0].Edate, this.mlist[0].Mdate,\n                this.mlist[0].MedicineId, this.mlist[0].role, this.mlist[0].time, this.mypublickey,this.medicineStatus);\n              alert(\"Package piked \");\n      // const Metadata = {\n      //   \"action\": \"recieveFromWholesaler\",\n      //   \"payloaddata\": {\n      //     \"serialNumber\": this.mlist[0].serial,\n      //     \"status\": 4,\n      //     \"comment\": \"Delivered\"\n      //   },\n      //   \"private\": this.privateKey,\n      //   \"public\": this.mypublickey\n      // }\n\n      // const httpOptions = {\n      //   headers: new HttpHeaders({\n      //     'Content-Type': 'application/json'\n      //   })\n      // }\n\n      // return this.http.post(this.blockchainUrl, Metadata, httpOptions).subscribe(\n      //   (val) => {\n\n      //     console.log(\"POST call successful value returned in body\", val);\n      //     this.blockchain = val;\n      //     if (that.httpuser.IsJsonString(this.blockchain.response.body)) {\n      //       JSON.parse(this.blockchain.response.body).hasOwnProperty(\"data\");\n\n      //       this.status = JSON.parse(this.blockchain.response.body);\n      //       this.statusValue = this.status.data[0].status;\n      //       this.itemId = this.status.data[0].id;\n      //       if (this.statusValue == 'COMMITTED') {\n      //         this.displayTable = true;\n      //         this.transporter(this.mlist[0].serial, this.mlist[0].medicine, this.mlist[0].barcode, this.mlist[0].location, this.mlist[0].weight, this.mlist[0].Edate, this.mlist[0].Mdate,\n      //           this.mlist[0].MedicineId, this.mlist[0].role, this.mlist[0].time, this.mypublickey,this.medicineStatus);\n      //         alert(\"Package piked \");\n      //       }\n      //       else {\n      //         alert(\"Process not completed\");\n      //       }\n      //     }\n      //     else {\n\n      //       that.http.get(this.httpuser.batchUrl +\"/batch_statuses?\" + this.blockchain.id + \"&wait\").subscribe((val) => {\n      //         this.blockchain2 = val\n      //         if (that.httpuser.IsJsonString(this.blockchain2.body)) {\n      //           this.status = JSON.parse(this.blockchain2.body);\n      //           console.log('json value2', this.status.data[0].status);\n      //           this.statusValue = this.status.data[0].status;\n      //           this.itemId = this.status.data[0].id;\n      //           if (this.statusValue == 'COMMITTED') {\n      //             this.transporter(this.mlist[0].serial, this.mlist[0].medicine, this.mlist[0].barcode, this.mlist[0].location, this.mlist[0].weight, this.mlist[0].Edate, this.mlist[0].Mdate,\n      //               this.mlist[0].MedicineId, this.mlist[0].role, this.mlist[0].time, this.mypublickey,this.medicineStatus);\n      //             alert(\"Package piked \");\n      //           }\n      //           else {\n      //             alert('Request Rejected');\n      //           }\n      //         }\n      //       })\n      //     }\n      //     // }).catch(function (err) {\n      //     //   console.log(err.message);\n      //   });\n    });\n  }\n\n  allPharma() {\n    return this.httpuser.getallPharmaUser().subscribe(data => {\n      this.dlist = data;\n      console.log(this.dlist);\n    });\n  }\n\n  allTransporter() {\n    return this.httpuser.getallTransporterUser().subscribe(data => {\n      this.tlist = data;\n      console.log(this.tlist);\n    });\n  }\n\n\n  transporter(a, b, c, d, e, f, g, h, i, j, k,l) {\n    this.transporter1 = new Medicine2(a, b, c, d, e, f, g, h, i, j, k,l);\n    this.base = this.httpuser.transporter(this.transporter1);\n    this.call = this.base.subscribe(\n      data => {\n        alert(\"done\");\n\n      },\n      err => {\n        console.log(err);\n      },\n      () => {\n        console.log(\"Done\");\n      }\n    );\n  }\n\n\n  mTransection(serial: string, wholesalerId: string, transpoterId: string) {\n    let that = this;\n    console.log(\"ID\",wholesalerId);\n    //Register User on Blockchain ==>> if \"COMMITED\" :: register in db else Mail (ERROR Message)\t\n                this.transection = new Transection(serial, wholesalerId, transpoterId);\n                this.base = this.httpuser.medicineTransection(this.transection);\n                this.call = this.base.subscribe(data => {\n                  alert('Request Accepted');\n                  let el: HTMLElement = this.completeModal.nativeElement;\n                   el.click(); \n                });\n    // const Metadata = {\n    //   \"action\": \"sendToPharma\",\n    //   \"payloaddata\": {\n    //     \"serialNumber\": serial,\n    //     \"pharma\": {\n    //       \"address\": wholesalerId,\n    //       \"comment\": \"In Transaction\"\n    //     },\n    //     \"transporterid\": transpoterId\n    //   },\n    //   \"private\": this.privateKey,\n    //   \"public\": this.mypublickey\n    // }\n\n    // const httpOptions = {\n    //   headers: new HttpHeaders({\n    //     'Content-Type': 'application/json'\n    //   })\n    // };\n\n    // var x = this.http.post(this.blockchainUrl, Metadata, httpOptions).subscribe(\n    //   (val) => {\n    //     console.log(\"POST call successful value returned in body\", val);\n    //     this.blockchain = val;\n    //     if (that.httpuser.IsJsonString(this.blockchain.response.body)) {\n    //       JSON.parse(this.blockchain.response.body).hasOwnProperty(\"data\");\n\n    //       this.status = JSON.parse(this.blockchain.response.body);\n    //       this.statusValue = this.status.data[0].status;\n    //       this.itemId = this.status.data[0].id;\n    //       if (this.statusValue == 'COMMITTED') {\n    //         this.transection = new Transection(serial, wholesalerId, transpoterId);\n    //         this.base = this.httpuser.medicineTransection(this.transection);\n    //         this.call = this.base.subscribe(data => {\n\n    //           alert('Request Accepted');\n    //           let el: HTMLElement = this.completeModal.nativeElement;\n    //          el.click(); \n              \n\n    //         });\n    //       }\n    //       else {\n    //         alert('Request Rejected');\n    //         let el: HTMLElement = this.completeModal.nativeElement;\n    //          el.click(); \n              \n    //       }\n    //     } else {\n\n    //       that.http.get(this.httpuser.batchUrl +\"/batch_statuses?\" + this.blockchain.id + \"&wait\").subscribe((val) => {\n    //         this.blockchain2 = val\n    //         if (that.httpuser.IsJsonString(this.blockchain2.body)) {\n    //           this.status = JSON.parse(this.blockchain2.body);\n    //           console.log('json value2', this.status.data[0].status);\n    //           this.statusValue = this.status.data[0].status;\n    //           this.itemId = this.status.data[0].id;\n    //           if (this.statusValue == 'COMMITTED') {\n    //             this.transection = new Transection(serial, wholesalerId, transpoterId);\n    //             this.base = this.httpuser.medicineTransection(this.transection);\n    //             this.call = this.base.subscribe(data => {\n    //               alert('Request Accepted');\n    //             });\n    //           }\n    //           else {\n    //             alert('Request Rejected');\n    //           }\n    //         }\n    //       })\n    //     }\n    //     // }).catch(function (err) {\n    //     //   console.log(err.message);\n    //   });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlbmQvc2VuZGRpc3RyaWJ1dG9ycmVwb3J0L3NlbmRkaXN0cmlidXRvcnJlcG9ydC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-dashboard></app-dashboard>\\n<div class=\\\"container\\\">\\n\\t<br>\\n\\t<br>\\n\\n    <div  class=\\\"table-responsive\\\">\\n      <br>\\n      <table class=\\\"table table-striped table-dark table-hover text-center\\\">\\n        \\n          <thead class=\\\"theme-table\\\">\\n\\t\\t  <tr>\\n\\t\\t\\t<th colspan=\\\"4\\\"></th>\\n\\t\\t\\t<th><button type=\\\"button\\\"   (click)=\\\"exporttocsv()\\\"  class=\\\"btn btn-primary\\\" >Export as CSV</button></th>\\n\\t\\t\\t</tr>\\n              <tr>            \\n                  <th>Serial Number</th>\\n                  <th>Medicine</th>\\n                  <th>Manufacture Date</th>\\n                  <th>Location</th>\\n                  <th>Weight(Kg)</th>   \\n                  <!-- <th></th>-->\\n              </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let list of TMlist\\\">\\n              <td><a [routerLink]=\\\"['/medicine/details',list.serial]\\\">{{list.serial}}</a></td>\\n              <td>{{list.medicine}}</td>\\n              <td>{{list.Mdate}}</td>\\n              <td>{{list.location}}</td>\\n              <td>{{list.weight}}</td>           \\n              \\n              </tr>\\n           \\n          </tbody>\\n          <tfoot class=\\\"theme-table\\\"><tr>\\n\\t\\t\\t<th colspan=\\\"4\\\"></th>\\n\\t\\t\\t<th><button type=\\\"button\\\"   (click)=\\\"exporttocsv()\\\"  class=\\\"btn btn-primary\\\" >Export as CSV</button></th>\\n\\t\\t\\t</tr></tfoot>\\n        </table>\\n      </div>\\n\\n</div>\\n\\n\"","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { QrCodeReader } from 'src/app/qr-code-reader.service';\nimport { Subscription } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Medicine2 } from 'src/app/admin/medicine/medicine-create/addmedicine2';\nimport { Transection } from 'src/app/admin/medicine/medicine-list/transection';\nimport { Angular5Csv } from 'angular5-csv/dist/Angular5-csv';\n\n@Component({\n  selector: 'app-senddistributorreport',\n  templateUrl: './senddistributorreport.component.html',\n  styleUrls: ['./senddistributorreport.component.css']\n})\nexport class SenddistributorreportComponent implements OnInit {\n\n  selectedWId: string = '';\n  selectedTId: string = '';\n  serialvalue: any = \" \";\n  barcodevalue: any;\n  subscription: Subscription;\n  transporter1: any = Medicine2;\n  list: any = [];\n  mlist: any = [];\n  dlist: any = [];\n  tlist: any = [];\n  TMlist: any = [];\n  meds: any = [];\n  transection: any = Transection;\n  base;\n  call;\n  displayTable: boolean = false;\n  blockchain: any = [];\n  medicineStatus;\n  blockchain2: any = [];\n  status: any = [];\n  statusValue: any;\n  itemId: any = [];\n  mypublickey: any;\n  privateKey: any;\n  @ViewChild('completeModal') completeModal: ElementRef;\n  blockchainUrl: any = this.httpuser.blockchainUrl;\n  constructor(private httpuser: AuthService, private qrReader: QrCodeReader, private http: HttpClient) { }\n\n  ngOnInit() {\n    this.medicineStatus = \"Recived to Distributer\";\n    this.mypublickey = localStorage.getItem(\"publicKey\");\n    this.privateKey = localStorage.getItem(\"privateKey\");\n    this.transporterMedicineId(this.mypublickey);\n    this.allPharma();\n    this.allTransporter();\n  }\n\n  selectChangeHandler1(event: any) {\n    //update the ui\n    this.selectedWId = event.target.value;\n  }\n\n  selectChangeHandler2(event: any) {\n    //update the ui\n    this.selectedTId = event.target.value;\n  }\n\n  serialId(serialId) {\n    this.serialvalue = serialId;\n  }\n\n\n  onFileChange(event) {\n    const file = event.target.files[0];\n    this.subscription = this.qrReader.decode(file)\n      .subscribe(decodedString => {\n        this.barcodevalue = decodedString;\n        console.log(decodedString)\n      });\n  }\n\n  transporterMedicineId(id) {\n    return this.httpuser.transporterMedicine(id).subscribe(data => {\n      this.TMlist = data;\n      console.log(this.TMlist);\n    });\n  }\n\n  getByMedicineId(id) {\n    let that = this;\n    this.mypublickey = localStorage.getItem(\"publicKey\");\n    this.privateKey = localStorage.getItem(\"privateKey\");\n    this.httpuser.getMedicineId(id).subscribe(data => {\n      this.mlist = data;\n\n      //Register User on Blockchain ==>> if \"COMMITED\" :: register in db else Mail (ERROR Message)\t\n      this.displayTable = true;\n      this.transporter(this.mlist[0].serial, this.mlist[0].medicine, this.mlist[0].barcode, this.mlist[0].location, this.mlist[0].weight, this.mlist[0].Edate, this.mlist[0].Mdate,\n        this.mlist[0].MedicineId, this.mlist[0].role, this.mlist[0].time, this.mypublickey, this.medicineStatus);\n      alert(\"Package piked \");\n      // const Metadata = {\n      //   \"action\": \"recieveFromWholesaler\",\n      //   \"payloaddata\": {\n      //     \"serialNumber\": this.mlist[0].serial,\n      //     \"status\": 4,\n      //     \"comment\": \"Delivered\"\n      //   },\n      //   \"private\": this.privateKey,\n      //   \"public\": this.mypublickey\n      // }\n\n      // const httpOptions = {\n      //   headers: new HttpHeaders({\n      //     'Content-Type': 'application/json'\n      //   })\n      // }\n\n      // return this.http.post(this.blockchainUrl, Metadata, httpOptions).subscribe(\n      //   (val) => {\n\n      //     console.log(\"POST call successful value returned in body\", val);\n      //     this.blockchain = val;\n      //     if (that.httpuser.IsJsonString(this.blockchain.response.body)) {\n      //       JSON.parse(this.blockchain.response.body).hasOwnProperty(\"data\");\n\n      //       this.status = JSON.parse(this.blockchain.response.body);\n      //       this.statusValue = this.status.data[0].status;\n      //       this.itemId = this.status.data[0].id;\n      //       if (this.statusValue == 'COMMITTED') {\n      //         this.displayTable = true;\n      //         this.transporter(this.mlist[0].serial, this.mlist[0].medicine, this.mlist[0].barcode, this.mlist[0].location, this.mlist[0].weight, this.mlist[0].Edate, this.mlist[0].Mdate,\n      //           this.mlist[0].MedicineId, this.mlist[0].role, this.mlist[0].time, this.mypublickey,this.medicineStatus);\n      //         alert(\"Package piked \");\n      //       }\n      //       else {\n      //         alert(\"Process not completed\");\n      //       }\n      //     }\n      //     else {\n\n      //       that.http.get(this.httpuser.batchUrl +\"/batch_statuses?\" + this.blockchain.id + \"&wait\").subscribe((val) => {\n      //         this.blockchain2 = val\n      //         if (that.httpuser.IsJsonString(this.blockchain2.body)) {\n      //           this.status = JSON.parse(this.blockchain2.body);\n      //           console.log('json value2', this.status.data[0].status);\n      //           this.statusValue = this.status.data[0].status;\n      //           this.itemId = this.status.data[0].id;\n      //           if (this.statusValue == 'COMMITTED') {\n      //             this.transporter(this.mlist[0].serial, this.mlist[0].medicine, this.mlist[0].barcode, this.mlist[0].location, this.mlist[0].weight, this.mlist[0].Edate, this.mlist[0].Mdate,\n      //               this.mlist[0].MedicineId, this.mlist[0].role, this.mlist[0].time, this.mypublickey,this.medicineStatus);\n      //             alert(\"Package piked \");\n      //           }\n      //           else {\n      //             alert('Request Rejected');\n      //           }\n      //         }\n      //       })\n      //     }\n      //     // }).catch(function (err) {\n      //     //   console.log(err.message);\n      //   });\n    });\n  }\n\n  allPharma() {\n    return this.httpuser.getallPharmaUser().subscribe(data => {\n      this.dlist = data;\n      console.log(this.dlist);\n    });\n  }\n\n  allTransporter() {\n    return this.httpuser.getallTransporterUser().subscribe(data => {\n      this.tlist = data;\n      console.log(this.tlist);\n    });\n  }\n\n\n  exporttocsv() {\n    var data = [];\n    var datarow = {};\n\n    if (Array.isArray(this.TMlist))\n      this.meds = this.TMlist;\n    else\n      this.meds = this.TMlist.split(',');\n\n    for (var i = 0; i <= this.meds.length; i++) {\n      console.log(\"meds==\" + this.meds[i]);\n      if (typeof this.meds[i] != \"undefined\") {\n        datarow = {\n          serial: this.meds[i].serial,\n          medicine: this.meds[i].medicine,\n          manufactured: this.meds[i].Mdate,\n          location: this.meds[i].location,\n          weight: this.meds[i].weight\n        };\n        data.push(datarow);\n      }\n    }\n\n    var options = {\n      fieldSeparator: ',',\n      quoteStrings: '\"',\n      decimalseparator: '.',\n      showLabels: true,\n      showTitle: true,\n      headers: [\"Serial Number\", \"Medicine code\", \"Manufactured Date\", \"Location\", \"Weight\"]\n    };\n\n    new Angular5Csv(data, 'Report1', options);\n\n    return true;\n  }\n\n\n\n\n  transporter(a, b, c, d, e, f, g, h, i, j, k, l) {\n    this.transporter1 = new Medicine2(a, b, c, d, e, f, g, h, i, j, k, l);\n    this.base = this.httpuser.transporter(this.transporter1);\n    this.call = this.base.subscribe(\n      data => {\n        alert(\"done\");\n\n      },\n      err => {\n        console.log(err);\n      },\n      () => {\n        console.log(\"Done\");\n      }\n    );\n  }\n\n\n  mTransection(serial: string, wholesalerId: string, transpoterId: string) {\n    let that = this;\n    console.log(\"ID\", wholesalerId);\n    //Register User on Blockchain ==>> if \"COMMITED\" :: register in db else Mail (ERROR Message)\t\n            this.transection = new Transection(serial, wholesalerId, transpoterId);\n            this.base = this.httpuser.medicineTransection(this.transection);\n            this.call = this.base.subscribe(data => {\n\n              alert('Request Accepted');\n              let el: HTMLElement = this.completeModal.nativeElement;\n             el.click(); \n\n\n            });\n    // const Metadata = {\n    //   \"action\": \"sendToPharma\",\n    //   \"payloaddata\": {\n    //     \"serialNumber\": serial,\n    //     \"pharma\": {\n    //       \"address\": wholesalerId,\n    //       \"comment\": \"In Transaction\"\n    //     },\n    //     \"transporterid\": transpoterId\n    //   },\n    //   \"private\": this.privateKey,\n    //   \"public\": this.mypublickey\n    // }\n\n    // const httpOptions = {\n    //   headers: new HttpHeaders({\n    //     'Content-Type': 'application/json'\n    //   })\n    // };\n\n    // var x = this.http.post(this.blockchainUrl, Metadata, httpOptions).subscribe(\n    //   (val) => {\n    //     console.log(\"POST call successful value returned in body\", val);\n    //     this.blockchain = val;\n    //     if (that.httpuser.IsJsonString(this.blockchain.response.body)) {\n    //       JSON.parse(this.blockchain.response.body).hasOwnProperty(\"data\");\n\n    //       this.status = JSON.parse(this.blockchain.response.body);\n    //       this.statusValue = this.status.data[0].status;\n    //       this.itemId = this.status.data[0].id;\n    //       if (this.statusValue == 'COMMITTED') {\n    //         this.transection = new Transection(serial, wholesalerId, transpoterId);\n    //         this.base = this.httpuser.medicineTransection(this.transection);\n    //         this.call = this.base.subscribe(data => {\n\n    //           alert('Request Accepted');\n    //           let el: HTMLElement = this.completeModal.nativeElement;\n    //          el.click(); \n\n\n    //         });\n    //       }\n    //       else {\n    //         alert('Request Rejected');\n    //         let el: HTMLElement = this.completeModal.nativeElement;\n    //          el.click(); \n\n    //       }\n    //     } else {\n\n    //       that.http.get(this.httpuser.batchUrl +\"/batch_statuses?\" + this.blockchain.id + \"&wait\").subscribe((val) => {\n    //         this.blockchain2 = val\n    //         if (that.httpuser.IsJsonString(this.blockchain2.body)) {\n    //           this.status = JSON.parse(this.blockchain2.body);\n    //           console.log('json value2', this.status.data[0].status);\n    //           this.statusValue = this.status.data[0].status;\n    //           this.itemId = this.status.data[0].id;\n    //           if (this.statusValue == 'COMMITTED') {\n    //             this.transection = new Transection(serial, wholesalerId, transpoterId);\n    //             this.base = this.httpuser.medicineTransection(this.transection);\n    //             this.call = this.base.subscribe(data => {\n    //               alert('Request Accepted');\n    //             });\n    //           }\n    //           else {\n    //             alert('Request Rejected');\n    //           }\n    //         }\n    //       })\n    //     }\n    //     // }).catch(function (err) {\n    //     //   console.log(err.message);\n    //   });\n  }\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlbmQvc2VuZHBoYXJtYS9zZW5kcGhhcm1hLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-dashboard></app-dashboard>\\n<div class=\\\"container\\\">\\n\\t<br>\\n\\t<br>\\n\\n\\t<form>\\n\\t\\n        <div class=\\\"row\\\"> \\n          <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n            <label>Packing Barcode</label>\\n\\t\\t\\t<input type=\\\"file\\\" style=\\\"margin-left:20px;\\\" accept=\\\"image/*\\\" (change)=\\\"onFileChange($event)\\\">\\n            <input #br type=\\\"text\\\" value=\\\"{{barcodevalue}}\\\" class=\\\"form-control required\\\" >\\n          </div>\\n        </div>\\n        \\n            \\n          </div>\\n            <div class=\\\"row text-right\\\">\\n             \\t\\t<div class=\\\"col\\\">\\n             \\t\\t\\t<div class=\\\"form-group\\\">\\n                  \\t\\t\\t<button type=\\\"reset\\\" (click)=\\\"getByMedicineId(br.value,4)\\\" class=\\\"btn btn-primary\\\">Accept</button>\\n\\t\\t\\t\\t\\t\\t\\t&nbsp; &nbsp; &nbsp;\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"reset\\\" (click)=\\\"getByMedicineId(br.value,5)\\\" class=\\\"btn btn-primary\\\">Reject</button>\\n\\t\\t\\t\\t\\t\\t\\t&nbsp; &nbsp; &nbsp;\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"reset\\\" (click)=\\\"getdetails(br.value,5)\\\" class=\\\"btn btn-primary\\\">Get Details</button> \\n                \\t\\t</div>\\n                </div>\\n             </div>\\n\\t</form>\\n\\n\\n  <div *ngIf=\\\"displayTable\\\" class=\\\"table-responsive\\\">\\n    <br>\\n    <table class=\\\"table table-striped table-dark table-hover text-center\\\">\\n      \\n        <thead class=\\\"theme-table\\\">\\n            <tr>            \\n              <th> Serial Number</th>\\n              <th>Medicine</th>\\n              <th>Manufacture Date</th>\\n              <th>Location</th>\\n              <th>Weight (Kg)</th>  \\n              \\n            </tr>\\n        </thead>\\n        <tbody>\\n          <tr>\\n            <td><a [routerLink]=\\\"['/medicine/details',mlist[0].serial]\\\">{{mlist[0].serial}}</a></td>\\n            <td>{{mlist[0].medicine}}</td>\\n            <td>{{mlist[0].Mdate}}</td>\\n            <td>{{mlist[0].location}}</td>\\n            <td>{{mlist[0].weight}}</td>\\n            </tr>\\n         \\n        </tbody>\\n        <tfoot class=\\\"theme-table\\\"><tr><th></th><th></th><th></th><th></th><th></th></tr></tfoot>\\n      </table>\\n    </div>\\n\\n    <div  class=\\\"table-responsive\\\">\\n      <br>\\n      <table class=\\\"table table-striped table-dark table-hover text-center\\\">\\n        \\n          <thead class=\\\"theme-table\\\">\\n              <tr>            \\n                  <th> Serial Number</th>\\n                  <th>Medicine</th>\\n                  <th>Manufacture Date</th>\\n                  <th>Location</th>\\n                  <th>Weight</th>   \\n                        \\n              </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let list of TMlist\\\">\\n              <td><a [routerLink]=\\\"['/medicine/details',list.serial]\\\">{{list.serial}}</a></td>\\n              <td>{{list.medicine}}</td>\\n              <td>{{list.Mdate}}</td>\\n              <td>{{list.location}}</td>\\n              <td>{{list.weight}}</td>           \\n            <!-- <td><button type=\\\"button\\\"   (click)=\\\"serialId(list.serial)\\\"  class=\\\"btn btn-success\\\" data-toggle=\\\"modal\\\" data-target=\\\"#exampleModalCenter\\\">Send to Customer</button></td> -->\\n              </tr>\\n           \\n          </tbody>\\n          <tfoot class=\\\"theme-table\\\"><tr><th></th><th></th><th></th><th></th><th></th></tr></tfoot>\\n        </table>\\n      </div>\\n    \\n</div>\\n\\n\\n   <!-- Modal -->\\n   <div class=\\\"modal fade\\\" id=\\\"exampleModalCenter\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalCenterTitle\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLongTitle\\\">Medicine Transportation</h5>\\n          \\n        </div>\\n        <div class=\\\"modal-body\\\">\\n      \\n      <div class=\\\"row\\\">\\n            <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n                <label>Serial</label>\\n                <input #serial   type=\\\"text\\\" [(ngModel)]=\\\"serialvalue\\\" class=\\\"form-control required\\\">\\n              </div></div>           \\n          </div>   \\n           <div class=\\\"row\\\">          \\n                <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n                  <label>PharmaId</label>\\n           <select [(ngModel)]=\\\"wId1\\\" class=\\\"form-control\\\" >\\n                <option    *ngFor=\\\"let wid of dlist\\\" [value]=\\\"wid.userId\\\">{{wid.firstName}}</option>\\n                            </select>   \\n                </div></div>\\n            </div>       \\n    <div class=\\\"row\\\">\\n            <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n                <label>TransporterId</label>\\n          <select [(ngModel)]=\\\"tId1\\\" class=\\\"form-control\\\">\\n                <option  *ngFor=\\\"let wid of tlist\\\" [value]=\\\"wid.userId\\\">{{wid.firstName}}</option>\\n                            </select> \\n              </div></div>           \\n          </div> \\t\\t\\n  \\n            \\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\"  data-dismiss=\\\"modal\\\">Close</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"mTransection(serial.value,wId1,tId1)\\\">Send</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { QrCodeReader } from 'src/app/qr-code-reader.service';\nimport { Subscription } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Medicine2 } from 'src/app/admin/medicine/medicine-create/addmedicine2';\nimport { Transection } from 'src/app/admin/medicine/medicine-list/transection';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-sendpharma',\n  templateUrl: './sendpharma.component.html',\n  styleUrls: ['./sendpharma.component.css']\n})\nexport class SendpharmaComponent implements OnInit {\n\n  selectedWId: string = '';\n  selectedTId: string = '';\n  serialvalue: any = \" \";\n  barcodevalue: any;\n  subscription: Subscription;\n  transporter1: any = Medicine2;\n  list: any = [];\n  mlist: any = [];\n  dlist: any = [];\n  tlist: any = [];\n  TMlist: any = [];\n  transection: any = Transection;\n  base;\n  call;\n  displayTable: boolean = false;\n  blockchain: any = [];\n  blockchain2: any = [];\n  status: any = [];\n  statusValue: any;\n  itemId: any = [];\n  medicineStatus;\n  mypublickey: any;\n  privateKey: any;\n  blockchainUrl: any = this.httpuser.blockchainUrl;\n\n  constructor(private route: Router, private httpuser: AuthService, private qrReader: QrCodeReader, private http: HttpClient) { }\n\n  ngOnInit() {\n    this.medicineStatus = \"Recived to Pharma\";\n    this.mypublickey = localStorage.getItem(\"publicKey\");\n    this.privateKey = localStorage.getItem(\"privateKey\");\n    this.transporterMedicineId(this.mypublickey);\n    this.allPharma();\n    this.allTransporter();\n  }\n\n  selectChangeHandler1(event: any) {\n    //update the ui\n    this.selectedWId = event.target.value;\n  }\n\n  selectChangeHandler2(event: any) {\n    //update the ui\n    this.selectedTId = event.target.value;\n  }\n\n  serialId(serialId) {\n    this.serialvalue = serialId;\n  }\n\n\n  onFileChange(event) {\n    const file = event.target.files[0];\n    this.subscription = this.qrReader.decode(file)\n      .subscribe(decodedString => {\n        this.barcodevalue = decodedString;\n        console.log(decodedString)\n      });\n  }\n\n\n  transporterMedicineId(id) {\n    return this.httpuser.transporterMedicine(id).subscribe(data => {\n      this.TMlist = data;\n      console.log(this.TMlist);\n    });\n  }\n  getdetails(id, statusid) {\n    let that = this;\n    this.mypublickey = localStorage.getItem(\"publicKey\");\n    this.privateKey = localStorage.getItem(\"privateKey\");\n    this.httpuser.getMedicineId(id).subscribe(data => {\n      this.mlist = data;\n\n      this.route.navigate(['/medicinedetailsdashboard/' + this.mlist[0].serial]);\n    });\n  }\n  getByMedicineId(id, statusid) {\n    let that = this;\n    this.mypublickey = localStorage.getItem(\"publicKey\");\n    this.privateKey = localStorage.getItem(\"privateKey\");\n    this.httpuser.getMedicineId(id).subscribe(data => {\n      this.mlist = data;\n\n      //Register User on Blockchain ==>> if \"COMMITED\" :: register in db else Mail (ERROR Message)\t\n      this.displayTable = true;\n      if (statusid == 5) this.medicineStatus = \"Rejected by Pharma\";\n      this.transporter(this.mlist[0].serial, this.mlist[0].medicine, this.mlist[0].barcode, this.mlist[0].location, this.mlist[0].weight, this.mlist[0].Edate, this.mlist[0].Mdate,\n        this.mlist[0].MedicineId, this.mlist[0].role, this.mlist[0].time, this.mypublickey, this.medicineStatus);\n      if (statusid == 5)\n        alert(\"Package Returned \");\n      else\n        alert(\"Package piked \");\n      //  const Metadata = {\n      //   \"action\": \"recieveFromDistributer\",\n      //   \"payloaddata\": {\n      //       \"serialNumber\": this.mlist[0].serial,\n      //       \"status\": statusid,\n      //       \"comment\": \"Delivered\"\n      //   },\n      //   \"private\":this.privateKey,\n      //   \"public\": this.mypublickey\n      //     }\t    \n\n      // const httpOptions = {\n      // headers: new HttpHeaders({\n      //   'Content-Type': 'application/json'\n      // })\n      // }\n\n      //     return this.http.post(this.blockchainUrl, Metadata,httpOptions).subscribe(\n      //  (val) => {\t\n      //   console.log(\"POST call successful value returned in body\", val);\n      //   this.blockchain = val;\n      //   if (that.httpuser.IsJsonString(this.blockchain.response.body)) {\n      //     JSON.parse(this.blockchain.response.body).hasOwnProperty(\"data\");\n\n      //     this.status = JSON.parse(this.blockchain.response.body);            \n      //     this.statusValue = this.status.data[0].status;\n      //     this.itemId = this.status.data[0].id;\n      //     if (this.statusValue == 'COMMITTED') {   \n      //    this.displayTable=true; \n      //    if(statusid == 5) this.medicineStatus = \"Rejected by Pharma\";\n      //    this.transporter(this.mlist[0].serial,this.mlist[0].medicine,this.mlist[0].barcode,this.mlist[0].location,this.mlist[0].weight,this.mlist[0].Edate,this.mlist[0].Mdate,\n      //     this.mlist[0].MedicineId,this.mlist[0].role,this.mlist[0].time,this.mypublickey,this.medicineStatus);\n      // \t\t\t\tif(statusid == 5)\n      // \t\t\t\t\talert(\"Package Returned \");\n      // \t\t\t\telse\n      // \t\t\t\t\talert(\"Package piked \");\n      //   }\n      //   else{\n      // \t  alert(\"Process not completed\");\n      //   }\n      //   }\n      //   else {\n\n      //     that.http.get(this.httpuser.batchUrl +\"/batch_statuses?\" + this.blockchain.id + \"&wait\").subscribe((val) => {\n      //       this.blockchain2 =val\n      //       if (that.httpuser.IsJsonString(this.blockchain2.body)) {\n      //         this.status = JSON.parse(this.blockchain2.body);\n      //         console.log('json value2', this.status.data[0].status);\n      //         this.statusValue = this.status.data[0].status;\n      //         this.itemId = this.status.data[0].id;\n      //         if (this.statusValue == 'COMMITTED') {\n      // \t\t\t if(statusid == 5) this.medicineStatus = \"Rejected by Pharma\";\n      //           this.transporter(this.mlist[0].serial,this.mlist[0].medicine,this.mlist[0].barcode,this.mlist[0].location,this.mlist[0].weight,this.mlist[0].Edate,this.mlist[0].Mdate,\n      //             this.mlist[0].MedicineId,this.mlist[0].role,this.mlist[0].time,this.mypublickey,this.medicineStatus);\n      //             if(statusid == 5)\n      // \t\t\t\talert(\"Package Returned \");\n      // \t\t\telse\n      // \t\t\t\talert(\"Package piked \");\n      //         }\n      //         else {\n      //           alert('Request Rejected');\n      //         }\n      //       }\n      //     })\n      //   }\n      // // }).catch(function (err) {\n      // //   console.log(err.message);\n      // });\n    });\n  }\n\n  allPharma() {\n    return this.httpuser.getallPharmaUser().subscribe(data => {\n      this.dlist = data;\n      console.log(this.dlist);\n    });\n  }\n\n  allTransporter() {\n    return this.httpuser.getallTransporterUser().subscribe(data => {\n      this.tlist = data;\n      console.log(this.tlist);\n    });\n  }\n\n\n  transporter(a, b, c, d, e, f, g, h, i, j, k, l) {\n    this.transporter1 = new Medicine2(a, b, c, d, e, f, g, h, i, j, k, l);\n    this.base = this.httpuser.transporter(this.transporter1);\n    this.call = this.base.subscribe(\n      data => {\n        alert(\"done\");\n\n      },\n      err => {\n        console.log(err);\n      },\n      () => {\n        console.log(\"Done\");\n      }\n    );\n  }\n\n\n  mTransection(serial: string, wholesalerId: string, transpoterId: string) {\n    console.log(serial, wholesalerId, transpoterId);\n    //Register User on Blockchain ==>> if \"COMMITED\" :: register in db else Mail (ERROR Message)\t\n\n    //  const Metadata = {\n    // \t\t\t  \"action\": \"sendToPharma\",\n    //     \"payloaddata\": {\n    //         \"serialNumber\": serial,\n    //         \"wholesaler\": {\n    //             \"address\": wholesalerId,\n    //             \"comment\": \"In Transaction\"\n    //         },\n    //         \"transporterid\": transpoterId\n    //     },\n    // \t\t\t\t\"private\":this.privateKey,\n    // \t\t\t\t\"public\": this.mypublickey\n    // \t\t\t\t\t}\t    \n\n    // \tconst httpOptions = {\n    //       headers: new HttpHeaders({\n    //         'Content-Type': 'application/json'\n    //       })\n    //     };\n\n    //             var x = this.http.post(this.blockchainUrl, Metadata,httpOptions).subscribe(\n    //        (val) => {\t\n    // \t   this.blockchain=val;\n    //         console.log(\"POST call successful value returned in body\",val);\n    // \t   if(this.blockchain){\n    //     this.transection = new Transection(serial,wholesalerId,transpoterId);\n    //     this.base = this.httpuser.medicineTransection(this.transection);\n    //     this.call = this.base.subscribe(\n    //       data => {        \n    //         alert(\"done\");        \n    //       },\n    //       err => {\n    //         console.log(err);\n    //       },\n    //       () => {\n    //         console.log(\"Done\");\n    //       }\n    //     );\n    //   }\n    //   else{\n    // \t  alert(\"Process not completed\");\n    //   }\n    //   });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlbmQvc2VuZHBoYXJtYWRhc2hib2FyZC9zZW5kcGhhcm1hZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \" \\t <div class=\\\"col-xs-9 col-md-6 col-sm-6\\\">\\n    <table class=\\\"table table-striped table-dark table-hover text-center\\\">\\n\\n      <thead class=\\\"theme-table\\\">\\n        <tr>\\n          <th>Serial</th>\\n\\t\\t  <th>Sent By</th>\\n\\t\\t  <th>Transporter</th>\\n\\t\\t  <th>Date</th>\\n          <!-- <th>Medicine code</th>\\n          <th>Manufactured Date</th>\\n          <th>Location</th>\\n          <th>Weight(Kg)</th> -->\\n          <!-- <th></th>\\n          <th></th> -->\\n        </tr>\\n      </thead>\\n      <tbody>\\n          <ng-container *ngFor=\\\"let tr of recievedtrans; let i = index\\\" >\\n        <tr *ngIf=\\\"tr.serial\\\">\\n          <td><a [routerLink]=\\\"['/medicinedetailsdashboard',tr.serial]\\\" style=\\\"color:white\\\"> {{tr.serial}} </a></td>\\n\\t\\t  <td><p *ngFor=\\\"let u of dlist;\\\"><span *ngIf=\\\"u.userId==tr.senderId || u.publicKey==tr.wholesalerId \\\">{{u.firstName}} {{u.lastName}}</span></p></td>\\n\\t\\t   <td><p *ngFor=\\\"let t of tlist;\\\"><span *ngIf=\\\"t.userId==tr.transporterId  || t.publicKey==tr.wholesalerId \\t\\\">{{t.firstName}} {{t.lastName}}</span></p></td>\\n\\t\\t   <td><span *ngIf=\\\"tr.edate\\\">{{tr.edate | date: 'dd/MM/yyyy h:mm:ss a'}}</span></td>\\n\\t\\t   \\n        </tr>\\n          </ng-container>\\n      </tbody>\\n      \\n    </table>\\n\\t </div>\\n\\t \\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { QrCodeReader } from 'src/app/qr-code-reader.service';\nimport { Subscription } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Component({\n  selector: 'app-sendpharmadashboard',\n  templateUrl: './sendpharmadashboard.component.html',\n  styleUrls: ['./sendpharmadashboard.component.css']\n})\nexport class SendpharmadashboardComponent implements OnInit {\n\n\trecievedtrans: any = [];\n\tdlist:any=[];\n\ttlist: any = [];\n\n  constructor(private httpuser: AuthService, private qrReader: QrCodeReader, private http: HttpClient) { }\n\n  ngOnInit() {\n\t  \n\t  this.medicinerecievetransactions();\n\t  this.allDistributer();\n\t  this.allTransporter();\n  }\n\n   medicinerecievetransactions() {\n   \n      return this.httpuser.getRecieveMedicineTransection().subscribe((data) => {\n        this.recievedtrans = data;\n\t\t\n\t\t\n        console.log(\"All Medicine trans\",this.recievedtrans);\n      });\n\n    \n  }\n  allDistributer() {\n  return this.httpuser.getallDistributerUser().subscribe(data => {\n    this.dlist = data; \nconsole.log(this.dlist);\t  \n  });\n}\nallTransporter() {\n    return this.httpuser.getallTransporterUser().subscribe(data => {\n      this.tlist = data;\n      console.log(this.tlist);\n    });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlbmQvc2VuZHBoYXJtYXJlcG9ydC9zZW5kcGhhcm1hcmVwb3J0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-dashboard></app-dashboard>\\n<div class=\\\"container\\\">\\n\\t<br>\\n\\t<br>\\n\\n\\n    <div  class=\\\"table-responsive\\\">\\n      <br>\\n      <table class=\\\"table table-striped table-dark table-hover text-center\\\">\\n        \\n          <thead class=\\\"theme-table\\\">\\n\\t\\t  <tr>\\n\\t\\t\\t<th colspan=\\\"4\\\"></th>\\n\\t\\t\\t<th><button type=\\\"button\\\"   (click)=\\\"exporttocsv()\\\"  class=\\\"btn btn-primary\\\" >Export as CSV</button></th>\\n\\t\\t\\t</tr>\\n              <tr>            \\n                  <th> Serial Number</th>\\n                  <th>Medicine</th>\\n                  <th>Manufacture Date</th>\\n                  <th>Location</th>\\n                  <th>Weight(Kg)</th>   \\n                        \\n              </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let list of TMlist\\\">\\n              <td><a [routerLink]=\\\"['/medicine/details',list.serial]\\\">{{list.serial}}</a></td>\\n              <td>{{list.medicine}}</td>\\n              <td>{{list.Mdate}}</td>\\n              <td>{{list.location}}</td>\\n              <td>{{list.weight}}</td>           \\n            <!-- <td><button type=\\\"button\\\"   (click)=\\\"serialId(list.serial)\\\"  class=\\\"btn btn-success\\\" data-toggle=\\\"modal\\\" data-target=\\\"#exampleModalCenter\\\">Send to Customer</button></td> -->\\n              </tr>\\n           \\n          </tbody>\\n          <tfoot class=\\\"theme-table\\\"><tr>\\n\\t\\t\\t<th colspan=\\\"4\\\"></th>\\n\\t\\t\\t<th><button type=\\\"button\\\"   (click)=\\\"exporttocsv()\\\"  class=\\\"btn btn-primary\\\" >Export as CSV</button></th>\\n\\t\\t\\t</tr></tfoot>\\n        </table>\\n      </div>\\n    \\n</div>\\n\\n\\n   <!-- Modal -->\\n   <div class=\\\"modal fade\\\" id=\\\"exampleModalCenter\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalCenterTitle\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLongTitle\\\">Medicine Transportation</h5>\\n          \\n        </div>\\n        <div class=\\\"modal-body\\\">\\n      \\n      <div class=\\\"row\\\">\\n            <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n                <label>Serial</label>\\n                <input #serial   type=\\\"text\\\" [(ngModel)]=\\\"serialvalue\\\" class=\\\"form-control required\\\">\\n              </div></div>           \\n          </div>   \\n           <div class=\\\"row\\\">          \\n                <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n                  <label>PharmaId</label>\\n           <select [(ngModel)]=\\\"wId1\\\" class=\\\"form-control\\\" >\\n                <option    *ngFor=\\\"let wid of dlist\\\" [value]=\\\"wid.userId\\\">{{wid.firstName}}</option>\\n                            </select>   \\n                </div></div>\\n            </div>       \\n    <div class=\\\"row\\\">\\n            <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n                <label>TransporterId</label>\\n          <select [(ngModel)]=\\\"tId1\\\" class=\\\"form-control\\\">\\n                <option  *ngFor=\\\"let wid of tlist\\\" [value]=\\\"wid.userId\\\">{{wid.firstName}}</option>\\n                            </select> \\n              </div></div>           \\n          </div> \\t\\t\\n  \\n            \\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\"  data-dismiss=\\\"modal\\\">Close</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"mTransection(serial.value,wId1,tId1)\\\">Send</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { QrCodeReader } from 'src/app/qr-code-reader.service';\nimport { Subscription } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Medicine2 } from 'src/app/admin/medicine/medicine-create/addmedicine2';\nimport { Transection } from 'src/app/admin/medicine/medicine-list/transection';\nimport { Angular5Csv } from 'angular5-csv/dist/Angular5-csv';\n@Component({\n  selector: 'app-sendpharmareport',\n  templateUrl: './sendpharmareport.component.html',\n  styleUrls: ['./sendpharmareport.component.css']\n})\nexport class SendpharmareportComponent implements OnInit {\n\n  selectedWId: string = '';\n  selectedTId: string = '';\n  serialvalue: any = \" \";\n  barcodevalue: any;\n  subscription: Subscription;\n  transporter1: any = Medicine2;\n  list: any = [];\n  mlist: any = [];\n  dlist: any = [];\n  tlist: any = [];\n  TMlist: any = [];\n  meds: any = [];\n  transection: any = Transection;\n  base;\n  call;\n  displayTable: boolean = false;\n  blockchain: any = [];\n  blockchain2: any = [];\n  status: any = [];\n  statusValue: any;\n  itemId: any = [];\n  medicineStatus;\n  mypublickey: any;\n  privateKey: any;\n  blockchainUrl: any = this.httpuser.blockchainUrl;\n\n  constructor(private httpuser: AuthService, private qrReader: QrCodeReader, private http: HttpClient) { }\n\n  ngOnInit() {\n    this.medicineStatus = \"Recived to Pharma\";\n    this.mypublickey = localStorage.getItem(\"publicKey\");\n    this.privateKey = localStorage.getItem(\"privateKey\");\n    this.transporterMedicineId(this.mypublickey);\n    this.allPharma();\n    this.allTransporter();\n  }\n\n  selectChangeHandler1(event: any) {\n    //update the ui\n    this.selectedWId = event.target.value;\n  }\n\n  selectChangeHandler2(event: any) {\n    //update the ui\n    this.selectedTId = event.target.value;\n  }\n\n  serialId(serialId) {\n    this.serialvalue = serialId;\n  }\n\n\n  onFileChange(event) {\n    const file = event.target.files[0];\n    this.subscription = this.qrReader.decode(file)\n      .subscribe(decodedString => {\n        this.barcodevalue = decodedString;\n        console.log(decodedString)\n      });\n  }\n\n\n  transporterMedicineId(id) {\n    return this.httpuser.transporterMedicine(id).subscribe(data => {\n      this.TMlist = data;\n      console.log(this.TMlist);\n    });\n  }\n\n  getByMedicineId(id) {\n    let that = this;\n    this.mypublickey = localStorage.getItem(\"publicKey\");\n    this.privateKey = localStorage.getItem(\"privateKey\");\n    this.httpuser.getMedicineId(id).subscribe(data => {\n      this.mlist = data;\n\n      //Register User on Blockchain ==>> if \"COMMITED\" :: register in db else Mail (ERROR Message)\t\n              this.displayTable = true;\n              this.transporter(this.mlist[0].serial, this.mlist[0].medicine, this.mlist[0].barcode, this.mlist[0].location, this.mlist[0].weight, this.mlist[0].Edate, this.mlist[0].Mdate,\n                this.mlist[0].MedicineId, this.mlist[0].role, this.mlist[0].time, this.mypublickey, this.medicineStatus);\n              alert(\"Package piked \");\n      // const Metadata = {\n      //   \"action\": \"recieveFromDistributer\",\n      //   \"payloaddata\": {\n      //     \"serialNumber\": this.mlist[0].serial,\n      //     \"status\": 4,\n      //     \"comment\": \"Delivered\"\n      //   },\n      //   \"private\": this.privateKey,\n      //   \"public\": this.mypublickey\n      // }\n\n      // const httpOptions = {\n      //   headers: new HttpHeaders({\n      //     'Content-Type': 'application/json'\n      //   })\n      // }\n\n      // return this.http.post(this.blockchainUrl, Metadata, httpOptions).subscribe(\n      //   (val) => {\n      //     console.log(\"POST call successful value returned in body\", val);\n      //     this.blockchain = val;\n      //     if (that.httpuser.IsJsonString(this.blockchain.response.body)) {\n      //       JSON.parse(this.blockchain.response.body).hasOwnProperty(\"data\");\n\n      //       this.status = JSON.parse(this.blockchain.response.body);\n      //       this.statusValue = this.status.data[0].status;\n      //       this.itemId = this.status.data[0].id;\n      //       if (this.statusValue == 'COMMITTED') {\n      //         this.displayTable = true;\n      //         this.transporter(this.mlist[0].serial, this.mlist[0].medicine, this.mlist[0].barcode, this.mlist[0].location, this.mlist[0].weight, this.mlist[0].Edate, this.mlist[0].Mdate,\n      //           this.mlist[0].MedicineId, this.mlist[0].role, this.mlist[0].time, this.mypublickey, this.medicineStatus);\n      //         alert(\"Package piked \");\n      //       }\n      //       else {\n      //         alert(\"Process not completed\");\n      //       }\n      //     }\n      //     else {\n\n      //       that.http.get(this.httpuser.batchUrl + \"/batch_statuses?\" + this.blockchain.id + \"&wait\").subscribe((val) => {\n      //         this.blockchain2 = val\n      //         if (that.httpuser.IsJsonString(this.blockchain2.body)) {\n      //           this.status = JSON.parse(this.blockchain2.body);\n      //           console.log('json value2', this.status.data[0].status);\n      //           this.statusValue = this.status.data[0].status;\n      //           this.itemId = this.status.data[0].id;\n      //           if (this.statusValue == 'COMMITTED') {\n      //             this.transporter(this.mlist[0].serial, this.mlist[0].medicine, this.mlist[0].barcode, this.mlist[0].location, this.mlist[0].weight, this.mlist[0].Edate, this.mlist[0].Mdate,\n      //               this.mlist[0].MedicineId, this.mlist[0].role, this.mlist[0].time, this.mypublickey, this.medicineStatus);\n      //             alert(\"Package piked \");\n      //           }\n      //           else {\n      //             alert('Request Rejected');\n      //           }\n      //         }\n      //       })\n      //     }\n      //     // }).catch(function (err) {\n      //     //   console.log(err.message);\n      //   });\n    });\n  }\n\n  allPharma() {\n    return this.httpuser.getallPharmaUser().subscribe(data => {\n      this.dlist = data;\n      console.log(this.dlist);\n    });\n  }\n\n  allTransporter() {\n    return this.httpuser.getallTransporterUser().subscribe(data => {\n      this.tlist = data;\n      console.log(this.tlist);\n    });\n  }\n\n\n  transporter(a, b, c, d, e, f, g, h, i, j, k, l) {\n    this.transporter1 = new Medicine2(a, b, c, d, e, f, g, h, i, j, k, l);\n    this.base = this.httpuser.transporter(this.transporter1);\n    this.call = this.base.subscribe(\n      data => {\n        alert(\"done\");\n\n      },\n      err => {\n        console.log(err);\n      },\n      () => {\n        console.log(\"Done\");\n      }\n    );\n  }\n\n  exporttocsv() {\n    var data = [];\n    var datarow = {};\n\n    if (Array.isArray(this.TMlist))\n      this.meds = this.TMlist;\n    else\n      this.meds = this.TMlist.split(',');\n\n    for (var i = 0; i <= this.meds.length; i++) {\n      console.log(\"meds==\" + this.meds[i]);\n      if (typeof this.meds[i] != \"undefined\") {\n        datarow = {\n          serial: this.meds[i].serial,\n          medicine: this.meds[i].medicine,\n          manufactured: this.meds[i].Mdate,\n          location: this.meds[i].location,\n          weight: this.meds[i].weight\n        };\n        data.push(datarow);\n      }\n    }\n\n    var options = {\n      fieldSeparator: ',',\n      quoteStrings: '\"',\n      decimalseparator: '.',\n      showLabels: true,\n      showTitle: true,\n      headers: [\"Serial Number\", \"Medicine code\", \"Manufactured Date\", \"Location\", \"Weight\"]\n    };\n\n    new Angular5Csv(data, 'Report1', options);\n\n    return true;\n  }\n\n\n\n  mTransection(serial: string, wholesalerId: string, transpoterId: string) {\n    console.log(serial, wholesalerId, transpoterId);\n    //Register User on Blockchain ==>> if \"COMMITED\" :: register in db else Mail (ERROR Message)\t\n\n    const Metadata = {\n      \"action\": \"sendToPharma\",\n      \"payloaddata\": {\n        \"serialNumber\": serial,\n        \"wholesaler\": {\n          \"address\": wholesalerId,\n          \"comment\": \"In Transaction\"\n        },\n        \"transporterid\": transpoterId\n      },\n      \"private\": this.privateKey,\n      \"public\": this.mypublickey\n    }\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n\n    var x = this.http.post(this.blockchainUrl, Metadata, httpOptions).subscribe(\n      (val) => {\n        this.blockchain = val;\n        console.log(\"POST call successful value returned in body\", val);\n        if (this.blockchain) {\n          this.transection = new Transection(serial, wholesalerId, transpoterId);\n          this.base = this.httpuser.medicineTransection(this.transection);\n          this.call = this.base.subscribe(\n            data => {\n              alert(\"done\");\n            },\n            err => {\n              console.log(err);\n            },\n            () => {\n              console.log(\"Done\");\n            }\n          );\n        }\n        else {\n          alert(\"Process not completed\");\n        }\n      });\n  }\n\n}\n","module.exports = \"table {\\n    width: 100%;\\n    \\n  }\\n\\n \\n#heading{\\n    background-color: rgb(18, 50, 190); \\n    color:white;\\n}\\n\\n \\n.pd{\\n  background: navy;\\n}\\n\\n \\ntd a {\\n  display:block;\\n  width:100%;\\n  background-clip: padding-box; \\n  border-radius: 5px;\\n  background-color: blue;\\n  color: white;\\n  border: 2px solid green;\\n}\\n\\n \\na {\\n  text-decoration: none !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2VuZC9zZW5kd2hvbGVzYWxlci9zZW5kd2hvbGVzYWxlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksV0FBVzs7RUFFYjs7O0FBR0Y7SUFDSSxrQ0FBa0M7SUFDbEMsV0FBVztBQUNmOzs7QUFDQTtFQUNFLGdCQUFnQjtBQUNsQjs7O0FBQ0E7RUFDRSxhQUFhO0VBQ2IsVUFBVTtFQUNWLDRCQUE0QjtFQUM1QixrQkFBa0I7RUFDbEIsc0JBQXNCO0VBQ3RCLFlBQVk7RUFDWix1QkFBdUI7QUFDekI7OztBQUNBO0VBQ0UsZ0NBQWdDO0FBQ2xDIiwiZmlsZSI6InNyYy9hcHAvc2VuZC9zZW5kd2hvbGVzYWxlci9zZW5kd2hvbGVzYWxlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIFxuICB9XG5cbiBcbiNoZWFkaW5ne1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigxOCwgNTAsIDE5MCk7IFxuICAgIGNvbG9yOndoaXRlO1xufVxuLnBke1xuICBiYWNrZ3JvdW5kOiBuYXZ5O1xufVxudGQgYSB7XG4gIGRpc3BsYXk6YmxvY2s7XG4gIHdpZHRoOjEwMCU7XG4gIGJhY2tncm91bmQtY2xpcDogcGFkZGluZy1ib3g7IFxuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIGJhY2tncm91bmQtY29sb3I6IGJsdWU7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgYm9yZGVyOiAycHggc29saWQgZ3JlZW47XG59XG5hIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lICFpbXBvcnRhbnQ7XG59Il19 */\"","module.exports = \"<app-dashboard></app-dashboard>\\n<div class=\\\"container\\\">\\n\\t<br>\\n\\t<br>\\n\\n\\t<form>\\n\\t\\n        <div class=\\\"row\\\"> \\n          <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n            <label>Packing Barcode</label>\\n\\t\\t\\t<input type=\\\"file\\\" style=\\\"margin-left:20px;\\\" accept=\\\"image/*\\\" (change)=\\\"onFileChange($event)\\\">\\n            <input #br type=\\\"text\\\" value=\\\"{{barcodevalue}}\\\" class=\\\"form-control required\\\" >\\n          </div>\\n        </div>\\n        \\n            \\n          </div>\\n            <div class=\\\"row text-right\\\">\\n             \\t\\t<div class=\\\"col\\\">\\n             \\t\\t\\t<div class=\\\"form-group\\\">\\n                  \\t\\t\\t<button type=\\\"reset\\\" (click)=\\\"getByMedicineId(br.value,4)\\\" class=\\\"btn btn-primary\\\">Accept</button>\\n\\t\\t\\t\\t\\t\\t\\t&nbsp; &nbsp; &nbsp;\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"reset\\\" (click)=\\\"getByMedicineId(br.value,5)\\\" class=\\\"btn btn-primary\\\">Reject</button>\\n\\t\\t\\t\\t\\t\\t\\t&nbsp; &nbsp; &nbsp;\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"reset\\\" (click)=\\\"getdetails(br.value,5)\\\" class=\\\"btn btn-primary\\\">Get Details</button>\\n                \\t\\t</div>\\n                </div>\\n             </div>\\n\\t</form>\\n\\n\\n  <div *ngIf=\\\"displayTable\\\" class=\\\"table-responsive\\\">\\n    <br>\\n    <table class=\\\"table table-striped table-dark table-hover text-center\\\">\\n      \\n        <thead class=\\\"theme-table\\\">\\n            <tr>            \\n              <th> Serial Number</th>\\n              <th>Medicine</th>\\n              <th>Manufacture Date</th>\\n              <th>Location</th>\\n              <th>Weight(Kg)</th>   \\n            </tr>\\n        </thead>\\n        <tbody>\\n          <tr>\\n            <td><a [routerLink]=\\\"['/medicine/details',mlist[0].serial]\\\">{{mlist[0].serial}}</a></td>\\n            <td>{{mlist[0].medicine}}</td>\\n            <td>{{mlist[0].Mdate}}</td>\\n            <td>{{mlist[0].location}}</td>\\n            <td>{{mlist[0].weight}}</td>\\n\\n          </tr>\\n         \\n        </tbody>\\n        <tfoot class=\\\"theme-table\\\"><tr><th></th><th></th><th></th><th></th><th></th></tr></tfoot>\\n      </table>\\n    </div>\\n\\n    <div  class=\\\"table-responsive\\\">\\n      <br>\\n      <table class=\\\"table table-striped table-dark table-hover text-center\\\">\\n        \\n          <thead class=\\\"theme-table\\\">\\n              <tr>            \\n                  <th> Serial Number</th>\\n                  <th>Medicine</th>\\n                  <th>Manufacture Date</th>\\n                  <th>Location</th>\\n                  <th>Weight</th>   \\n                  <th></th>             \\n              </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let list of TMlist\\\">\\n              <td><a [routerLink]=\\\"['/medicine/details',list.serial]\\\">{{list.serial}}</a></td>\\n              <td>{{list.medicine}}</td>\\n              <td>{{list.Mdate}}</td>\\n              <td>{{list.location}}</td>\\n              <td>{{list.weight}}</td>           \\n              <td><button type=\\\"button\\\"   (click)=\\\"serialId(list.serial)\\\"  class=\\\"btn btn-success\\\" data-toggle=\\\"modal\\\" data-target=\\\"#exampleModalCenter\\\">Send to Distributer</button></td>\\n              </tr>\\n           \\n          </tbody>\\n          <tfoot class=\\\"theme-table\\\"><tr><th></th><th></th><th></th><th></th><th></th><th></th></tr></tfoot>\\n        </table>\\n      </div>\\n    \\n\\n</div>\\n\\n\\n   <!-- Modal -->\\n   <div class=\\\"modal fade\\\" id=\\\"exampleModalCenter\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalCenterTitle\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLongTitle\\\">Medicine Transportation</h5>\\n          \\n        </div>\\n        <div class=\\\"modal-body\\\">\\n      \\n      <div class=\\\"row\\\">\\n            <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n                <label>Serial</label>\\n                <input #serial   type=\\\"text\\\" [(ngModel)]=\\\"serialvalue\\\" class=\\\"form-control required\\\">\\n              </div></div>           \\n          </div>   \\n           <div class=\\\"row\\\">          \\n                <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n                  <label>DistributerId</label>\\n           <select [(ngModel)]=\\\"wId1\\\" class=\\\"form-control\\\" >\\n                <option    *ngFor=\\\"let wid of dlist\\\" [value]=\\\"wid.publicKey\\\">{{wid.firstName}}</option>\\n                            </select>   \\n                </div></div>\\n            </div>       \\n    <div class=\\\"row\\\">\\n            <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n                <label>TransporterId</label>\\n          <select [(ngModel)]=\\\"tId1\\\" class=\\\"form-control\\\">\\n                <option  *ngFor=\\\"let wid of tlist\\\" [value]=\\\"wid.userId\\\">{{wid.firstName}}</option>\\n                            </select> \\n              </div></div>           \\n          </div> \\t\\t\\n  \\n            \\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" #completeModal  data-dismiss=\\\"modal\\\">Close</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"mTransection(serial.value,wId1,tId1)\\\">Send</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { QrCodeReader } from 'src/app/qr-code-reader.service';\nimport { Subscription } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Medicine2 } from 'src/app/admin/medicine/medicine-create/addmedicine2';\nimport { Transection } from 'src/app/admin/medicine/medicine-list/transection';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-sendwholesaler',\n  templateUrl: './sendwholesaler.component.html',\n  styleUrls: ['./sendwholesaler.component.css']\n})\nexport class SendwholesalerComponent implements OnInit {\n\n  selectedWId: string = '';\n  selectedTId: string = '';\n  serialvalue: any;\n  barcodevalue: any;\n  subscription: Subscription;\n  transporter1: any = Medicine2;\n  list: any = [];\n  mlist: any = [];\n  dlist: any = [];\n  tlist: any = [];\n  TMlist: any = [];\n  wid1: any = '';\n  tid1: any = '';\n  transection: any = Transection;\n  base;\n  call;\n  displayTable: boolean = false;\n  blockchain: any = [];\n  blockchain2: any = [];\n  status: any = [];\n  statusValue: any;\n  itemId: any = [];\n  medicineStatus;\n  mypublickey: any;\n  privateKey: any;\n  blockchainUrl: any = this.httpuser.blockchainUrl;\n\n  constructor(private route: Router, private httpuser: AuthService, private qrReader: QrCodeReader, private http: HttpClient) { }\n\n  ngOnInit() {\n    this.medicineStatus = \"Recived to Wholesaler\";\n    this.mypublickey = localStorage.getItem(\"publicKey\");\n    this.privateKey = localStorage.getItem(\"privateKey\");\n    this.transporterMedicineId(this.mypublickey);\n    this.allDistributer();\n    this.allTransporter();\n  }\n\n  selectChangeHandler1(event: any) {\n    //update the ui\n    this.selectedWId = event.target.value;\n  }\n\n  selectChangeHandler2(event: any) {\n    //update the ui\n    this.selectedTId = event.target.value;\n  }\n\n  serialId(serialId) {\n    this.serialvalue = serialId;\n  }\n\n\n  onFileChange(event) {\n    const file = event.target.files[0];\n    this.subscription = this.qrReader.decode(file)\n      .subscribe(decodedString => {\n        this.barcodevalue = decodedString;\n        console.log(decodedString)\n      });\n  }\n\n  transporterMedicineId(id) {\n    return this.httpuser.transporterMedicine(id).subscribe(data => {\n      this.TMlist = data;\n      console.log('medicne list', data);\n    });\n  }\n\n  getdetails(id, statusid) {\n    let that = this;\n    this.mypublickey = localStorage.getItem(\"publicKey\");\n    this.privateKey = localStorage.getItem(\"privateKey\");\n    this.httpuser.getMedicineId(id).subscribe(data => {\n      this.mlist = data;\n\n      this.route.navigate(['/medicinedetailsdashboard/' + this.mlist[0].serial]);\n    });\n  }\n\n  getByMedicineId(id, statusid) {\n\n    let that = this;\n    this.mypublickey = localStorage.getItem(\"publicKey\");\n    this.privateKey = localStorage.getItem(\"privateKey\");\n    this.httpuser.getMedicineId(id).subscribe(data => {\n      this.mlist = data;\n\n      //Register User on Blockchain ==>> if \"COMMITED\" :: register in db else Mail (ERROR Message)\t\n              this.displayTable = true;\n              if (statusid == 5) this.medicineStatus = \"Rejected by Wholesaler\";\n              this.transporter(this.mlist[0].serial, this.mlist[0].medicine, this.mlist[0].barcode, this.mlist[0].location, this.mlist[0].weight, this.mlist[0].Edate, this.mlist[0].Mdate,\n                this.mlist[0].MedicineId, this.mlist[0].role, this.mlist[0].time, this.mypublickey, this.medicineStatus);\n              if (statusid == 5)\n                alert(\"Package Returned \");\n              else\n                alert(\"Package piked \");\n      // const Metadata = {\n      //   \"action\": \"recieveFromManufecturer\",\n      //   \"payloaddata\": {\n      //     \"serialNumber\": this.mlist[0].serial,\n      //     \"status\": statusid,\n      //     \"comment\": \"Delivered\"\n      //   },\n      //   \"private\": this.privateKey,\n      //   \"public\": this.mypublickey\n      // }\n\n      // const httpOptions = {\n      //   headers: new HttpHeaders({\n      //     'Content-Type': 'application/json'\n      //   })\n      // }\n\n      // return this.http.post(this.blockchainUrl, Metadata, httpOptions).subscribe(\n      //   (val) => {\n\n      //     console.log(\"POST call successful value returned in body\", val);\n      //     this.blockchain = val;\n      //     if (that.httpuser.IsJsonString(this.blockchain.response.body)) {\n      //       JSON.parse(this.blockchain.response.body).hasOwnProperty(\"data\");\n\n      //       this.status = JSON.parse(this.blockchain.response.body);\n      //       this.statusValue = this.status.data[0].status;\n      //       this.itemId = this.status.data[0].id;\n      //       if (this.statusValue == 'COMMITTED') {\n      //         this.displayTable = true;\n      //         if (statusid == 5) this.medicineStatus = \"Rejected by Wholesaler\";\n      //         this.transporter(this.mlist[0].serial, this.mlist[0].medicine, this.mlist[0].barcode, this.mlist[0].location, this.mlist[0].weight, this.mlist[0].Edate, this.mlist[0].Mdate,\n      //           this.mlist[0].MedicineId, this.mlist[0].role, this.mlist[0].time, this.mypublickey, this.medicineStatus);\n      //         if (statusid == 5)\n      //           alert(\"Package Returned \");\n      //         else\n      //           alert(\"Package piked \");\n      //       }\n      //       else {\n      //         alert(\"Process not completed\");\n      //       }\n      //     }\n      //     else {\n\n      //       that.http.get(this.httpuser.batchUrl + \"/batch_statuses?\" + this.blockchain.id + \"&wait\").subscribe((val) => {\n      //         this.blockchain2 = val\n      //         if (that.httpuser.IsJsonString(this.blockchain2.body)) {\n      //           this.status = JSON.parse(this.blockchain2.body);\n      //           console.log('json value2', this.status.data[0].status);\n      //           this.statusValue = this.status.data[0].status;\n      //           this.itemId = this.status.data[0].id;\n      //           if (this.statusValue == 'COMMITTED') {\n      //             if (statusid == 5) this.medicineStatus = \"Rejected by Wholesaler\";\n      //             this.transporter(this.mlist[0].serial, this.mlist[0].medicine, this.mlist[0].barcode, this.mlist[0].location, this.mlist[0].weight, this.mlist[0].Edate, this.mlist[0].Mdate,\n      //               this.mlist[0].MedicineId, this.mlist[0].role, this.mlist[0].time, this.mypublickey, this.medicineStatus);\n      //             if (statusid == 5)\n      //               alert(\"Package Returned \");\n      //             else\n      //               alert(\"Package piked \");\n      //           }\n      //           else {\n      //             alert('Request Rejected');\n      //           }\n      //         }\n      //       })\n      //     }\n      //     // }).catch(function (err) {\n      //     //   console.log(err.message);\n      //   });\n    });\n  }\n\n  allDistributer() {\n    return this.httpuser.getallDistributerUser().subscribe(data => {\n      this.dlist = data;\n      console.log(this.dlist);\n    });\n  }\n\n  allTransporter() {\n    return this.httpuser.getallTransporterUser().subscribe(data => {\n      this.tlist = data;\n      console.log(this.tlist);\n    });\n  }\n\n\n  transporter(a, b, c, d, e, f, g, h, i, j, k, l) {\n    this.transporter1 = new Medicine2(a, b, c, d, e, f, g, h, i, j, k, l);\n    this.base = this.httpuser.transporter(this.transporter1);\n    this.call = this.base.subscribe(\n      data => {\n        alert(\"done\");\n\n      },\n      err => {\n        console.log(err);\n      },\n      () => {\n        console.log(\"Done\");\n      }\n    );\n  }\n\n\n  mTransection(serial: string, distributerId: string, transpoterId: string) {\n    let that = this;\n    //Register User on Blockchain ==>> if \"COMMITED\" :: register in db else Mail (ERROR Message)\t\n            this.transection = new Transection(serial, distributerId, transpoterId);\n            this.base = this.httpuser.medicineTransection(this.transection);\n            this.call = this.base.subscribe(data => {\n              alert('Request Accepted');\n            });\n    // const Metadata = {\n    //   \"action\": \"sendToDistributer\",\n    //   \"payloaddata\": {\n    //     \"serialNumber\": serial,\n    //     \"distributer\": {\n    //       \"address\": distributerId,\n    //       \"comment\": \"In Transaction\"\n    //     },\n    //     \"transporterid\": transpoterId\n    //   },\n    //   \"private\": this.privateKey,\n    //   \"public\": this.mypublickey\n    // }\n\n    // const httpOptions = {\n    //   headers: new HttpHeaders({\n    //     'Content-Type': 'application/json'\n    //   })\n    // };\n\n    // var x = this.http.post(this.blockchainUrl, Metadata, httpOptions).subscribe(\n    //   (val) => {\n\n    //     console.log(\"POST call successful value returned in body\", val);\n    //     this.blockchain = val;\n    //     if (that.httpuser.IsJsonString(this.blockchain.response.body)) {\n    //       JSON.parse(this.blockchain.response.body).hasOwnProperty(\"data\");\n\n    //       this.status = JSON.parse(this.blockchain.response.body);\n    //       this.statusValue = this.status.data[0].status;\n    //       this.itemId = this.status.data[0].id;\n    //       if (this.statusValue == 'COMMITTED') {\n    //         this.transection = new Transection(serial, distributerId, transpoterId);\n    //         this.base = this.httpuser.medicineTransection(this.transection);\n    //         this.call = this.base.subscribe(data => {\n    //           alert('Request Accepted');\n    //         });\n    //       }\n    //       else {\n    //         alert('Request Rejected');\n    //       }\n    //     } else {\n\n    //       that.http.get(this.httpuser.batchUrl + \"/batch_statuses?\" + this.blockchain.id + \"&wait\").subscribe((val) => {\n    //         this.blockchain2 = val\n    //         if (that.httpuser.IsJsonString(this.blockchain2.body)) {\n    //           this.status = JSON.parse(this.blockchain2.body);\n    //           console.log('json value2', this.status.data[0].status);\n    //           this.statusValue = this.status.data[0].status;\n    //           this.itemId = this.status.data[0].id;\n    //           if (this.statusValue == 'COMMITTED') {\n    //             this.transection = new Transection(serial, distributerId, transpoterId);\n    //             this.base = this.httpuser.medicineTransection(this.transection);\n    //             this.call = this.base.subscribe(data => {\n    //               alert('Request Accepted');\n    //             });\n    //           }\n    //           else {\n    //             alert('Request Rejected');\n    //           }\n    //         }\n    //       })\n    //     }\n    //     // }).catch(function (err) {\n    //     //   console.log(err.message);\n    //   });\n  }\n}","module.exports = \"table {\\n    width: 100%;\\n    \\n  }\\n\\n \\n#heading{\\n    background-color: rgb(18, 50, 190); \\n    color:white;\\n}\\n\\n \\n.pd{\\n  background: navy;\\n}\\n\\n \\ntd a {\\n  display:block;\\n  width:100%;\\n  background-clip: padding-box; \\n  border-radius: 5px;\\n  background-color: blue;\\n  color: white;\\n  border: 2px solid green;\\n}\\n\\n \\na {\\n  text-decoration: none !important;\\n}\\n\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2VuZC9zZW5kd2hvbGVzYWxlcmRhc2hib2FyZC9zZW5kd2hvbGVzYWxlcmRhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksV0FBVzs7RUFFYjs7O0FBR0Y7SUFDSSxrQ0FBa0M7SUFDbEMsV0FBVztBQUNmOzs7QUFDQTtFQUNFLGdCQUFnQjtBQUNsQjs7O0FBQ0E7RUFDRSxhQUFhO0VBQ2IsVUFBVTtFQUNWLDRCQUE0QjtFQUM1QixrQkFBa0I7RUFDbEIsc0JBQXNCO0VBQ3RCLFlBQVk7RUFDWix1QkFBdUI7QUFDekI7OztBQUNBO0VBQ0UsZ0NBQWdDO0FBQ2xDIiwiZmlsZSI6InNyYy9hcHAvc2VuZC9zZW5kd2hvbGVzYWxlcmRhc2hib2FyZC9zZW5kd2hvbGVzYWxlcmRhc2hib2FyZC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIFxuICB9XG5cbiBcbiNoZWFkaW5ne1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigxOCwgNTAsIDE5MCk7IFxuICAgIGNvbG9yOndoaXRlO1xufVxuLnBke1xuICBiYWNrZ3JvdW5kOiBuYXZ5O1xufVxudGQgYSB7XG4gIGRpc3BsYXk6YmxvY2s7XG4gIHdpZHRoOjEwMCU7XG4gIGJhY2tncm91bmQtY2xpcDogcGFkZGluZy1ib3g7IFxuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIGJhY2tncm91bmQtY29sb3I6IGJsdWU7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgYm9yZGVyOiAycHggc29saWQgZ3JlZW47XG59XG5hIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lICFpbXBvcnRhbnQ7XG59XG5cblxuIl19 */\"","module.exports = \"<app-dashboard></app-dashboard>\\n\\n\\t<br>\\n\\t<br>\\n\\t<div class=\\\"container\\\">\\n\\t<div class=\\\"row\\\">\\n<!-- \\n\\t<form>\\n\\t\\n        <div class=\\\"row\\\"> \\n          <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n            <label>Packing Barcode</label>\\n\\t\\t\\t<input type=\\\"file\\\" style=\\\"margin-left:20px;\\\" accept=\\\"image/*\\\" (change)=\\\"onFileChange($event)\\\">\\n            <input #br type=\\\"text\\\" value=\\\"{{barcodevalue}}\\\" class=\\\"form-control required\\\" >\\n          </div>\\n        </div>\\n        \\n            \\n          </div>\\n            <div class=\\\"row text-right\\\">\\n             \\t\\t<div class=\\\"col\\\">\\n             \\t\\t\\t<div class=\\\"form-group\\\">\\n                  \\t\\t\\t<button type=\\\"reset\\\" (click)=\\\"getByMedicineId(br.value)\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n                \\t\\t</div>\\n                </div>\\n             </div>\\n\\t</form> -->\\n\\n\\n  <div *ngIf=\\\"displayTable\\\"  class=\\\"col-xs-9 col-md-6 col-sm-6\\\">\\n    <br>\\n    <table class=\\\"table table-striped table-dark table-hover text-center\\\">\\n      \\n        <thead class=\\\"theme-table\\\">\\n            <tr>            \\n              <th> Serial Number</th>\\n              <th>Medicine</th>\\n              <th>Manufacture Date</th>\\n              <th>Location</th>\\n              <th>Weight(Kg)</th>   \\n            </tr>\\n        </thead>\\n        <tbody>\\n          <tr>\\n            <td><a [routerLink]=\\\"['/medicine/details',mlist[0].serial]\\\">{{mlist[0].serial}}</a></td>\\n            <td>{{mlist[0].medicine}}</td>\\n            <td>{{mlist[0].Mdate}}</td>\\n            <td>{{mlist[0].location}}</td>\\n            <td>{{mlist[0].weight}}</td>\\n\\n          </tr>\\n         \\n        </tbody>\\n        <tfoot class=\\\"theme-table\\\"><tr><th></th><th></th><th></th><th></th><th></th></tr></tfoot>\\n      </table>\\n    </div>\\n\\n\\t\\n\\t<div class=\\\"col-xs-9 col-md-6 col-sm-6\\\">\\n\\n      <table class=\\\"table table-striped table-dark table-hover text-center\\\">\\n        \\n          <thead class=\\\"theme-table\\\">\\n              <tr>            \\n                  <th> Serial Number</th>\\n                  <!-- <th>Medicine</th>\\n                  <th>Manufacture Date</th>\\n                  <th>Location</th>\\n                  <th>Weight</th>   \\n                  <th></th>              -->\\n              </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let list of TMlist\\\">\\n              <td><a [routerLink]=\\\"['/medicinedetailsdashboard',list.serial]\\\" style=\\\"color:blue\\\">{{list.serial}}</a></td>\\n              <!-- <td>{{list.medicine}}</td>\\n              <td>{{list.Mdate}}</td>\\n              <td>{{list.location}}</td>\\n              <td>{{list.weight}}</td>           \\n              <td><button type=\\\"button\\\"   (click)=\\\"serialId(list.serial)\\\"  class=\\\"btn btn-success\\\" data-toggle=\\\"modal\\\" data-target=\\\"#exampleModalCenter\\\">Send to Distributer</button></td> -->\\n              </tr>\\n           \\n          </tbody>\\n          <tfoot class=\\\"theme-table\\\"><tr><th></tr></tfoot>\\n        </table>\\n      </div>\\n\\t\\n\\t <div class=\\\"col-xs-9 col-md-6 col-sm-6\\\">\\n    <table class=\\\"table table-striped table-dark table-hover text-center\\\">\\n\\n      <thead class=\\\"theme-table\\\">\\n        <tr>\\n          <th>Serial</th>\\n\\t\\t  <th>Sent to</th>\\n\\t\\t  <th>Transporter</th>\\n\\t\\t  <th>Date</th>\\n          <!-- <th>Medicine code</th>\\n          <th>Manufactured Date</th>\\n          <th>Location</th>\\n          <th>Weight(Kg)</th> -->\\n          <!-- <th></th>\\n          <th></th> -->\\n        </tr>\\n      </thead>\\n      <tbody>\\n          <ng-container *ngFor=\\\"let tr of trans; let i = index\\\" >\\n        <tr *ngIf=\\\"tr.serial\\\">\\n          <td><a [routerLink]=\\\"['/medicinedetailsdashboard',tr.serial]\\\" style=\\\"color:blue\\\"> {{tr.serial}} </a></td>\\n\\t\\t  <td><p *ngFor=\\\"let u of dlist;\\\"><span *ngIf=\\\"u.userId==tr.wholesalerId || u.publicKey==tr.wholesalerId \\\">{{u.firstName}} {{u.lastName}}</span></p></td>\\n\\t\\t   <td><p *ngFor=\\\"let t of tlist;\\\"><span *ngIf=\\\"t.userId==tr.transporterId  || t.publicKey==tr.wholesalerId \\t\\\">{{t.firstName}} {{t.lastName}}</span></p></td>\\n\\t\\t   <td><span *ngIf=\\\"tr.edate\\\">{{tr.edate | date: 'dd/MM/yyyy h:mm:ss a'}}</span></td>\\n\\t\\t   \\n        </tr>\\n          </ng-container>\\n      </tbody>\\n      \\n    </table>\\n\\t </div>\\n\\t \\n\\t \\n\\t \\t <div class=\\\"col-xs-9 col-md-6 col-sm-6\\\">\\n    <table class=\\\"table table-striped table-dark table-hover text-center\\\">\\n\\n      <thead class=\\\"theme-table\\\">\\n        <tr>\\n          <th>Serial</th>\\n\\t\\t  <th>Sent By</th>\\n\\t\\t  <th>Transporter</th>\\n\\t\\t  <th>Date</th>\\n          <!-- <th>Medicine code</th>\\n          <th>Manufactured Date</th>\\n          <th>Location</th>\\n          <th>Weight(Kg)</th> -->\\n          <!-- <th></th>\\n          <th></th> -->\\n        </tr>\\n      </thead>\\n      <tbody>\\n          <ng-container *ngFor=\\\"let tr of recievedtrans; let i = index\\\" >\\n        <tr *ngIf=\\\"tr.serial\\\">\\n          <td><a [routerLink]=\\\"['/medicinedetailsdashboard',tr.serial]\\\" style=\\\"color:blue\\\"> {{tr.serial}} </a></td>\\n\\t\\t  <td><p *ngFor=\\\"let u of malist;\\\"><span *ngIf=\\\"u.userId==tr.senderId || u.publicKey==tr.wholesalerId \\\">{{u.firstName}} {{u.lastName}}</span></p></td>\\n\\t\\t   <td><p *ngFor=\\\"let t of tlist;\\\"><span *ngIf=\\\"t.userId==tr.transporterId  || t.publicKey==tr.wholesalerId \\t\\\">{{t.firstName}} {{t.lastName}}</span></p></td>\\n\\t\\t   <td><span *ngIf=\\\"tr.edate\\\">{{tr.edate | date: 'dd/MM/yyyy h:mm:ss a'}}</span></td>\\n\\t\\t   \\n        </tr>\\n          </ng-container>\\n      </tbody>\\n      \\n    </table>\\n\\t </div>\\n\\t \\n\\n     \\n    \\n\\n</div>\\n</div>\\n\\n   <!-- Modal -->\\n   <!-- <div class=\\\"modal fade\\\" id=\\\"exampleModalCenter\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalCenterTitle\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLongTitle\\\">Medicine Transportation</h5>\\n          \\n        </div>\\n        <div class=\\\"modal-body\\\">\\n      \\n      <div class=\\\"row\\\">\\n            <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n                <label>Serial</label>\\n                <input #serial   type=\\\"text\\\" [(ngModel)]=\\\"serialvalue\\\" class=\\\"form-control required\\\">\\n              </div></div>           \\n          </div>   \\n           <div class=\\\"row\\\">          \\n                <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n                  <label>DistributerId</label>\\n           <select [(ngModel)]=\\\"wId1\\\" class=\\\"form-control\\\" >\\n                <option    *ngFor=\\\"let wid of dlist\\\" [value]=\\\"wid.publicKey\\\">{{wid.firstName}}</option>\\n                            </select>   \\n                </div></div>\\n            </div>       \\n    <div class=\\\"row\\\">\\n            <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n                <label>TransporterId</label>\\n          <select [(ngModel)]=\\\"tId1\\\" class=\\\"form-control\\\">\\n                <option  *ngFor=\\\"let wid of tlist\\\" [value]=\\\"wid.userId\\\">{{wid.firstName}}</option>\\n                            </select> \\n              </div></div>           \\n          </div> \\t\\t\\n  \\n            \\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" #completeModal  data-dismiss=\\\"modal\\\">Close</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"mTransection(serial.value,wId1,tId1)\\\">Send</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div> -->\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { QrCodeReader } from 'src/app/qr-code-reader.service';\nimport { Subscription } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Medicine2 } from 'src/app/admin/medicine/medicine-create/addmedicine2';\nimport { Transection } from 'src/app/admin/medicine/medicine-list/transection';\n@Component({\n  selector: 'app-sendwholesalerdashboard',\n  templateUrl: './sendwholesalerdashboard.component.html',\n  styleUrls: ['./sendwholesalerdashboard.component.css']\n})\nexport class SendwholesalerdashboardComponent implements OnInit {\n \n  selectedWId: string = '';\n  selectedTId: string = '';\n  serialvalue:any;\n  barcodevalue:any;\n  subscription: Subscription;\ntransporter1: any = Medicine2;\nlist: any = [];\ntrans: any = [];\nrecievedtrans: any = [];\nmlist:any=[];malist:any=[];\ndlist:any=[];\ntlist:any=[];\nTMlist:any=[];\nwid1:any='';\ntid1:any='';\ntransection:any=Transection;\nbase;\ncall;\ndisplayTable:boolean=false;\nblockchain:any=[];\nblockchain2:any=[];\nstatus:any=[];\nstatusValue:any;\nitemId:any=[];\nmedicineStatus;\n  mypublickey:any;\n  privateKey:any;\n  blockchainUrl:any = this.httpuser.blockchainUrl;\n\n  constructor(private httpuser: AuthService,private qrReader: QrCodeReader,private http: HttpClient) { }\n\n  ngOnInit() {\n    this.medicineStatus=\"Recived to Wholesaler\";\n    this.mypublickey =localStorage.getItem(\"publicKey\");\n    this.privateKey =localStorage.getItem(\"privateKey\"); \n    this.transporterMedicineId(this.mypublickey);\n    this.allDistributer();\n    this.allTransporter();\n\tthis.allManufacture();\n\tthis.medicinetransactions();\n\tthis.medicinerecievetransactions();\n  }\n \n   medicinetransactions() {\n   \n      return this.httpuser.getMedicineTransection().subscribe((data) => {\n        this.trans = data;\n\t\t\n\t\t\n        console.log(\"All Medicine trans\",this.trans);\n      });\n\n    \n  }\n  allManufacture() {\n    return this.httpuser.getallManufactureUser().subscribe(data => {\n      this.malist = data;\n    });\n  }\n\n  medicinerecievetransactions() {\n   \n      return this.httpuser.getRecieveMedicineTransection().subscribe((data) => {\n        this.recievedtrans = data;\n\t\t\n\t\t\n        console.log(\"All Medicine trans\",this.trans);\n      });\n\n    \n  }\n  \n  selectChangeHandler1 (event: any) {\n    //update the ui\n    this.selectedWId = event.target.value;\n  }\n\n  selectChangeHandler2 (event: any) {\n    //update the ui\n    this.selectedTId = event.target.value;\n  }\n\n  serialId(serialId){\n    this.serialvalue=serialId;\n\t  this.serialvalue=serialId;  \n  }\n  \n\n  onFileChange(event) {\n    const file = event.target.files[0];\n    this.subscription = this.qrReader.decode(file)\n      .subscribe(decodedString =>{\n    this.barcodevalue= decodedString;\n    console.log(decodedString)\n    });\n  }\n\n  transporterMedicineId(id) {\n    return this.httpuser.transporterMedicine(id).subscribe(data => {\n      this.TMlist = data; \nconsole.log('medicne list',data);\t  \n    });\n  }\n\n  getByMedicineId(id) {  \n    \n    let that = this;\n    this.mypublickey =localStorage.getItem(\"publicKey\");\n    this.privateKey =localStorage.getItem(\"privateKey\");  \n    this.httpuser.getMedicineId(id).subscribe(data => {\n   this.mlist=data;\n\n   //Register User on Blockchain ==>> if \"COMMITED\" :: register in db else Mail (ERROR Message)\t\n\t\t\t     this.displayTable=true; \n   this.transporter(this.mlist[0].serial,this.mlist[0].medicine,this.mlist[0].barcode,this.mlist[0].location,this.mlist[0].weight,this.mlist[0].Edate,this.mlist[0].Mdate,\n    this.mlist[0].MedicineId,this.mlist[0].role,this.mlist[0].time,this.mypublickey,this.medicineStatus);\n   alert(\"Package piked \");\n//  const Metadata = {\n//   \"action\": \"recieveFromManufecturer\",\n//   \"payloaddata\": {\n//       \"serialNumber\": this.mlist[0].serial,\n//       \"status\": 4,\n//       \"comment\": \"Delivered\"\n//   },\n//   \"private\":this.privateKey,\n//   \"public\": this.mypublickey\n//     }\t    \n\n// const httpOptions = {\n// headers: new HttpHeaders({\n//   'Content-Type': 'application/json'\n// })\n// }\n\n//     return this.http.post(this.blockchainUrl, Metadata,httpOptions).subscribe(\n//  (val) => {\t\n\n//   console.log(\"POST call successful value returned in body\", val);\n//   this.blockchain = val;\n//   if (that.httpuser.IsJsonString(this.blockchain.response.body)) {\n//     JSON.parse(this.blockchain.response.body).hasOwnProperty(\"data\");\n\n//     this.status = JSON.parse(this.blockchain.response.body);            \n//     this.statusValue = this.status.data[0].status;\n//     this.itemId = this.status.data[0].id;\n//     if (this.statusValue == 'COMMITTED') {   \n//    this.displayTable=true; \n//    this.transporter(this.mlist[0].serial,this.mlist[0].medicine,this.mlist[0].barcode,this.mlist[0].location,this.mlist[0].weight,this.mlist[0].Edate,this.mlist[0].Mdate,\n//     this.mlist[0].MedicineId,this.mlist[0].role,this.mlist[0].time,this.mypublickey,this.medicineStatus);\n//    alert(\"Package piked \");\n//   }\n//   else{\n// \t  alert(\"Process not completed\");\n//   }\n//   }\n//   else {\n\n//     that.http.get(this.httpuser.batchUrl +\"/batch_statuses?\" + this.blockchain.id + \"&wait\").subscribe((val) => {\n//       this.blockchain2 =val\n//       if (that.httpuser.IsJsonString(this.blockchain2.body)) {\n//         this.status = JSON.parse(this.blockchain2.body);\n//         console.log('json value2', this.status.data[0].status);\n//         this.statusValue = this.status.data[0].status;\n//         this.itemId = this.status.data[0].id;\n//         if (this.statusValue == 'COMMITTED') {\n//           this.transporter(this.mlist[0].serial,this.mlist[0].medicine,this.mlist[0].barcode,this.mlist[0].location,this.mlist[0].weight,this.mlist[0].Edate,this.mlist[0].Mdate,\n//             this.mlist[0].MedicineId,this.mlist[0].role,this.mlist[0].time,this.mypublickey,this.medicineStatus);\n//             alert(\"Package piked \");\n//         }\n//         else {\n//           alert('Request Rejected');\n//         }\n//       }\n//     })\n//   }\n// // }).catch(function (err) {\n// //   console.log(err.message);\n// });\n});\n}\n\nallDistributer() {\n  return this.httpuser.getallDistributerUser().subscribe(data => {\n    this.dlist = data; \nconsole.log(this.dlist);\t  \n  });\n}\n\nallTransporter() {\n  return this.httpuser.getallTransporterUser().subscribe(data => {\n    this.tlist = data; \nconsole.log(this.tlist);\t  \n  });\n}\n\n\ntransporter(a,b,c,d,e,f,g,h,i,j,k,l){  \t  \n  this.transporter1 = new Medicine2(a,b,c,d,e,f,g,h,i,j,k,l);\n   this.base = this.httpuser.transporter(this.transporter1);\n  this.call = this.base.subscribe(\n    data => {       \n      alert(\"done\");\n      \n    },\n    err => {\n      console.log(err);\n    },\n    () => {\n      console.log(\"Done\");\n    }\n  );\n}\n\n\nmTransection(serial:string,distributerId:string,transpoterId:string) {  \n  let that = this; \n  //Register User on Blockchain ==>> if \"COMMITED\" :: register in db else Mail (ERROR Message)\t\n\t  this.transection = new Transection(serial,distributerId,transpoterId);\n    this.base = this.httpuser.medicineTransection(this.transection);\n    this.call = this.base.subscribe(data => {              \n             alert('Request Accepted');          \n     });\t\t  \n//  const Metadata = {\n// \t\t\t  \"action\": \"sendToDistributer\",\n//     \"payloaddata\": {\n//         \"serialNumber\": serial,\n//         \"distributer\": {\n//             \"address\": distributerId,\n//             \"comment\": \"In Transaction\"\n//         },\n//         \"transporterid\": transpoterId\n//     },\n// \t\t\t\t\"private\":this.privateKey,\n// \t\t\t\t\"public\": this.mypublickey\n// \t\t\t\t\t}\t    \n\t\n// \tconst httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json'\n//       })\n//     };\n\t\n//             var x = this.http.post(this.blockchainUrl, Metadata,httpOptions).subscribe(\n//        (val) => {\t\n\t  \n// console.log(\"POST call successful value returned in body\", val);\n// this.blockchain = val;\n// if (that.httpuser.IsJsonString(this.blockchain.response.body)) {\n//   JSON.parse(this.blockchain.response.body).hasOwnProperty(\"data\");\n\n//   this.status = JSON.parse(this.blockchain.response.body);            \n//   this.statusValue = this.status.data[0].status;\n//   this.itemId = this.status.data[0].id;\n//   if (this.statusValue == 'COMMITTED') {\n//     this.transection = new Transection(serial,distributerId,transpoterId);\n//     this.base = this.httpuser.medicineTransection(this.transection);\n//     this.call = this.base.subscribe(data => {        \n//         alert('Request Accepted');       \n//       });\n//     }\n//     else {\n//       alert('Request Rejected');\n//     }\n//   } else {\n\n//     that.http.get(this.httpuser.batchUrl +\"/batch_statuses?\" + this.blockchain.id + \"&wait\").subscribe((val) => {\n//       this.blockchain2 =val\n//       if (that.httpuser.IsJsonString(this.blockchain2.body)) {\n//         this.status = JSON.parse(this.blockchain2.body);\n//         console.log('json value2', this.status.data[0].status);\n//         this.statusValue = this.status.data[0].status;\n//         this.itemId = this.status.data[0].id;\n//         if (this.statusValue == 'COMMITTED') {\n//           this.transection = new Transection(serial,distributerId,transpoterId);\n//           this.base = this.httpuser.medicineTransection(this.transection);\n//           this.call = this.base.subscribe(data => {              \n//              alert('Request Accepted');          \n//           });\n//         }\n//         else {\n//           alert('Request Rejected');\n//         }\n//       }\n//     })\n//   }\n// // }).catch(function (err) {\n// //   console.log(err.message);\n// });\n}\n\n}\n","module.exports = \"table {\\n    width: 100%;\\n    \\n  }\\n\\n \\n#heading{\\n    background-color: rgb(18, 50, 190); \\n    color:white;\\n}\\n\\n \\n.pd{\\n  background: navy;\\n}\\n\\n \\ntd a {\\n  display:block;\\n  width:100%;\\n  background-clip: padding-box; \\n  border-radius: 5px;\\n  background-color: blue;\\n  color: white;\\n  border: 2px solid green;\\n}\\n\\n \\na {\\n  text-decoration: none !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2VuZC9zZW5kd2hvbGVzYWxlcnJlcG9ydC9zZW5kd2hvbGVzYWxlcnJlcG9ydC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksV0FBVzs7RUFFYjs7O0FBR0Y7SUFDSSxrQ0FBa0M7SUFDbEMsV0FBVztBQUNmOzs7QUFDQTtFQUNFLGdCQUFnQjtBQUNsQjs7O0FBQ0E7RUFDRSxhQUFhO0VBQ2IsVUFBVTtFQUNWLDRCQUE0QjtFQUM1QixrQkFBa0I7RUFDbEIsc0JBQXNCO0VBQ3RCLFlBQVk7RUFDWix1QkFBdUI7QUFDekI7OztBQUNBO0VBQ0UsZ0NBQWdDO0FBQ2xDIiwiZmlsZSI6InNyYy9hcHAvc2VuZC9zZW5kd2hvbGVzYWxlcnJlcG9ydC9zZW5kd2hvbGVzYWxlcnJlcG9ydC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIFxuICB9XG5cbiBcbiNoZWFkaW5ne1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigxOCwgNTAsIDE5MCk7IFxuICAgIGNvbG9yOndoaXRlO1xufVxuLnBke1xuICBiYWNrZ3JvdW5kOiBuYXZ5O1xufVxudGQgYSB7XG4gIGRpc3BsYXk6YmxvY2s7XG4gIHdpZHRoOjEwMCU7XG4gIGJhY2tncm91bmQtY2xpcDogcGFkZGluZy1ib3g7IFxuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIGJhY2tncm91bmQtY29sb3I6IGJsdWU7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgYm9yZGVyOiAycHggc29saWQgZ3JlZW47XG59XG5hIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lICFpbXBvcnRhbnQ7XG59Il19 */\"","module.exports = \"<app-dashboard></app-dashboard>\\n<div class=\\\"container\\\">\\n\\t<br>\\n\\t<br>\\n\\n\\n\\n    <div  class=\\\"table-responsive\\\">\\n      <br>\\n      <table class=\\\"table table-striped table-dark table-hover text-center\\\">\\n        \\n          <thead class=\\\"theme-table\\\">\\n\\t\\t\\t<tr>\\n\\t\\t\\t<th colspan=\\\"4\\\"></th>\\n\\t\\t\\t<th><button type=\\\"button\\\"   (click)=\\\"exporttocsv()\\\"  class=\\\"btn btn-primary\\\" >Export as CSV</button></th>\\n\\t\\t\\t</tr>\\n              <tr>            \\n                  <th> Serial Number</th>\\n                  <th>Medicine</th>\\n                  <th>Manufacture Date</th>\\n                  <th>Location</th>\\n                  <th>Weight(Kg)</th>      \\n              </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let list of TMlist\\\">\\n              <td><a [routerLink]=\\\"['/medicine/details',list.serial]\\\">{{list.serial}}</a></td>\\n              <td>{{list.medicine}}</td>\\n              <td>{{list.Mdate}}</td>\\n              <td>{{list.location}}</td>\\n              <td>{{list.weight}}</td>           \\n              </tr>\\n           \\n          </tbody>\\n          <tfoot class=\\\"theme-table\\\">\\n\\t\\t  \\t\\t\\t<tr>\\n\\t\\t\\t<th colspan=\\\"4\\\"></th>\\n\\t\\t\\t<th><button type=\\\"button\\\"   (click)=\\\"exporttocsv()\\\"  class=\\\"btn btn-primary\\\" >Export as CSV</button></th>\\n\\t\\t\\t</tr>\\n\\n\\t\\t  </tfoot>\\n        </table>\\n      </div>\\n    \\n\\n</div>\\n\\n\\n   <!-- Modal -->\\n   <div class=\\\"modal fade\\\" id=\\\"exampleModalCenter\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalCenterTitle\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLongTitle\\\">Medicine Transportation</h5>\\n          \\n        </div>\\n        <div class=\\\"modal-body\\\">\\n      \\n      <div class=\\\"row\\\">\\n            <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n                <label>Serial</label>\\n                <input #serial   type=\\\"text\\\" [(ngModel)]=\\\"serialvalue\\\" class=\\\"form-control required\\\">\\n              </div></div>           \\n          </div>   \\n           <div class=\\\"row\\\">          \\n                <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n                  <label>DistributerId</label>\\n           <select [(ngModel)]=\\\"wId1\\\" class=\\\"form-control\\\" >\\n                <option    *ngFor=\\\"let wid of dlist\\\" [value]=\\\"wid.publicKey\\\">{{wid.firstName}}</option>\\n                            </select>   \\n                </div></div>\\n            </div>       \\n    <div class=\\\"row\\\">\\n            <div class=\\\"col\\\"><div class=\\\"form-group\\\">\\n                <label>TransporterId</label>\\n          <select [(ngModel)]=\\\"tId1\\\" class=\\\"form-control\\\">\\n                <option  *ngFor=\\\"let wid of tlist\\\" [value]=\\\"wid.userId\\\">{{wid.firstName}}</option>\\n                            </select> \\n              </div></div>           \\n          </div> \\t\\t\\n  \\n            \\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" #completeModal  data-dismiss=\\\"modal\\\">Close</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"mTransection(serial.value,wId1,tId1)\\\">Send</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { QrCodeReader } from 'src/app/qr-code-reader.service';\nimport { Subscription } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Medicine2 } from 'src/app/admin/medicine/medicine-create/addmedicine2';\nimport { Transection } from 'src/app/admin/medicine/medicine-list/transection';\nimport { Angular5Csv } from 'angular5-csv/dist/Angular5-csv';\n\n@Component({\n  selector: 'app-sendwholesalerreport',\n  templateUrl: './sendwholesalerreport.component.html',\n  styleUrls: ['./sendwholesalerreport.component.css']\n})\nexport class SendwholesalerreportComponent implements OnInit {\n  \n  selectedWId: string = '';\n  selectedTId: string = '';\n  serialvalue:any;\n  barcodevalue:any;\n  subscription: Subscription;\ntransporter1: any = Medicine2;\nlist: any = [];\nmlist:any=[];\ndlist:any=[];\ntlist:any=[];\nTMlist:any=[];\nmeds:any=[];\nwid1:any='';\ntid1:any='';\ntransection:any=Transection;\nbase;\ncall;\ndisplayTable:boolean=false;\nblockchain:any=[];\nblockchain2:any=[];\nstatus:any=[];\nstatusValue:any;\nitemId:any=[];\nmedicineStatus;\n  mypublickey:any;\n  privateKey:any;\n  blockchainUrl:any = this.httpuser.blockchainUrl;\n\n  constructor(private httpuser: AuthService,private qrReader: QrCodeReader,private http: HttpClient) { }\n\n  ngOnInit() {\n    this.medicineStatus=\"Recived to Wholesaler\";\n    this.mypublickey =localStorage.getItem(\"publicKey\");\n    this.privateKey =localStorage.getItem(\"privateKey\"); \n    this.transporterMedicineId(this.mypublickey);\n    this.allDistributer();\n    this.allTransporter();\n  }\n \n  selectChangeHandler1 (event: any) {\n    //update the ui\n    this.selectedWId = event.target.value;\n  }\n\n  selectChangeHandler2 (event: any) {\n    //update the ui\n    this.selectedTId = event.target.value;\n  }\n\n  serialId(serialId){\n\t  this.serialvalue=serialId;  \n  }\n  \n\n  onFileChange(event) {\n    const file = event.target.files[0];\n    this.subscription = this.qrReader.decode(file)\n      .subscribe(decodedString =>{\n    this.barcodevalue= decodedString;\n    console.log(decodedString)\n    });\n  }\n\n  transporterMedicineId(id) {\n    return this.httpuser.transporterMedicine(id).subscribe(data => {\n      this.TMlist = data; \nconsole.log('medicne list',data);\t  \n    });\n  }\n\n  getByMedicineId(id) {  \n    \n    let that = this;\n    this.mypublickey =localStorage.getItem(\"publicKey\");\n    this.privateKey =localStorage.getItem(\"privateKey\");  \n    this.httpuser.getMedicineId(id).subscribe(data => {\n   this.mlist=data;\n\n   //Register User on Blockchain ==>> if \"COMMITED\" :: register in db else Mail (ERROR Message)\t\n\t\t\t     this.displayTable=true; \n   this.transporter(this.mlist[0].serial,this.mlist[0].medicine,this.mlist[0].barcode,this.mlist[0].location,this.mlist[0].weight,this.mlist[0].Edate,this.mlist[0].Mdate,\n    this.mlist[0].MedicineId,this.mlist[0].role,this.mlist[0].time,this.mypublickey,this.medicineStatus);\n   alert(\"Package piked \");\n\n//  const Metadata = {\n//   \"action\": \"recieveFromManufecturer\",\n//   \"payloaddata\": {\n//       \"serialNumber\": this.mlist[0].serial,\n//       \"status\": 4,\n//       \"comment\": \"Delivered\"\n//   },\n//   \"private\":this.privateKey,\n//   \"public\": this.mypublickey\n//     }\t    \n\n// const httpOptions = {\n// headers: new HttpHeaders({\n//   'Content-Type': 'application/json'\n// })\n// }\n\n//     return this.http.post(this.blockchainUrl, Metadata,httpOptions).subscribe(\n//  (val) => {\t\n\n//   console.log(\"POST call successful value returned in body\", val);\n//   this.blockchain = val;\n//   if (that.httpuser.IsJsonString(this.blockchain.response.body)) {\n//     JSON.parse(this.blockchain.response.body).hasOwnProperty(\"data\");\n\n//     this.status = JSON.parse(this.blockchain.response.body);            \n//     this.statusValue = this.status.data[0].status;\n//     this.itemId = this.status.data[0].id;\n//     if (this.statusValue == 'COMMITTED') {   \n//    this.displayTable=true; \n//    this.transporter(this.mlist[0].serial,this.mlist[0].medicine,this.mlist[0].barcode,this.mlist[0].location,this.mlist[0].weight,this.mlist[0].Edate,this.mlist[0].Mdate,\n//     this.mlist[0].MedicineId,this.mlist[0].role,this.mlist[0].time,this.mypublickey,this.medicineStatus);\n//    alert(\"Package piked \");\n//   }\n//   else{\n// \t  alert(\"Process not completed\");\n//   }\n//   }\n//   else {\n\n//     that.http.get(this.httpuser.batchUrl +\"/batch_statuses?\" + this.blockchain.id + \"&wait\").subscribe((val) => {\n//       this.blockchain2 =val\n//       if (that.httpuser.IsJsonString(this.blockchain2.body)) {\n//         this.status = JSON.parse(this.blockchain2.body);\n//         console.log('json value2', this.status.data[0].status);\n//         this.statusValue = this.status.data[0].status;\n//         this.itemId = this.status.data[0].id;\n//         if (this.statusValue == 'COMMITTED') {\n//           this.transporter(this.mlist[0].serial,this.mlist[0].medicine,this.mlist[0].barcode,this.mlist[0].location,this.mlist[0].weight,this.mlist[0].Edate,this.mlist[0].Mdate,\n//             this.mlist[0].MedicineId,this.mlist[0].role,this.mlist[0].time,this.mypublickey,this.medicineStatus);\n//             alert(\"Package piked \");\n//         }\n//         else {\n//           alert('Request Rejected');\n//         }\n//       }\n//     })\n//   }\n// // }).catch(function (err) {\n// //   console.log(err.message);\n// });\n});\n}\n\nallDistributer() {\n  return this.httpuser.getallDistributerUser().subscribe(data => {\n    this.dlist = data; \nconsole.log(this.dlist);\t  \n  });\n}\n\nallTransporter() {\n  return this.httpuser.getallTransporterUser().subscribe(data => {\n    this.tlist = data; \nconsole.log(this.tlist);\t  \n  });\n}\n\n\ntransporter(a,b,c,d,e,f,g,h,i,j,k,l){  \t  \n  this.transporter1 = new Medicine2(a,b,c,d,e,f,g,h,i,j,k,l);\n   this.base = this.httpuser.transporter(this.transporter1);\n  this.call = this.base.subscribe(\n    data => {       \n      alert(\"done\");\n      \n    },\n    err => {\n      console.log(err);\n    },\n    () => {\n      console.log(\"Done\");\n    }\n  );\n}\n\nexporttocsv()\n  {\n\t  var data = [];\n\t  var  datarow = {};\n\t\n\tif(Array.isArray(this.TMlist))\n\t\t\tthis.meds = this.TMlist;\n\t\telse\n\t\t\tthis.meds = this.TMlist.split(',');\n\t\t\n\t  for(var i=0;i<=this.meds.length;i++)\n\t  {\n\t\t  console.log(\"meds==\" + this.meds[i]);\n\t\t  if(typeof this.meds[i] != \"undefined\")\n\t\t  {\n\t\t\tdatarow = {\n\t\t\tserial:this.meds[i].serial,\n\t\t\tmedicine: this.meds[i].medicine,\n\t\t\tmanufactured: this.meds[i].Mdate,\n\t\t\tlocation: this.meds[i].location,\n\t\t\tweight: this.meds[i].weight\n\t\t\t};\n\t\t\tdata.push(datarow);\n\t\t  }\n\t  }\n\n\t\tvar options = {\n\t\tfieldSeparator: ',',\n\t\tquoteStrings: '\"',\n\t\tdecimalseparator: '.',\n\t\tshowLabels: true,\n\t\tshowTitle: true,\n\t\theaders: [\"Serial Number\", \"Medicine code\", \"Manufactured Date\",\"Location\",\"Weight\"]\n\t\t};\n\n\t\tnew Angular5Csv(data, 'Report1',options);\n\n\t\treturn true;\n  }\n\n\n\nmTransection(serial:string,distributerId:string,transpoterId:string) {  \n  let that = this; \n  //Register User on Blockchain ==>> if \"COMMITED\" :: register in db else Mail (ERROR Message)\t\n\t\t\t  \n//  const Metadata = {\n// \t\t\t  \"action\": \"sendToDistributer\",\n//     \"payloaddata\": {\n//         \"serialNumber\": serial,\n//         \"distributer\": {\n//             \"address\": distributerId,\n//             \"comment\": \"In Transaction\"\n//         },\n//         \"transporterid\": transpoterId\n//     },\n// \t\t\t\t\"private\":this.privateKey,\n// \t\t\t\t\"public\": this.mypublickey\n// \t\t\t\t\t}\t    \n\t\n// \tconst httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json'\n//       })\n//     };\n\t\n//             var x = this.http.post(this.blockchainUrl, Metadata,httpOptions).subscribe(\n//        (val) => {\t\n\t  \n// console.log(\"POST call successful value returned in body\", val);\n// this.blockchain = val;\n// if (that.httpuser.IsJsonString(this.blockchain.response.body)) {\n//   JSON.parse(this.blockchain.response.body).hasOwnProperty(\"data\");\n\n//   this.status = JSON.parse(this.blockchain.response.body);            \n//   this.statusValue = this.status.data[0].status;\n//   this.itemId = this.status.data[0].id;\n//   if (this.statusValue == 'COMMITTED') {\n    this.transection = new Transection(serial,distributerId,transpoterId);\n    this.base = this.httpuser.medicineTransection(this.transection);\n    this.call = this.base.subscribe(data => {        \n        alert('Request Accepted');       \n      });\n//     }\n//     else {\n//       alert('Request Rejected');\n//     }\n//   } else {\n\n//     that.http.get(this.httpuser.batchUrl +\"/batch_statuses?\" + this.blockchain.id + \"&wait\").subscribe((val) => {\n//       this.blockchain2 =val\n//       if (that.httpuser.IsJsonString(this.blockchain2.body)) {\n//         this.status = JSON.parse(this.blockchain2.body);\n//         console.log('json value2', this.status.data[0].status);\n//         this.statusValue = this.status.data[0].status;\n//         this.itemId = this.status.data[0].id;\n//         if (this.statusValue == 'COMMITTED') {\n//           this.transection = new Transection(serial,distributerId,transpoterId);\n//           this.base = this.httpuser.medicineTransection(this.transection);\n//           this.call = this.base.subscribe(data => {              \n//              alert('Request Accepted');            \n//           });\n//         }\n//         else {\n//           alert('Request Rejected');\n//         }\n//       }\n//     })\n//   }\n// // }).catch(function (err) {\n// //   console.log(err.message);\n// });\n}\n}","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpResponse, HttpClient, HttpParams } from '@angular/common/http';\nimport { UserLog } from '../user/mylogin/userlog';\nimport { register } from '../user/signup/signuplog';\nimport { newUser } from '../admin/dashboard/create-user/newuser';\nimport { Medicine } from '../admin/medicine/medicine-create/addmedicine';\nimport { Package } from '../admin/medicine/package-create/addpackage';\nimport { Medicine2 } from '../admin/medicine/medicine-create/addmedicine2';\nimport { Package2 } from '../admin/medicine/package-create/addpackage2';\nimport { Wholesaler } from '../admin/dashboard/wholesaler/wholesaler';\nimport { Distrubuter } from '../admin/dashboard/distrubuter/dist';\nimport { Pharma } from '../admin/dashboard/pharma/pharma';\nimport { Manufacture } from '../admin/dashboard/manufacturer/manufacture';\nimport { Transporter } from '../admin/dashboard/transporter/transporter';\nimport { Transection } from '../admin/medicine/medicine-list/transection';\nimport { environment } from 'src/environments/environment';\n\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AuthService {\n  constructor(private http: HttpClient) {}\n  //uri = 'http://localhost:8080';\n  blockchainUrl = environment.URL;\n  apiuri = environment.APIURL;\n  batchUrl =environment.BATCHURL;\n  usereamil;\n  logout: string;\n  publickey:string;\n  userId:any;\n\n  // ----Logout\n  lout() {\n    this.logout = localStorage.getItem(\"x-token\");\n    localStorage.removeItem(\"x-token\");\n    return this.http.post(this.apiuri + \"/logOut\", {\n      token: this.logout\n    });\n  }\n  //---Logouut End\n\n  //signin to first table end\n  signin: register;\n  signup(signin) {\n    // console.log(signin);\n    return this.http.post(this.apiuri + \"/signup\", signin);\n  }\n//signin to first table end\n\n// signin to second table\n  sign: register;\n  saveSignup(sign) {\n    console.log('service',sign);\n    // console.log(signin);\n    return this.http.post(this.apiuri + \"/signup2\", sign);\n  }\n  //signin to second table end\n\n  //login api\n  userlog(ulog: UserLog): Observable<HttpResponse<UserLog>> {\n    return this.http.post<UserLog>(this.apiuri + \"/login\", ulog, {\n      observe: \"response\"\n    });\n  }\n  // login api end\n\n  //token\n  setTkn(tok: string) {\n    localStorage.setItem(\"x-token\", tok);\n  }\n  // token end\n  //get token\n  getTkn() {\n    return localStorage.getItem(\"x-token\");\n  }\n  //get token end\n\n\n\n\n  // newuser start\n  createuser(createuser: newUser) {\n    this.usereamil = localStorage.getItem(\"email\");\n    return this.http.post(\n      this.apiuri + \"/newuser\",\n     createuser,{params:{email:this.usereamil}}\n    );\n  }\n  //newuser end\n\n  // new wholesaler start\n  wholesaler(createwholesaler: Wholesaler) {\n    this.usereamil = localStorage.getItem(\"email\");\n    return this.http.post(\n      this.apiuri + \"/postWholesaler\",\n      createwholesaler,{params:{email:this.usereamil}}\n    );\n  }\n  // new wholesaler end\n\n  //Distributer Start\n\n  distributer(createdistributer: Distrubuter) {\n    this.usereamil = localStorage.getItem(\"email\");\n    return this.http.post(\n      this.apiuri + \"/postDistrubuter\",\n      createdistributer,{params:{email:this.usereamil}}\n    );\n  }\n\n  //Distributer End\n\n  //Pharma Start\n\n  pharma(createpharma: Pharma) { \n    this.usereamil = localStorage.getItem(\"email\");   \n    return this.http.post(\n      this.apiuri + \"/postPharma\",\n      createpharma,{params:{email:this.usereamil}}\n    );\n  }\n\n  //Pharma End\n\n  //Distributor Start\n  distributorqr(email) { \n    const object={\n      'email':email\n    }\n    this.usereamil = localStorage.getItem(\"email\");   \n    return this.http.post(`${this.apiuri}/sendResetMail`,object);\n    \n  }\n  wholesalerqr(eid,pass,actcode){\n    const object={\n      'email':eid,\n      'password':pass,\n\t  'actcode':actcode\n    }\n       \n    return this.http.post(`${this.apiuri}/resetPassword`,object);\n\n  }\n\n  //manufacture Start\n  manufacture(createmanufacture: Manufacture) {\n    this.usereamil = localStorage.getItem(\"email\");\n    return this.http.post(\n      this.apiuri + \"/postManufacture\",\n      createmanufacture,{params:{email:this.usereamil}}\n    );\n  }\n\n  //manufacture End\n\n //transporter Start\n  transporter(createtransporter: Medicine2) {\n    this.usereamil = localStorage.getItem(\"email\");\n    console.log(createtransporter);\n    return this.http.post(\n      this.apiuri + \"/postTransporter\",\n      createtransporter,{params:{email:this.usereamil}}\n    );\n  }\n\n  //transporter End\n  \n  \n  //transporter Start\n  packagetransporter(createtransporter: Package2) {\n    this.usereamil = localStorage.getItem(\"email\");\n    console.log(createtransporter);\n    return this.http.post(\n      this.apiuri + \"/postPackageTransporter\",\n      createtransporter,{params:{email:this.usereamil}}\n    );\n  }\n\n  //transporter End \n  \n  createmedicine(createmedicine: Medicine) {\n    \n    this.usereamil = localStorage.getItem(\"email\");\n    return this.http.post(\n      this.apiuri + \"/newmedicine\",\n      createmedicine,{params:{email:this.usereamil}}\n    );\n  }\n  \n  createpackage(createpackage: Package) {\n    \n    this.usereamil = localStorage.getItem(\"email\");\n    return this.http.post(\n      this.apiuri + \"/newpackage\",\n      createpackage,{params:{email:this.usereamil}}\n    );\n  }\n  \n  \n  \n   createmedicine2(createmedicine2: Medicine2) {\n    this.usereamil = localStorage.getItem(\"email\");\n    return this.http.post(\n      this.apiuri + \"/medicineStatusUpdate\",\n      createmedicine2,{params:{email:this.usereamil}}\n    );\n  }\n  \n  createpackage2(createpackage2: Package2) {\n    this.usereamil = localStorage.getItem(\"email\");\n    return this.http.post(\n      this.apiuri + \"/medicineStatusUpdate\",\n      createpackage2,{params:{email:this.usereamil}}\n    );\n  }\n  \n   medicineTransection(transection: Transection) {\n    this.usereamil = localStorage.getItem(\"email\");\n    return this.http.post(\n      this.apiuri + \"/transection1\",\n      transection,{params:{email:this.usereamil}}\n    );\n  }\n  \n  \n   getMedicineTransection() {\n    this.userId = localStorage.getItem(\"userId\");\n    console.log('server side userid',this.userId)\n    const obj = {\n\t\t\tid: this.userId    \n    };\n    return this.http.post(this.apiuri + \"/gettransection\",obj);\n  }\n\n  getRecieveMedicineTransection() {\n    this.userId = localStorage.getItem(\"userId\");\n\tthis.publickey  = localStorage.getItem(\"publicKey\");\n    console.log('server side userid',this.userId)\n    const obj = {\n\t\t\tid: this.userId,\n\t\t\tkey:this.publickey\n    };\n    return this.http.post(this.apiuri + \"/getrecievetransection\",obj);\n  }\n\n  /***************************get apis *********************************** */\n  \n  IsJsonString(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n       return false;\n    }\n    return true;\n}\n\n  //get user publickey\n  getpublickey(key){\t  \n\t   const obj = {\n\t\t\tpkey: key    \n    };\t   \n  return this.http.post(`${this.apiuri}/keymatch`, obj);\n}\n  \ngetallUser(){\n  return this.http.get(`${this.apiuri}/allUser`);\n}\n\ngetallWholesalerUser(){\n  return this.http.get(`${this.apiuri}/getwholesalerUser`);\n}\n\ngetallTransporterUser(){\n  return this.http.get(`${this.apiuri}/getTransporterUser`);\n}\ngetallDistributerUser(){\n  return this.http.get(`${this.apiuri}/getDistributerUser`);\n}\ngetallPharmaUser(){\n  return this.http.get(`${this.apiuri}/getPharmaUser`);\n}\ngetallManufactureUser(){\n  return this.http.get(`${this.apiuri}/getManufactureUser`);\n}\n\ngetUser(userid){\n\t\n\t const obj = {\n\t\t\tuserId: userid    \n    };\n  return this.http.post(`${this.apiuri}/getvalidUser`,obj);\n}\n\ngetvalidUser(){\n  return this.http.get(`${this.apiuri}/validUser`);\n}\n\n\n  getMedicineList() {\n    return this.http.get(this.apiuri + \"/getmedicinelist\");\n  }\n  \n  \n\tgetPackageList() {\n    return this.http.get(this.apiuri + \"/getpackagelist\");\n  }\n  \n  getMedicineUserId(){\n    this.userId = localStorage.getItem(\"userId\");\n    console.log('server side userid',this.userId)\n    const obj = {\n\t\t\tuserId: this.userId    \n    };\n    return this.http.post(`${this.apiuri}/getMedicineUserId`,obj);\n  }\n  \n  getPkgMedicineUserId(){\n    this.userId = localStorage.getItem(\"userId\");\n    console.log('server side userid',this.userId)\n    const obj = {\n\t\t\tuserId: this.userId    \n    };\n    return this.http.post(`${this.apiuri}/getPkgMedicineUserId`,obj);\n  }\n  getPackageUserId(){\n    this.userId = localStorage.getItem(\"userId\");\n    console.log('server side userid',this.userId)\n    const obj = {\n\t\t\tuserId: this.userId    \n    };\n    return this.http.post(`${this.apiuri}/getPackageUserId`,obj);\n  }\n  \n  getNotification() {\n    return this.http.get(this.apiuri + \"/getnotification\");\n  }\n  \n  getNotificationUserId()\n  {\n    this.userId = localStorage.getItem(\"userId\");\n\tthis.publickey = localStorage.getItem(\"publicKey\");\n    console.log('server side userid',this.userId)\n    const obj = {\n\t\t\tuserId: this.userId ,\n\t\t\tpublickey: this.publickey\n    };\n    return this.http.post(`${this.apiuri}/getNotificationUserId`,obj);\n  }\n  \n  \n  openpackage(id,publickey){\n    this.userId = localStorage.getItem(\"userId\");\n    console.log('server side userid',this.userId)\n    const obj = {\n\t\t\tuserId: this.userId,\n\t\t\tPackageId:id,\n\t\t\tpublickey:publickey\n    };\n    return this.http.post(`${this.apiuri}/openPackage`,obj);\n  }\n  \n  getMedicineStatus(id){\n\t  return this.http.get(`${this.apiuri}/getMedicineStatus/${id}`);\n  }  \n  \n  getPackageStatus(id){\n\t  return this.http.get(`${this.apiuri}/getPackageStatus/${id}`);\n  }  \n  \n getMedicineStatus2(id){\n\t  return this.http.get(`${this.apiuri}/getMedicineStatus2/${id}`);\n  }\n  \n  getMedicineStatus3(id){\n\t  return this.http.get(`${this.apiuri}/getMedicineStatus3/${id}`);\n  }\n  \n  getPackageStatus3(id){\n\t  return this.http.get(`${this.apiuri}/getPackageStatus3/${id}`);\n  }\n  \n  getPackageStatus2(id){\n\t  return this.http.get(`${this.apiuri}/getPackageStatus2/${id}`);\n  }\n\n  getMedicineId(id){   \n\t  return this.http.get(`${this.apiuri}/getByMedicineId/${id}`);\n  }\n  \n  getPackageId(id){   \n\t  return this.http.get(`${this.apiuri}/getByPackageId/${id}`);\n  }\n\n  transporterMedicine(id){   \n\t  return this.http.get(`${this.apiuri}/getTransporter/${id}`);\n  }\n  \n  transporterPackage(id){   \n\t  return this.http.get(`${this.apiuri}/getPackageTransporter/${id}`);\n  }\n\n\n  ////Distributor\n  getDistributerList() {\n    return this.http.get(this.apiuri + \"/getdistributerlist\");\n  }\n  //Distrubtor End\n\n  //Manufacture start\n  getManufactureList() {\n    return this.http.get(this.apiuri + \"/getmanufacturelist\");\n  }\n\n  //ManuFacture End\n\n  //WholeSaler Start\n  getWholesalerList() {\n    return this.http.get(this.apiuri + \"/getwholesalerlist\");\n  }\n  //WholeSaler End\n\n  //Pharma Start\n  getPharmaList() {\n    return this.http.get(this.apiuri + \"/getpharmalist\");\n  }\n  //Pharma End\n  \n     //transporter Start\n  getTransporterList() {\n    return this.http.get(this.apiuri + \"/gettransporterlist\");\n  }\n  //transporter End\n  \n  //transporter Start\n  getPackagetransporterList() {\n    return this.http.get(this.apiuri + \"/getpackagetransporterlist\");\n  }\n  //transporter End\n\n  getprofile(x: string) {\n    let params: HttpParams = new HttpParams().set(\"token\", x);\n    return this.http.get(this.apiuri + \"/profile\", { params });\n  }\n\n  /*******************************DELETE API*********************************/\n\n  deleteUser(id){\n    return this.http.get(`${this.apiuri}/deleteUser/${id}`);\n  }\n  \n    deletevalidUser(id){\n    return this.http.get(`${this.apiuri}/deletevalidUser/${id}`);\n  }\n  // delete medicine start\n\n  deleteMedicine(id) {\n    return this.http.get(`${this.apiuri}/deleteMedicine/${id}`);\n  }\n  \n  // delete medicine start\n\n  deleteNotification(id) {\n    return this.http.get(`${this.apiuri}/deleteNotification/${id}`);\n  }\n  // delete package start\n\n  deletePackage(id) {\n    return this.http.get(`${this.apiuri}/deletePackage/${id}`);\n  }\n  \n  \n  deletePackageTransport(id,publickey) {\n    const object={\n      'id':id,\n      'publickey':publickey\n    }\n       \n    return this.http.post(`${this.apiuri}/deletePackageTransport`,object);\n  }\n  // delete medicie\n\n  // delete Manufacture start\n\n  deleteManufacture(id) {\n    return this.http.get(`${this.apiuri}/deleteManufacture/${id}`);\n  }\n  // delete Manufacture ends\n\n  //Delete WholeSaler\n  deletewholesaler(id) {\n    return this.http.get(`${this.apiuri}/deleteWholesaler/${id}`);\n  }\n  //Delete WholeSaler\n\n  //Delete Pharma Start\n  deletePharma(id) {\n    return this.http.get(`${this.apiuri}/deletePharma/${id}`);\n  }\n  //Delete Pharma End\n  //Delete Pharma Start\n  deleteDistributer(id) {\n    return this.http.get(`${this.apiuri}/deleteDistrubuter/${id}`);\n  }\n  //Delete Pharma End\n\n  /*******************************************edit item ************************************** */\n   editMedicineStatus(id) {\n     //console.log(\"Edit Medicine\");\n    return this.http.get(`${this.apiuri}/editMedicineStatus/${id}`);\n  }\n  \n   editPackageStatus(id) {\n     //console.log(\"Edit Medicine\");\n    return this.http.get(`${this.apiuri}/editPackageStatus/${id}`);\n  }\n  \n  editPharma(id) {\n    return this.http.get(`${this.apiuri}/edit/${id}`);\n  }\n\n  editDistributor(id) {\n    return this.http.get(`${this.apiuri}/editDistributor/${id}`);\n  }\n\n  editWholesaler(id) {\n    return this.http.get(`${this.apiuri}/editWholesaler/${id}`);\n  }\n  editManufacture(id) {\n    return this.http.get(`${this.apiuri}/editManufacture/${id}`);\n  }\n  /************************************update fileds***********************************************/\n//-----------------------update user\nupdateProfile(firstName,lastName,mobileNo,email,mylocation,id) { \n\n  const obj = {\n    firstName:firstName,\n    lastName:lastName,\n    mobileNo:mobileNo,\n    email:email,\n    location:mylocation\n   \n  };\n  return this.http.post(`${this.apiuri}/updateprofile/${id}`, obj);\n\t//.subscribe(res => console.log(\"Done\"))\n}\n\n//-----------------------update user\nupdatePassword(eid,newPassword,id) { \n    const object={\n      'email':eid,\n      'password':newPassword,\n\t  'actcode':''\n    }\n       \n    return this.http.post(`${this.apiuri}/resetPassword`,object);\n\n\t//.subscribe(res => console.log(\"Done\"))\n}\n//----------------------update pharma\n  updatePharma(batchid,  medicineStatus,medicineQuality,id) {   \n    const obj = {\n      batchid: batchid,\n      medicineStatus: medicineStatus,\n      medicineQuality: medicineQuality\n      \n    };\n    this.http\n      .post(`${this.apiuri}/updatepharma/${id}`, obj)\n      .subscribe(res => console.log(\"Done\"));\n  }\n\n  //----------------------Update Wholesaler\n  updateWholesaler(batchid,shipper,reciver, id) {    \n    const obj = {\n      batchid: batchid,\n      shipper: shipper,\n      reciver: reciver\n      \n    };\n    this.http\n      .post(`${this.apiuri}/updateWholesaler/${id}`, obj)\n      .subscribe(res => console.log(\"Done\"));\n  }\n\n  updatManufacture(medicinedescription,medicineStatus,pickdate,packdate,reciver,quality, recivertype,id) {\n    \n    const obj = {\n      medicinedescription: medicinedescription,\n      medicineStatus: medicineStatus,\n      pickdate: pickdate,\n      packdate: packdate,\n      reciver: reciver,\n      quality: quality,\n      recivertype: recivertype\n    };\n    this.http\n      .post(`${this.apiuri}/updateManufacture/${id}`, obj)\n      .subscribe(res => console.log(\"Done\"));\n  }\n\n  //Update Distributor\n  updateDistributor(batchid,shipper, reciver, id) {\n    \n    const obj = {\n      batchid: batchid,\n        shipper: shipper,\n      reciver: reciver    \n    };\n    this.http\n      .post(`${this.apiuri}/updateDistributor/${id}`, obj)\n      .subscribe(res => console.log(\"Done\"));\n  }\n}","export class UserLog{\n\temail:string;\n\tpassword:string;\n\n\tconstructor(mob:string, pas:string)\n\t{\n\t\tthis.email = mob;\n\t\tthis.password = pas;\n\t}\n}\n\n\n\n","module.exports = \".container{\\n    margin-top:50px;\\n}\\n\\n#privatekey { \\n\\t-webkit-text-security: disc; \\n}\\n\\np{\\n\\tword-break: break-all;\\n}\\n\\ntable {\\n    width: 100%;\\n    background-color: white;   \\n  }\\n\\ntd {\\n\\tbackground: none;\\n}\\n\\nbutton{\\n\\twidth: 132px;\\n    background: #F4A018;\\n    border: 2px solid #F4A018;\\n    color: white;\\n    height: 35px;\\n    border-radius: 7px;\\n}\\n\\nbutton:hover{\\n\\tborder: 1px solid #3d6d79;\\n\\tbackground-color:#f4a018a8;\\n}\\n\\nth{\\n\\tborder: none !important;\\n\\tbackground-color: #3d6d79; \\n\\tcolor:White;\\n\\tfont-family: Muli,Helvetica Neue,Arial,sans-serif;\\n\\tfont-weight: 600;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlci9wcm9maWxlL3Byb2ZpbGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGVBQWU7QUFDbkI7O0FBRUE7Q0FDQywyQkFBMkI7QUFDNUI7O0FBRUE7Q0FDQyxxQkFBcUI7QUFDdEI7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsdUJBQXVCO0VBQ3pCOztBQUVGO0NBQ0MsZ0JBQWdCO0FBQ2pCOztBQUVBO0NBQ0MsWUFBWTtJQUNULG1CQUFtQjtJQUNuQix5QkFBeUI7SUFDekIsWUFBWTtJQUNaLFlBQVk7SUFDWixrQkFBa0I7QUFDdEI7O0FBRUE7Q0FDQyx5QkFBeUI7Q0FDekIsMEJBQTBCO0FBQzNCOztBQUVBO0NBQ0MsdUJBQXVCO0NBQ3ZCLHlCQUF5QjtDQUN6QixXQUFXO0NBQ1gsaURBQWlEO0NBQ2pELGdCQUFnQjtBQUNqQiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvcHJvZmlsZS9wcm9maWxlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVye1xuICAgIG1hcmdpbi10b3A6NTBweDtcbn1cblxuI3ByaXZhdGVrZXkgeyBcblx0LXdlYmtpdC10ZXh0LXNlY3VyaXR5OiBkaXNjOyBcbn1cblxucHtcblx0d29yZC1icmVhazogYnJlYWstYWxsO1xufVxuXG50YWJsZSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7ICAgXG4gIH1cblxudGQge1xuXHRiYWNrZ3JvdW5kOiBub25lO1xufVxuIFxuYnV0dG9ue1xuXHR3aWR0aDogMTMycHg7XG4gICAgYmFja2dyb3VuZDogI0Y0QTAxODtcbiAgICBib3JkZXI6IDJweCBzb2xpZCAjRjRBMDE4O1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBoZWlnaHQ6IDM1cHg7XG4gICAgYm9yZGVyLXJhZGl1czogN3B4O1xufVxuXG5idXR0b246aG92ZXJ7XG5cdGJvcmRlcjogMXB4IHNvbGlkICMzZDZkNzk7XG5cdGJhY2tncm91bmQtY29sb3I6I2Y0YTAxOGE4O1xufVxuXG50aHtcblx0Ym9yZGVyOiBub25lICFpbXBvcnRhbnQ7XG5cdGJhY2tncm91bmQtY29sb3I6ICMzZDZkNzk7IFxuXHRjb2xvcjpXaGl0ZTtcblx0Zm9udC1mYW1pbHk6IE11bGksSGVsdmV0aWNhIE5ldWUsQXJpYWwsc2Fucy1zZXJpZjtcblx0Zm9udC13ZWlnaHQ6IDYwMDtcbn0iXX0= */\"","module.exports = \"<app-dashboard></app-dashboard>\\n<div class=\\\"container\\\">\\n  <div class=\\\"col\\\">\\n    <div class=\\\"table-responsive\\\">\\n      <table class=\\\"table table-striped table-hover\\\">\\n        <tr>\\n          <th  colspan=\\\"2\\\"><h4>Welcome {{profile.firstName|uppercase}}</h4></th>\\n        </tr>\\n        <tr>\\n          <td><b>Public Key </b></td>\\n          <td>{{profile.publicKey}}</td>\\n        </tr>\\n        <tr>\\n          <td><b>Username </b></td>\\n          <td>{{profile.firstName}} {{profile.lastName}}</td>\\n        </tr>\\n        <tr>\\n          <td><b>Password </b></td>\\n          <td id=\\\"privatekey\\\">{{profile.password}}</td>\\n        </tr>\\n        <tr>\\n          <td><b>Email </b></td>\\n          <td>{{profile.email}}</td>\\n        </tr>\\n        <tr>\\n          <td><b>Email </b></td>\\n          <td>{{profile.email}}</td>\\n        </tr>\\n        <tr>\\n          <td><b>Role </b></td>\\n          <td> <span *ngIf=\\\"profile.role == 1\\\">\\n            Admin</span>\\n          <span *ngIf=\\\"profile.role == 2\\\">\\n            Manufacturer</span>\\n          <span *ngIf=\\\"profile.role == 3\\\">\\n            Wholesaler</span>\\n          <span *ngIf=\\\"profile.role == 4\\\">\\n            Distributor</span>\\n          <span *ngIf=\\\"profile.role == 5\\\">\\n            Pharma</span>\\n          <span *ngIf=\\\"profile.role == 6\\\">\\n            Transporter</span></td>\\n        </tr>\\n        <tr>\\n          <td class=\\\"form-group\\\">\\n            <button type=\\\"button\\\" data-toggle=\\\"modal\\\"\\n            data-target=\\\"#exampleModalCenter\\\">Edit Profile</button>\\n          </td>\\n          <td class=\\\"form-group\\\">\\n            <button type=\\\"button\\\" class=\\\"w-auto\\\" data-toggle=\\\"modal\\\"\\n            data-target=\\\"#changepassword\\\">Change Password</button>\\n          </td>\\n        </tr> \\n      </table>\\n    </div>  \\n  </div>\\n</div>\\n  <!-- <form>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <div class=\\\"form-group\\\">\\n          <label>Public Key</label>\\n          <p> {{profile.publicKey}}</p>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <div class=\\\"form-group\\\">\\n          <label>Username</label>\\n          <p>{{profile.firstName}} {{profile.lastName}}</p>\\n        </div>\\n      </div>\\n      <div class=\\\"col\\\">\\n        <div class=\\\"form-group\\\">\\n          <label>Password</label>\\n          <p id=\\\"privatekey\\\"> {{profile.password}}</p>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <div class=\\\"form-group\\\">\\n          <label>Email</label>\\n          <p>{{profile.email}}</p>\\n        </div>\\n      </div>\\n      <div class=\\\"col\\\">\\n        <div class=\\\"form-group\\\">\\n          <label>Role</label>\\n          <span *ngIf=\\\"profile.role == 1\\\">\\n            <p>Admin</p></span>\\n          <span *ngIf=\\\"profile.role == 2\\\">\\n            <p> Manufacturer</p></span>\\n          <span *ngIf=\\\"profile.role == 3\\\">\\n            <p> Wholesaler</p></span>\\n          <span *ngIf=\\\"profile.role == 4\\\">\\n            <p>Distributor</p></span>\\n          <span *ngIf=\\\"profile.role == 5\\\">\\n            <p>Pharma</p></span>\\n          <span *ngIf=\\\"profile.role == 6\\\">\\n            <p> Transporter</p></span>\\n        </div>\\n      </div>\\n    </div>\\n\\t\\t<div class=\\\"row\\\">\\n\\t\\t<div class=\\\"col\\\">\\n\\t\\t<h4 class=\\\"text-center\\\">Settings</h4>\\n\\t\\t<br/>\\n\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"row\\\">\\n\\t\\t<div class=\\\"col\\\">\\n\\t\\t&nbsp;\\n\\t\\t</div>\\n\\t\\t</div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <div class=\\\"form-group\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\"\\n              data-target=\\\"#exampleModalCenter\\\">Edit Profile</button>\\n        </div>\\n      </div>\\n\\t  <div class=\\\"col\\\">\\n        <div class=\\\"form-group\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\"\\n              data-target=\\\"#changepassword\\\">Change Password</button>\\n        </div>\\n      </div>\\n    </div>\\n  </form> -->\\n\\n\\n\\n\\n<!-- Update Pharma -->\\n<div class=\\\"container\\\">\\n    <!-- The Modal -->\\n    <div class=\\\"modal fade\\\" id=\\\"exampleModalCenter\\\">\\n      <div class=\\\"modal-dialog\\\">\\n        <div class=\\\"modal-content\\\">\\n          <!-- Modal body -->\\n          <div class=\\\"modal-body\\\">\\n            <form>\\n              <div class=\\\"form-group\\\">\\n              <label>First Name</label>\\n              <input type=\\\"text\\\"  #fname class=\\\"form-control required\\\" [(ngModel)]=\\\"profile.firstName\\\" name=\\\"first\\\">              \\n              </div>\\n              <div class=\\\"form-group\\\">\\n              <label>Last Name</label>\\n              <input type=\\\"text\\\"  #lname class=\\\"form-control required\\\" [(ngModel)]=\\\"profile.lastName\\\" name=\\\"last\\\">              \\n              </div>\\n              <div class=\\\"form-group\\\">\\n              <label>Mobile No</label>\\n              <input type=\\\"text\\\"  #mobile class=\\\"form-control required\\\" [(ngModel)]=\\\"profile.mobileNo\\\" name=\\\"mobile\\\">              \\n              </div>\\n              <div class=\\\"form-group\\\">\\n              <label>Location</label>\\n              <input type=\\\"text\\\"  #location class=\\\"form-control required\\\" [(ngModel)]=\\\"profile.location\\\" name=\\\"location\\\">              \\n              </div>                            \\n              <!-- Modal footer -->\\n              <div class=\\\"modal-footer\\\">\\n                <div class=\\\"form-group\\\">\\n                  <button type=\\\"button\\\" #closeProfile class=\\\"btn btn-danger\\\" (click)=\\\"myprofile(token);\\\" data-dismiss=\\\"modal\\\">Close</button>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"updateuserprofile(fname.value,lname.value,mobile.value,profile.email,location.value,profile.publicKey)\\\">Save changes</button>\\n                </div>\\n              </div>\\n            </form>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n   <!-- The Modal -->\\n    <div class=\\\"modal fade\\\" id=\\\"changepassword\\\">\\n      <div class=\\\"modal-dialog\\\">\\n        <div class=\\\"modal-content\\\">\\n          <!-- Modal body -->\\n          <div class=\\\"modal-body\\\">\\n            <form>\\n              <div class=\\\"form-group\\\">\\n              <label>Current Password</label>\\n              <input type=\\\"password\\\"  #curpass class=\\\"form-control required\\\" name=\\\"last\\\">              \\n              </div>\\n              <div class=\\\"form-group\\\">\\n              <label>New Password</label>\\n              <input type=\\\"password\\\"  #newpass class=\\\"form-control required\\\" name=\\\"last\\\">              \\n              </div>\\n              <div class=\\\"form-group\\\">\\n              <label>Confirm Password</label>\\n              <input type=\\\"password\\\"  #confirmpass class=\\\"form-control required\\\" name=\\\"mobile\\\">              \\n              </div>          \\n              <!-- Modal footer -->\\n              <div class=\\\"modal-footer\\\">\\n                <div class=\\\"form-group\\\">\\n                  <button #closeModal type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"myprofile(token);\\\" data-dismiss=\\\"modal\\\">Close</button>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"updateuserpassword(profile.email,curpass.value,newpass.value,confirmpass.value,profile.publicKey)\\\">Save changes</button>\\n                </div>\\n              </div>\\n            </form>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  \\n  \\n  </div>\\n  \"","import { Component, OnInit,ViewChild,ElementRef } from '@angular/core';\nimport { UserLog } from '../mylogin/userlog';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { ActivatedRoute,Router } from '@angular/router';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\nprofile:any=[];\ntoken:any;\neditlist: any = [];\nmypublickey:any;\nprivateKey:any;\nblockchain2: any = [];\nstatus: any = [];\nstatusValue: any;\nblockchain: any;\nitemId: any = [];\nrole:any;\n userlog:UserLog;\nbase;\n  call;\nblockchainUrl: any = this.http.blockchainUrl;\n @ViewChild('closeModal') closeModal: ElementRef\n @ViewChild('closeProfile') closeProfile: ElementRef\n  constructor(private http:AuthService,private route: ActivatedRoute,private router: Router,private http2: HttpClient) { }\n\n\n  ngOnInit() {\n    console.log('profile init');\n    \n    this.token =localStorage.getItem(\"id_token\");      \n     this.myprofile(this.token);\n  }\n\n  myprofile(token=this.token){\n\n        return this.http.getprofile(token).subscribe((data)=>{\n      this.profile=data;       \n\t  console.log(\"Profile data:\"+ JSON.stringify(data));\n    })\n  }\n\n  \n  //update edited api\n   updateuserprofile(fname,lname,mobile,email,location,publickey) { \n   if(fname == '')\n\t{\n\t\talert(\"Kindly add First Name!!\");\n\t\treturn false; \n\t}\n\tif(lname == '')\n\t{\n\t\talert(\"Kindly add Last Name!!\");\n\t\treturn false; \n\t}\n\tif(mobile == '' || mobile.length < 10 || isNaN(mobile))\n\t{\n\t\talert(\"Kindly add Valid Mobile number!!\");\n\t\treturn false; \n\t}\n\t\n\tif(location == '')\n\t{\n\t\talert(\"Kindly add Location Name!!\");\n\t\treturn false; \n\t}\n\t\n   \n     this.http.updateProfile(fname,lname,mobile,email,location,publickey).subscribe((data)=>{\n\t\t\talert('Profile data saved ');\n\t\t\tthis.closeProfile.nativeElement.click()\n     });\n\n   }\n\n    updateuserpassword(email,curpass,pass,confpass,publickey) { \n\tif(pass!=confpass)\n\t{\n\t\talert(\"Password do not match!!\");\n\t\treturn false; \n\t}\n\tif(pass.length < 6)\n\t{\n\t\talert(\"Password length should equals to or greater than six. !!\");\n\t\treturn false;\n\t}\n\t\n\tif(curpass == '')\n\t{\n\t\talert(\"Kindly add Current Password!!\");\n\t\treturn false; \n\t}\n\t this.userlog = new UserLog(email,curpass);    \n\t\n\tthis.http.userlog(this.userlog).subscribe( (data) => {\n\t\t\n     return this.http.updatePassword(email,pass,publickey).subscribe((data)=>{\n\t\t\t//this.myprofile(this.token);\n\t\tthis.closeModal.nativeElement.click(); //<-- here\n\t\t\talert('Password Changed Successfully');\n     });\n\t},     (err) => {\n               console.log(err);\n               alert(\"Current Password does not match.\");\n             },\n                 () => {\n                console.log(\"User Data Checks Out\");\n          });\n   }  \n \n\n// //     let that = this; \n//     this.mypublickey = localStorage.getItem(\"publicKey\");\n//     this.privateKey = localStorage.getItem(\"privateKey\");  \n//     this.role = localStorage.getItem(\"role\"); \n\n//      const Metadata = { \"action\": \"updateUserProfile\",\n//      \"payloaddata\": {\n//          \"name\": fname+' '+lname,\n//          \"email\": email,\n//          \"contactNumber\":mobile,\n//          \"role\":this.role,\n//          \"location\": {\n//              \"type\": 1,\n//              \"body\": {\n//                  \"address\": location\n//              }\n//          }\n//      },\n//      \"public\": this.mypublickey,\n//      \"private\": this.privateKey\n//  }\n\n//       const httpOptions = {\n//         headers: new HttpHeaders({\n//           'Content-Type': 'application/json'\n//         })\n//       }\n\n//       return this.http2.post(this.blockchainUrl, Metadata, httpOptions).subscribe(\n//         (val) => {\n\n//           console.log(\"POST call successful value returned in body\", val);\n//           this.blockchain = val;\n//           if (that.http.IsJsonString(this.blockchain.response.body)) {\n//             JSON.parse(this.blockchain.response.body).hasOwnProperty(\"data\");\n\n//             this.status = JSON.parse(this.blockchain.response.body);\n//             this.statusValue = this.status.data[0].status;\n//             this.itemId = this.status.data[0].id;\n//             if (this.statusValue == 'COMMITTED') {\n//               console.log(fname);\n             \n//               // return this.http.updateProfile(fname,lname,mobile,email,location,publickey).subscribe((data)=>{\n//               //   alert('data saved ');\n//               // });\n//             }\n//             else {\n//               alert(\"Process not completed\");\n//             }\n//           }\n//           else {\n\n//             that.http2.get(\"http://165.227.119.244:8008/batch_statuses?\" + this.blockchain.id + \"&wait\").subscribe((val) => {\n//               this.blockchain2 = val\n//               if (that.http.IsJsonString(this.blockchain2.body)) {\n//                 this.status = JSON.parse(this.blockchain2.body);\n//                 console.log('json value2', this.status.data[0].status);\n//                 this.statusValue = this.status.data[0].status;\n//                 this.itemId = this.status.data[0].id;\n//                 if (this.statusValue == 'COMMITTED') {\n//                   return this.http.updateProfile(fname,lname,mobile,email,location,publickey).subscribe((data)=>{\n//                     alert('data saved ');\n//                   });\n//                 }\n//                 else {\n//                   alert('Request Rejected');\n//                 }\n//               }\n//             })\n//           }\n//           // }).catch(function (err) {\n//           //   console.log(err.message);\n//         });\n    \n//   }\n\n      \n      // return this.http.updateProfile(fname,lname,mobile,email,location,publickey).subscribe((data)=>{\n      //   alert('data saved ');\n      // });\n      // updateuserprofile(fname,lname,mobile,email,location,publickey) {\n      \n      //   this.base = this.http.updateProfile(fname,lname,mobile,email,location,publickey);\n      //   this.call = this.base.subscribe(\n      //     data => {\n      //       alert(\"done\");\n    \n      //     },\n      //     err => {\n      //       console.log(err);\n      //     },\n      //     () => {\n      //       console.log(\"Done\");\n      //     }\n      //   );\n      // }\n\n\n\n\n\n\n\n    }\n        \n\n\n\n","module.exports = \"<!-- main app container -->\\n<div class=\\\"jumbotron\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-3\\\"></div>\\n            <div class=\\\"col-md-6 \\\">\\n               <h3>Email Verification </h3>\\n                <p> {{message}}</p>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { register } from './signuplog';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MustMatch } from './_helpers/must-match.validator';\nimport { Router,ActivatedRoute } from '@angular/router';\nimport { Observable, of } from \"rxjs\";\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\n\n@Component({\n  selector: 'app-activation',\n  templateUrl: './activation.component.html'\n  \n})\nexport class ActivationComponent implements OnInit {\n  bb;\n  // ab:Subscription;\n  constructor(private route: ActivatedRoute,private auth:AuthService,private formBuilder:FormBuilder,private router:Router ,private http: HttpClient ) { }\n  data;\n  message:any;\n  actcode:any;\n  blockchainUrl:any = this.auth.blockchainUrl+\"/activation\"\n \n  \n  \n \n  \n  ngOnInit() {\n    \n\tthis.actcode = this.route.snapshot.params['id'];\n\t\n\t\n\t// const Metadata = {\n  //       \"activation\": {\n\t// \t\t\"code\": this.actcode\n  //       }\n  //     }     \n  \n  // const httpOptions = {\n  //     headers: new HttpHeaders({\n  //       'Content-Type': 'application/json'\n        \n  //     })\n  //   };\n\t\n\t//  var x = this.http.post(this.blockchainUrl, Metadata,httpOptions).subscribe(\n  //      (val) => {\t\t   \n  //       alert(\"Account verfied successfully\");\n\t// \tthis.router.navigate(['/login']);\n\t    \n  //     },(err) => {\t\t   \n  //       console.log(err);\n\t//     this.message = \"Verfication code not match with any account. Kindly check and let us know.\";\n  //     }); \n}\n      \n    \n    \n    //file download code\n    private setting = {\n    element: {\n      dynamicDownload: null as HTMLElement\n    }\n  }\n  \n    \n    \n  \n  \n  \n    private dyanmicDownloadByHtmlTag(arg: {\n    fileName: string,\n    text: string\n\t\n  }) {\n    if (!this.setting.element.dynamicDownload) {\n      this.setting.element.dynamicDownload = document.createElement('a');\n    }\n    const element = this.setting.element.dynamicDownload;\n    const fileType = arg.fileName.indexOf('.json') > -1 ? 'text/json' : 'text/plain';\n    element.setAttribute('href', `data:${fileType};charset=utf-8,${encodeURIComponent(arg.text)}`);\n    element.setAttribute('download', arg.fileName);\n\n    var event = new MouseEvent(\"click\");\n    element.dispatchEvent(event);\n  }\n//filedownload code end\n  \n\n\n}\n","export class register {\n    firstName: string;\n    lastName: string;\n    role: string;\n    mobileNo: number;\n    location: string;\n    email: string;\n    password: string;\n    publicKey: string;\n    userId: string;\n    transectionId: string;\n    constructor(firstName: string, lastName: string, role: string, mobileNo: number, location: string, email: string, password: string, publicKey: string, userId: string, transectionId: string) {\n        this.firstName = firstName;\n        this.lastName = lastName;\n        this.role = role;\n        this.mobileNo = mobileNo;\n        this.location = location;\n        this.email = email;\n        this.password = password;\n        this.publicKey = publicKey;\n        this.userId = userId;\n        this.transectionId = transectionId;\n\n    }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  // URL: 'http://localhost:8080',\n   APIURL : 'http://localhost:10000',\n  // BATCHURL : 'http://localhost:8008',\n  URL : 'http://ec2-34-253-54-125.eu-west-1.compute.amazonaws.com:8080',\n  // APIURL : 'http://ec2-34-253-54-125.eu-west-1.compute.amazonaws.com/sarafuApi',\n  BATCHURL : 'http://ec2-34-253-54-125.eu-west-1.compute.amazonaws.com:8008',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}